using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Formats.Tar;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Xml.Linq;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Query.SqlExpressions;
using MudSharp.Database;
using MudSharp.Framework;
using MudSharp.FutureProg;
using MudSharp.GameItems;
using MudSharp.GameItems.Inventory.Plans;
using MudSharp.Models;
using MudSharp.RPG.Checks;
using static System.Net.Mime.MediaTypeNames;
using CraftPhase = MudSharp.Models.CraftPhase;

namespace DatabaseSeeder.Seeders;

public partial class ItemSeeder
{
	private void CreateProgs()
	{
		foreach (var prog in _context.FutureProgs)
		{
			_progs[prog.FunctionName] = prog;
		}

		void AddProg(string name, string category, string subcategory, ProgVariableTypes returnType, string comment, IEnumerable<(ProgVariableTypes Type, string Name)> parameters, string text)
		{
			if (_progs.ContainsKey(name))
			{
				return;
			}

			var prog = new FutureProg
			{
				FunctionName = name,
				Category = category,
				Subcategory = subcategory,
				ReturnType = (long)returnType,
				FunctionComment = comment,
				FunctionText = text,
				StaticType = (int)FutureProgStaticType.NotStatic,
				AcceptsAnyParameters = false
			};
			_context.FutureProgs.Add(prog);
			var index = 0;
			foreach (var (type, varname) in parameters)
			{
				prog.FutureProgsParameters.Add(new FutureProgsParameter
				{
					FutureProg = prog,
					ParameterIndex = index++,
					ParameterType = (long)type,
					ParameterName = varname
				});
			}

			_progs[name] = prog;
		}

		if (_context.VariableDefinitions.All(x => x.Property != "constructioncooldown"))
		{
			_context.VariableDefinitions.Add(new VariableDefinition
			{
				ContainedType = (long)ProgVariableTypes.DateTime,
				OwnerType = 8,
				Property = "constructioncooldown"
			});
			_context.VariableDefaults.Add(new VariableDefault
			{
				OwnerType = 8,
				Property = "constructioncooldown",
				DefaultValue = "<var>01/01/0001 00:00:00</var>"
			});
		}
		

		AddProg("CanDigGrave", "Crafting", "General", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], @"return IsTagged(@ch.Location.Terrain, ""Diggable Soil"")");
		AddProg("WhyCannotDigGrave", "Crafting", "General", ProgVariableTypes.Text, "", [(ProgVariableTypes.Character, "ch")], @"return ""There is no easily diggable soil here, so you cannot dig a grave.""");
		AddProg("CanDoConstructionCooldown", "Crafting", "Cooldowns", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], @"if (not(IsTagged(@ch.Location.Terrain, ""Terrestrial"")))
  return false
end if
var last as datetime
last = getregister(@ch, ""constructioncooldown"")
if (isnull(@last))
  return true
end if
return @last <= now()");
		AddProg("WhyCantDoConstructionCooldown", "Crafting", "Cooldowns", ProgVariableTypes.Text, "", [(ProgVariableTypes.Character, "ch")], @"if (not(IsTagged(@ch.Location.Terrain, ""Terrestrial"")))
  return ""The ground here is not suitable for laying down foundations for dwellings.""
end if
return ""You are still too fatigued from your recent construction-related exertion.""");
		AddProg("ApplyConstructionCooldown", "Crafting", "Cooldowns", ProgVariableTypes.Void, "", [(ProgVariableTypes.Character, "ch")], @"setregister @ch ""constructioncooldown"" (now() + 16h) ");
		AddProg("CanForageClay", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], @"if (@ch.Layer != ""GroundLevel"")
  return false
end if
if (IsSwimLayer(@ch.Location, @ch.Layer))
  return false
end if
if (IsTagged(@ch.Location.Terrain, ""Foragable Clay""))
  return false
end if
return true");
		AddProg("WhyCantForageClay", "Crafting", "Access", ProgVariableTypes.Text, "", [(ProgVariableTypes.Character, "ch")], @"if (@ch.Layer != ""GroundLevel"")
return ""You can only forage for clay when you are at ground level.""
end if
if (IsSwimLayer(@ch.Location, @ch.Layer))
return ""You cannot forage for clay while swimming or underwater.""
end if
return ""There is no useful clay that is accessible in the biome you're in.""");
		
		AddProg("HasCarpentryAdept", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], @$"return GetTrait(@ch, ToTrait(""{_traits["Carpentry"]?.Id ?? _traits["Carpenter"]?.Id ?? _traits.First().Value.Id}"")) >= 46");
		AddProg("HasCarpentryMaster", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return GetTrait(@ch, ToTrait(""{_traits["Carpentry"]?.Id ?? _traits["Carpenter"]?.Id ?? _traits.First().Value.Id}"")) >= 61");
		AddProg("HasLabouring", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Labouring"]?.Id ?? _traits["Labourer"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasCarpentry", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Carpentry"]?.Id ?? _traits["Carpenter"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasConstruction", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Constructing"]?.Id ?? _traits["Construction"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasButchering", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Butchering"]?.Id ?? _traits["Butcher"]?.Id ?? _traits["Surviving"]?.Id ?? _traits["Survival"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasCooking", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Cooking"]?.Id ?? _traits["Cook"]?.Id ?? _traits["Surviving"]?.Id ?? _traits["Survival"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasBlacksmithing", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Blacksmithing"]?.Id ?? _traits["Blacksmith"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasWeaponcrafting", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Armourcrafting"]?.Id ?? _traits["Armourer"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasArmourcrafting", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Weaponcrafting"]?.Id ?? _traits["Weaponsmith"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasSurvival", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Surviving"]?.Id ?? _traits["Survival"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasTailoring", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Tailoring"]?.Id ?? _traits["Tailor"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasLeatherworking", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Leathermaking"]?.Id ?? _traits["Tanner"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasLocksmithing", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Locksmithing"]?.Id ?? _traits["Locksmith"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasForestry", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Lumberjacking"]?.Id ?? _traits["Lumberjack"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasPottery", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Pottery"]?.Id ?? _traits["Potter"]?.Id ?? _traits.First().Value.Id})");
		AddProg("HasBasicPharmacology", "Crafting", "Access", ProgVariableTypes.Boolean, "", [(ProgVariableTypes.Character, "ch")], $@"return @ch.Skills.Any(x, @x.Id == {_traits["Pharmacology"]?.Id ?? _traits["Medicine"]?.Id ?? _traits.First().Value.Id})");

		_context.SaveChanges();
	}

	private Regex ConversionRegex = new Regex(@"(?<type>\w+?) - (?<details>.+)", RegexOptions.IgnoreCase);

	private Regex TagInputRegex = new Regex(@"(?<quantity>\d+)x an item with the (?<tag>.+) tag", RegexOptions.IgnoreCase);

	private Regex SimpleItemInputRegex = new Regex(@"(?<quantity>\d+)x (?<sdesc>.+) \(#(?<craftid>\d+)\)", RegexOptions.IgnoreCase);

	private Regex SimpleMaterialInputRegex = new Regex(@"(?<quantity>\d+)x an item with material tagged as (?<tag>.+)", RegexOptions.IgnoreCase);

	private Regex CommodityInputRegex = new(@"(?:(?<kgs>\d+) kilograms?)*\s*(?:(?<grams>\d+) grams?)* of (?<material>.+)\s*", RegexOptions.IgnoreCase);

	private Regex CommodityTagInputRegex = new(@"(?:(?<kgs>\d+) kilograms?)*\s*(?:(?<grams>\d+) grams?)* of a material tagged as (?<material>.+)\s*", RegexOptions.IgnoreCase);

	private Regex LiquidUseInputRegex = new(@"(?:(?<litres>\d+) litres?)*\s*(?:(?<millilitres>\d+) millilitres?)* of (?<liquid>.+)\s*", RegexOptions.IgnoreCase);

	private Regex LiquidTagUseInputRegex = new(@"(?:(?<litres>\d*\.*\d+) litres?)*\s*(?:(?<millilitres>\d+) millilitres?)* of a liquid tagged (?<liquid>.+)", RegexOptions.IgnoreCase);

	private CraftInput ConvertToInput(Craft craft, string text)
	{
		var match = ConversionRegex.Match(text);
		string definition, typename = match.Groups["type"].Value;
		Match innerMatch;
		switch (typename.ToLowerInvariant())
		{
			case "tag":
				innerMatch = TagInputRegex.Match(match.Groups["details"].Value);
				definition = new XElement("Definition",
					new XElement("TargetTagId", _tags[innerMatch.Groups["tag"].Value].Id),
					new XElement("Quantity", int.Parse(innerMatch.Groups["quantity"].Value))
				).ToString();
				break;
			case "commodity":
				innerMatch = CommodityInputRegex.Match(match.Groups["details"].Value);
				var weight = 
					innerMatch.Groups["kgs"].Length > 0 ? 1000.0 * int.Parse(innerMatch.Groups["kgs"].Value) : 0.0 +
					innerMatch.Groups["grams"].Length > 0 ? 1.0 * int.Parse(innerMatch.Groups["grams"].Value) : 0.0;
				definition = new XElement("Definition",
					new XElement("Material", _materials[innerMatch.Groups["material"].Value].Id),
					new XElement("Weight", weight),
					new XElement("CommodityPileTag", 0)
				).ToString();
				break;
			case "liquidtaguse":
				innerMatch = LiquidTagUseInputRegex.Match(match.Groups["details"].Value);
				var amount =
					innerMatch.Groups["litres"].Length > 0 ? double.Parse(innerMatch.Groups["litres"].Value) : 0.0 +
					innerMatch.Groups["millilitres"].Length > 0 ? 0.001 * double.Parse(innerMatch.Groups["millilitres"].Value) : 0.0;
				definition = new XElement("Definition",
					new XElement("Tag", _tags[innerMatch.Groups["liquid"].Value].Id),
					new XElement("Amount", amount)
				).ToString();
				break;
			case "liquiduse":
				innerMatch = LiquidUseInputRegex.Match(match.Groups["details"].Value);
				amount =
					innerMatch.Groups["litres"].Length > 0 ? int.Parse(innerMatch.Groups["litres"].Value) : 0.0 +
					innerMatch.Groups["millilitres"].Length > 0 ? 0.001 * int.Parse(innerMatch.Groups["millilitres"].Value) : 0.0;
				definition = new XElement("Definition",
					new XElement("Liquid", _liquids[innerMatch.Groups["liquid"].Value].Id),
					new XElement("Amount", amount)
				).ToString();
				break;
			case "commoditytag":
				innerMatch = CommodityTagInputRegex.Match(match.Groups["details"].Value);
				weight =
					innerMatch.Groups["kgs"].Length > 0 ? 1000.0 * int.Parse(innerMatch.Groups["kgs"].Value) : 0.0 +
					innerMatch.Groups["grams"].Length > 0 ? 1.0 * int.Parse(innerMatch.Groups["grams"].Value) : 0.0;
				definition = new XElement("Definition",
					new XElement("MaterialTag", _tags[innerMatch.Groups["material"].Value].Id),
					new XElement("Weight", weight),
					new XElement("CommodityPileTag", 0)
				).ToString();
				
				break;
			case "simpleitem":
				innerMatch = SimpleItemInputRegex.Match(match.Groups["details"].Value);
				definition = new XElement("Definition",
					new XElement("TargetItemId", _items[innerMatch.Groups["sdesc"].Value].Id),
					new XElement("Quantity", int.Parse(innerMatch.Groups["quantity"].Value))
				).ToString();
				break;
			case "simplematerial":
				innerMatch = SimpleMaterialInputRegex.Match(match.Groups["details"].Value);
				definition = new XElement("Definition",
					new XElement("TargetMaterialTag", _tags[innerMatch.Groups["tag"].Value].Id),
					new XElement("TargetMaterial", 0),
					new XElement("Quantity", int.Parse(innerMatch.Groups["quantity"].Value))
				).ToString();
				break;
			default:
				throw new ApplicationException("Unknown input type");
		}

		var input = new CraftInput
		{
			Craft = craft,
			InputQualityWeight = 1.0,
			OriginalAdditionTime = DateTime.UtcNow,
			Definition = definition,
			InputType = typename
		};
		_context.CraftInputs.Add(input);
		return input;
	}

	private Regex ToolRegex = new(@"(?<state>.+) - (?<details>.+)", RegexOptions.IgnoreCase);

	private Regex TagToolRegex = new(@"an item with the (?<tag>.+) tag", RegexOptions.IgnoreCase);

	private CraftTool ConvertToTool(Craft craft, string text)
	{
		var match = ConversionRegex.Match(text);
		var toolMatch = ToolRegex.Match(match.Groups["details"].Value);
		string definition, typename = match.Groups["type"].Value;
		Match innerMatch;
		DesiredItemState state;
		if (!toolMatch.Groups["state"].Value.TryParseEnum(out state))
		{
			throw new ApplicationException("Unknown State");
		}
		switch (typename.ToLowerInvariant())
		{
			case "tagtool":
				innerMatch = TagToolRegex.Match(toolMatch.Groups["details"].Value);
				definition = new XElement("Definition",
					new XElement("TargetItemTag", _tags[innerMatch.Groups["tag"].Value].Id)
				).ToString();
				break;
			default:
				throw new ApplicationException("Unknown tool type");
		}
		var tool = new CraftTool()
		{
			Craft = craft,
			OriginalAdditionTime = DateTime.UtcNow,
			ToolType = typename,
			ToolQualityWeight = 1.0,
			UseToolDuration = true,
			DesiredState = (int)state,
			Definition = definition
		};
		_context.CraftTools.Add(tool);
		return tool;
	}

	private Regex SimpleProductRegex = new(@"(?<quantity>\d+)x (?<sdesc>.+) \(#(?<craftid>\d+)\)", RegexOptions.IgnoreCase);

	private Regex CommodityProductRegex = new(@"(?:(?<kgs>\d*\.*\d+) kilograms?)*\s*(?:(?<grams>\d*\.*\d+) grams?)* of (?<material>.+)\s* commodity", RegexOptions.IgnoreCase);

	private Regex ScrapInputProductRegex = new(@"(?<percentage>[0-9,.]+%) by weight of (?<inputdesc>.+) \(\$i(?<input>\d+)\)", RegexOptions.IgnoreCase);

	private Regex UnusedInputProductRegex = new(@"(?<percentage>[0-9,.]+%) of (?<inputdesc>.+) \(\$i(?<input>\d+)\)", RegexOptions.IgnoreCase);

	private Regex BloodTypingProductRegex = new(@"test (?:(?<litres>\d*\.*\d+) litres?)*\s*(?:(?<millilitres>\d+) millilitres?)* of (?<liquid>.+) \(\$i(?<input>\d+)\) against the (?<model>.+) blood model", RegexOptions.IgnoreCase);

	private CraftProduct ConvertToProduct(Craft craft, string text, bool isFailProduct, int? materialDefiningInputIndex = null)
	{
		var match = ConversionRegex.Match(text);
		string definition, typename = match.Groups["type"].Value;
		Match innerMatch;
		switch (typename.ToLowerInvariant())
		{
			case "simpleproduct":
				innerMatch = SimpleProductRegex.Match(match.Groups["details"].Value);
				if (!_items.ContainsKey(innerMatch.Groups["sdesc"].Value))
				{
					return null;
				}
				definition = new XElement("Definition",
					new XElement("ProductProducedId", _items[innerMatch.Groups["sdesc"].Value].Id),
					new XElement("Quantity", int.Parse(innerMatch.Groups["quantity"].Value)),
					new XElement("Skin", 0)
				).ToString();
				break;
			case "commodityproduct":
				innerMatch = CommodityProductRegex.Match(match.Groups["details"].Value);
				var weight =
					innerMatch.Groups["kgs"].Length > 0 ? 1000.0 * double.Parse(innerMatch.Groups["kgs"].Value) : 0.0 +
					innerMatch.Groups["grams"].Length > 0 ? 1.0 * double.Parse(innerMatch.Groups["grams"].Value) : 0.0;
				definition = new XElement("Definition",
					new XElement("Material", _materials[innerMatch.Groups["material"].Value].Id),
					new XElement("Weight", weight),
					new XElement("Tag", 0)
				).ToString();
				break;
			case "scrapinput":
				innerMatch = ScrapInputProductRegex.Match(match.Groups["details"].Value);
				if (!innerMatch.Groups["percentage"].Value.TryParsePercentage(out var percentage))
				{
					throw new ApplicationException("Invalid percentage");
				}

				var input = craft.CraftInputs.ElementAt(int.Parse(innerMatch.Groups["input"].Value)-1);
				definition = new XElement("Definition",
					new XElement("WhichInputId", input.Id),
					new XElement("PercentageRecovered", percentage),
					new XElement("Tag", 0)
				).ToString();
				break;
			case "bloodtyping":
				innerMatch = BloodTypingProductRegex.Match(match.Groups["details"].Value);
				input = craft.CraftInputs.ElementAt(int.Parse(innerMatch.Groups["input"].Value) - 1);
				definition = new XElement("Definition",
					new XElement("WhichInputId", input.Id),
					new XElement("BloodModel", _context.BloodModels.First(x => x.Name == innerMatch.Groups["model"].Value).Id)
				).ToString();
				break;
			case "unusedinput":
				innerMatch = UnusedInputProductRegex.Match(match.Groups["details"].Value);
				if (!innerMatch.Groups["percentage"].Value.TryParsePercentage(out percentage))
				{
					throw new ApplicationException("Invalid percentage");
				}

				input = craft.CraftInputs.ElementAt(int.Parse(innerMatch.Groups["input"].Value) - 1);
				definition = new XElement("Definition",
					new XElement("WhichInputId", input.Id),
					new XElement("PercentageRecovered", percentage)
				).ToString();
				break;
			default:
				throw new ApplicationException("Unknown product type");
		}
		return new CraftProduct()
		{
			Craft = craft,
			IsFailProduct = isFailProduct,
			OriginalAdditionTime = DateTime.UtcNow,
			ProductType = typename,
			Definition = definition,
			MaterialDefiningInputIndex = materialDefiningInputIndex
		};
	}

	private MudSharp.Models.Craft AddCraft(string name, string category, string blurb, string action, string itemsdesc, string appearProg, string? canUseProg, string? whyCantProg, string? onFinishProg, MudSharp.Models.TraitDefinition trait, Difficulty difficulty, Outcome threshold, int freeChecks, int failPhase, bool interrupatable, IEnumerable<(int Seconds, string Echo, string FailEcho)> phases, IEnumerable<string> inputs, IEnumerable<string> tools, IEnumerable<string> products, IEnumerable<string> failProducts, List<(int Product, int Input)> productMaterialInputIndexes = null, List<(int Product, int Input)> failProductMaterialInputIndexes = null)
	{
		if (!InputsAreValid(inputs, tools, products, failProducts))
		{
			return null;
		}

		var dbitem = new MudSharp.Models.Craft
		{
			Id = _nextId++,
			RevisionNumber = 0,
			EditableItem = new EditableItem
			{
				RevisionNumber = 0,
				RevisionStatus = 4,
				BuilderAccountId = _dbAccount.Id,
				BuilderDate = _now,
				BuilderComment = "Auto-generated by the system",
				ReviewerAccountId = _dbAccount.Id,
				ReviewerComment = "Auto-generated by the system",
				ReviewerDate = _now
			},
			Name = name,
			Category = category,
			Blurb =	blurb,
			ActionDescription = action,
			ActiveCraftItemSdesc = itemsdesc,
			AppearInCraftsListProgId = _progs[appearProg].Id,
			CanUseProgId = canUseProg is not null ? _progs[canUseProg].Id : null,
			WhyCannotUseProgId = whyCantProg is not null ? _progs[whyCantProg].Id : null,
			OnUseProgCompleteId = onFinishProg is not null ? _progs[onFinishProg].Id : null,
			CheckTrait = trait,
			CheckDifficulty = (int)difficulty,
			FailThreshold = (int)threshold,
			FreeSkillChecks = freeChecks,
			FailPhase = failPhase,
			Interruptable = interrupatable,
			QualityFormula = "5 + (outcome/3) + (variable/20)",
			CheckQualityWeighting = 1.0,
			InputQualityWeighting = 1.0,
			ToolQualityWeighting = 1.0,
			IsPracticalCheck = true
		};
		_context.Crafts.Add(dbitem);
		var i = 1;
		foreach (var phase in phases)
		{
			dbitem.CraftPhases.Add(new CraftPhase
			{
				Craft = dbitem,
				Echo = phase.Echo,
				FailEcho = phase.FailEcho,
				PhaseLengthInSeconds = phase.Seconds,
				PhaseNumber = i++
			});
		}

		foreach (var input in inputs)
		{
			var dbinput = ConvertToInput(dbitem, input);
			if (dbinput is null)
			{
				return null;
			}
			dbitem.CraftInputs.Add(dbinput);
		}

		foreach (var tool in tools)
		{
			var dbtool = ConvertToTool(dbitem, tool);
			if (dbtool is null)
			{
				return null;
			}
			dbitem.CraftTools.Add(dbtool);
		}

		// We have to save before products because some of the product types depend on input IDs
		_context.SaveChanges();

		i = 0;
		foreach (var product in products)
		{
			i++;
			var dbproduct = ConvertToProduct(dbitem, product, false, productMaterialInputIndexes?.Any(x => x.Product == i) == true ? productMaterialInputIndexes.First(x => x.Product == 1).Input : null);
			if (dbproduct is null)
			{
				return null;
			}
			dbitem.CraftProducts.Add(dbproduct);
		}

		i = 0;
		foreach (var product in failProducts)
		{
			i++;
			var dbproduct = ConvertToProduct(dbitem, product, true, failProductMaterialInputIndexes?.Any(x => x.Product == i) == true ? failProductMaterialInputIndexes.First(x => x.Product == 1).Input : null);
			if (dbproduct is null)
			{
				return null;
			}
			dbitem.CraftProducts.Add(dbproduct);
		}
		return dbitem;
	}

	bool InputsAreValid(IEnumerable<string> inputs, IEnumerable<string> tools, IEnumerable<string> products, IEnumerable<string> failproducts)
	{
		foreach (var item in inputs)
		{
			var match = ConversionRegex.Match(item);
			var typename = match.Groups["type"].Value;
			Match innerMatch;
			switch (typename)
			{
				case "tag":
					innerMatch = TagInputRegex.Match(match.Groups["details"].Value);
					if (!_tags.ContainsKey(innerMatch.Groups["tag"].Value))
					{
						return false;
					}

					continue;
				case "commodity":
					innerMatch = CommodityInputRegex.Match(match.Groups["details"].Value);
					if (!_materials.ContainsKey(innerMatch.Groups["material"].Value))
					{
						return false;
					}

					continue;
				case "liquidtaguse":
					innerMatch = LiquidTagUseInputRegex.Match(match.Groups["details"].Value);
					if (!_tags.ContainsKey(innerMatch.Groups["liquid"].Value))
					{
						return false;
					}

					continue;
				case "liquiduse":
					innerMatch = LiquidUseInputRegex.Match(match.Groups["details"].Value);
					if (!_liquids.ContainsKey(innerMatch.Groups["liquid"].Value))
					{
						return false;
					}

					continue;
				case "commoditytag":
					innerMatch = CommodityTagInputRegex.Match(match.Groups["details"].Value);
					if (!_tags.ContainsKey(innerMatch.Groups["material"].Value))
					{
						return false;
					}

					continue;
				case "simpleitem":
					innerMatch = SimpleItemInputRegex.Match(match.Groups["details"].Value);
					if (!_items.ContainsKey(innerMatch.Groups["sdesc"].Value))
					{
						return false;
					}

					continue;
				case "simplematerial":
					innerMatch = SimpleMaterialInputRegex.Match(match.Groups["details"].Value);
					if (!_tags.ContainsKey(innerMatch.Groups["tag"].Value))
					{
						return false;
					}

					continue;
			}
		}

		foreach (var item in tools)
		{
			var match = ConversionRegex.Match(item);
			var toolMatch = ToolRegex.Match(match.Groups["details"].Value);
			string definition, typename = match.Groups["type"].Value;
			switch (typename.ToLowerInvariant())
			{
				case "tagtool":
					var innerMatch = TagToolRegex.Match(toolMatch.Groups["details"].Value);
					if (!_tags.ContainsKey(innerMatch.Groups["tag"].Value))
					{
						return false;
					}

					continue;
			}
		}

		foreach (var item in products)
		{
			var match = ConversionRegex.Match(item);
			string definition, typename = match.Groups["type"].Value;
			Match innerMatch;
			switch (typename.ToLowerInvariant())
			{
				case "simpleproduct":
					innerMatch = SimpleProductRegex.Match(match.Groups["details"].Value);
					if (!_items.ContainsKey(innerMatch.Groups["sdesc"].Value))
					{
						return false;
					}

					continue;
				case "commodityproduct":
					innerMatch = CommodityProductRegex.Match(match.Groups["details"].Value);
					if (!_materials.ContainsKey(innerMatch.Groups["material"].Value))
					{
						return false;
					}

					continue;
			}
		}

		foreach (var item in failproducts)
		{
			var match = ConversionRegex.Match(item);
			string definition, typename = match.Groups["type"].Value;
			Match innerMatch;
			switch (typename.ToLowerInvariant())
			{
				case "simpleproduct":
					innerMatch = SimpleProductRegex.Match(match.Groups["details"].Value);
					if (!_items.ContainsKey(innerMatch.Groups["sdesc"].Value))
					{
						return false;
					}

					continue;
				case "commodityproduct":
					innerMatch = CommodityProductRegex.Match(match.Groups["details"].Value);
					if (!_materials.ContainsKey(innerMatch.Groups["material"].Value))
					{
						return false;
					}

					continue;
			}
		}

		return true;
	}

	private void SeedCrafts()
	{
		// Reset nextID
		_nextId = _context.Crafts.Select(x => x.Id).ToList().DefaultIfEmpty(0).Max(x => x) + 1;

		AddCraft("sew padded vest", "Armorcrafting", "sew a padded cloth vest", "sewing a padded vest", "a padded vest armormaking event", "HasTailoring", null, null, null, _traits["Tailoring"] ?? _traits["Tailor"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 6, false, [(35, "$0 lay|lays out $i1 and begin|begins to divide it into three pieces - one large, and two smaller sheets, cutting away with $t2. Additionally, when that is done, $0 pick|picks up $t1 and thread|threads $i2 through the needle eye.", "$0 lay|lays out $i1 and begin|begins to divide it into three pieces - one large, and two smaller sheets, cutting away with $t2. Additionally, when that is done, $0 pick|picks up $t1 and thread|threads $i2 through the needle eye."), (30, "$0 set|sets aside the smaller pieces of cloth for the moment, focusing on the larger sheet. $0 further cut|cuts that larger piece into two more pieces, and then sew|sews those pieces together to form a rough sort of case.", "$0 set|sets aside the smaller pieces of cloth for the moment, focusing on the larger sheet. $0 further cut|cuts that larger piece into two more pieces, and then sew|sews those pieces together to form a rough sort of case."), (35, "$0 liberally stuff|stuffs that cloth case with $i3 until it is almost stiff and inflexible, then sew|sews it shut with $t1 to create a padded tube with a hole for someone's head, and two smaller holes for someone's arms.", "$0 liberally stuff|stuffs that cloth case with $i3 until it is almost stiff and inflexible, then sew|sews it shut with $t1 to create a padded tube with a hole for someone's head, and two smaller holes for someone's arms."), (40, "$0 turn|turns to the smaller sheets of cloth, cutting, sewing and padding these sheets until they are amply padded cloth tubes.", "$0 turn|turns to the smaller sheets of cloth, cutting, sewing and padding these sheets until they are amply padded cloth tubes."), (40, "$0 finally begin|begins to sew the padded sleeves to the shoulder arm-holes of the vest, using $i2 to tightly fix them in place.", "$0 finally begin|begins to sew the padded sleeves to the shoulder arm-holes of the vest, using $i2 to tightly fix them in place."), (40, "$0 hold|holds up $p1, checking the piece over critically before setting it aside.", "Unfortunately, shoddy craftsmanship means that $0 end|ends up shredding the terrible vest for $f1.")], ["CommodityTag - 1 kilogram 500 grams of a material tagged as Fabric", "Tag - 1x an item with the Thread tag", "Tag - 50x an item with the Padding tag"], ["TagTool - Held - an item with the Sewing Needle tag", "TagTool - Held - an item with the Scissors tag"], ["SimpleProduct - 1x a padded @material gambeson with long sleeves (#274)"], ["UnusedInput - 45.00% of 50x an item with the Padding tag ($i3)"], [(1, 1)]);
		AddCraft("sew padded cap", "Armorcrafting", "sew a padded cloth cap", "sewing a padded cap", "a padded cap armormaking event", "HasTailoring", null, null, null, _traits["Tailoring"] ?? _traits["Tailor"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(35, "$0 lay|lays out $i1 and begin|begins to divide it into two smaller pieces, cutting with $t2.", "$0 lay|lays out $i1 and begin|begins to divide it into two smaller pieces, cutting with $t2."), (30, "$0 set|sets aside the pattern-shaped pieces of cloth for a moment and instead reach|reaches for $t1 and $i2, threading the end of the thread through the needle.", "$0 set|sets aside the pattern-shaped pieces of cloth for a moment and instead reach|reaches for $t1 and $i2, threading the end of the thread through the needle."), (35, "$0 begin|begins to stitch the two smaller pieces of cloth together, leaving the bowl-shaped case open at one end.", "$0 begin|begins to stitch the two smaller pieces of cloth together, leaving the bowl-shaped case open at one end."), (40, "$0 begin|begins to stuff the case full of $i3 until it is stiff and firmly padded, then stitch|stitches the opening shut.", "$0 begin|begins to stuff the case full of $i3 until it is stiff and firmly padded, then stitch|stitches the opening shut."), (40, "$0 hold|holds up $p1, checking the piece over critically before setting it aside.", "Unfortunately, shoddy craftsmanship means that $0 end|ends up shredding the terrible cap for $f1.")], ["CommodityTag - 500 grams of a material tagged as Fabric", "Tag - 1x an item with the Thread tag", "Tag - 20x an item with the Padding tag"], ["TagTool - Held - an item with the Sewing Needle tag", "TagTool - Held - an item with the Scissors tag"], ["SimpleProduct - 1x a padded @material arming cap (#275)"], ["UnusedInput - 45.00% of 50x an item with the Padding tag ($i3)"], [(1, 1)]);
		AddCraft("sew padded gloves", "Armorcrafting", "sew padded cloth gloves", "sewing padded gloves", "padded gloves armormaking event", "HasTailoring", null, null, null, _traits["Tailoring"] ?? _traits["Tailor"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(35, "$0 lay|lays out $i1 and begin|begins to divide it into two smaller pieces, cutting with $t2.", "$0 lay|lays out $i1 and begin|begins to divide it into two smaller pieces, cutting with $t2."), (30, "$0 set|sets aside the pattern-shaped pieces of cloth for a moment and instead reach|reaches for $t1 and $i2, threading the end of the thread through the needle.", "$0 set|sets aside the pattern-shaped pieces of cloth for a moment and instead reach|reaches for $t1 and $i2, threading the end of the thread through the needle."), (35, "$0 begin|begins to stitch the two smaller pieces of cloth together, leaving the mitten-shaped case open at one end.", "$0 begin|begins to stitch the two smaller pieces of cloth together, leaving the mitten-shaped case open at one end."), (40, "$0 begin|begins to stuff the case full of $i3 until it is stiff and firmly padded, then stitch|stitches the opening shut.", "$0 begin|begins to stuff the case full of $i3 until it is stiff and firmly padded, then stitch|stitches the opening shut."), (40, "$0 hold|holds up $p1, checking the piece over critically before setting it aside.", "Unfortunately, shoddy craftsmanship means that $0 end|ends up shredding the dodgy gloves for $f1.")], ["CommodityTag - 500 grams of a material tagged as Fabric", "Tag - 1x an item with the Thread tag", "Tag - 20x an item with the Padding tag"], ["TagTool - Held - an item with the Sewing Needle tag", "TagTool - Held - an item with the Scissors tag"], ["SimpleProduct - 1x a pair of padded @material gloves (#276)"], ["UnusedInput - 45.00% of 50x an item with the Padding tag ($i3)"], [(1, 1)]);
		AddCraft("sew padded pants", "Armorcrafting", "sew padded cloth pants", "sewing padded pants", "padded pants armormaking event", "HasTailoring", null, null, null, _traits["Tailoring"] ?? _traits["Tailor"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(35, "$0 lay|lays out $i1 and begin|begins to divide it into several smaller pieces, cutting with $t2.", "$0 lay|lays out $i1 and begin|begins to divide it into several smaller pieces, cutting with $t2."), (35, "$0 set|sets aside the pattern-shaped pieces of cloth for a moment and instead reach|reaches for $t1 and $i2, threading the end of the thread through the needle.", "$0 set|sets aside the pattern-shaped pieces of cloth for a moment and instead reach|reaches for $t1 and $i2, threading the end of the thread through the needle."), (30, "$0 begin|begins to stitch pieces of cloth together, roughly forming two tubes of cloth that have slits at one end left open.", "$0 begin|begins to stitch pieces of cloth together, roughly forming two tubes of cloth that have slits at one end left open."), (35, "$0 begin|begins to stuff the tubes full of $i3 until they are stiff and firmly padded, then stitch|stitches the side opening shut.", "$0 begin|begins to stuff the tubes full of $i3 until they are stiff and firmly padded, then stitch|stitches the side opening shut."), (40, "$0 arrange|arranges the tubes of padded cloth and stitch|stitches them together with a bit of scrap cloth, forming a rough pair of pants.", "$0 arrange|arranges the tubes of padded cloth and stitch|stitches them together with a bit of scrap cloth, forming a rough pair of pants."), (40, "$0 hold|holds up $p1, checking the piece over critically before setting it aside.", "Unfortunately, shoddy craftsmanship means that $0 end|ends up shredding the dodgy pants for $f1.")], ["CommodityTag - 1 kilogram 500 grams of a material tagged as Fabric", "Tag - 1x an item with the Thread tag", "Tag - 50x an item with the Padding tag"], ["TagTool - Held - an item with the Sewing Needle tag", "TagTool - Held - an item with the Scissors tag"], ["SimpleProduct - 1x a pair of bulky, padded @material trousers (#277)"], ["UnusedInput - 45.00% of 50x an item with the Padding tag ($i3)"], [(1, 1)]);
		AddCraft("make studded vest", "Armorcrafting", "add studs to a padded vest", "making a studded vest", "studded vest armormaking event", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 4, false, [(35, "$0 lay|lays out $i1, then begin|begins to thread $i2 through the eye of $t1.", "$0 lay|lays out $i1, then begin|begins to thread $i2 through the eye of $t1."), (35, "$0 begin|begins to place $i3 along $i1 at even intervals, and use|uses $t1 to stitch them to the outer layer of the vest.", "$0 begin|begins to place $i3 along $i1 at even intervals, and use|uses $t1 to stitch them to the outer layer of the vest."), (30, "$0 continue|continues to stitch $i3 to $i1, flipping the piece over to stitch studs to the back and sides.", "$0 continue|continues to stitch $i3 to $i1, flipping the piece over to stitch studs to the back and sides."), (40, "$0 cut|cuts excess thread away with $t2, then hold|holds up $p1 for inspection.", "$0 cut|cuts excess thread away with $t2, then hold|holds up the vest for inspection. Unfortunately, it has been pricked to shreds during the process, and only $f1 is salvagable.")], ["Tag - 1x an item with the Padded Vest tag", "Tag - 1x an item with the Thread tag", "Tag - 20x an item with the Armouring Studs tag"], ["TagTool - Held - an item with the Sewing Needle tag", "TagTool - Held - an item with the Scissors tag"], ["SimpleProduct - 1x a long-sleeved, studded @material gambeson (#278)"], ["UnusedInput - 40.00% of 20x an item with the Armouring Studs tag ($i3)"], [(1, 1)]);
		AddCraft("make studded gloves", "Armorcrafting", "add studs to padded gloves", "making studded gloves", "studded gloves armormaking event", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 4, false, [(35, "$0 lay|lays out $i1, then begin|begins to thread $i2 through the eye of $t1.", "$0 lay|lays out $i1, then begin|begins to thread $i2 through the eye of $t1."), (35, "$0 begin|begins to place $i3 along $i1 at even intervals, and use|uses $t1 to stitch them to the outer layer of the gloves.", "$0 begin|begins to place $i3 along $i1 at even intervals, and use|uses $t1 to stitch them to the outer layer of the gloves."), (30, "$0 continue|continues to stitch $i3 to $i1, flipping the piece over to stitch studs to the back and sides while leaving the palms stud-free.", "$0 continue|continues to stitch $i3 to $i1, flipping the piece over to stitch studs to the back and sides while leaving the palms stud-free."), (40, "$0 cut|cuts excess thread away with $t2, then hold|holds up $p1 for inspection.", "$0 cut|cuts excess thread away with $t2, then hold|holds up the gloves for inspection. Unfortunately, it has been pricked to shreds during the process, and only $f1 is salvagable.")], ["Tag - 1x an item with the Padded Gloves tag", "Tag - 1x an item with the Thread tag", "Tag - 10x an item with the Armouring Studs tag"], ["TagTool - Held - an item with the Sewing Needle tag", "TagTool - Held - an item with the Scissors tag"], ["SimpleProduct - 1x a pair of metal-studded cloth gloves (#279)"], ["UnusedInput - 45.00% of 10x an item with the Armouring Studs tag ($i3)"], [(1, 1)]);
		AddCraft("make studded pants", "Armorcrafting", "add studs to padded pants", "making studded pants", "studded pants armormaking event", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 4, false, [(35, "$0 lay|lays out $i1, then begin|begins to thread $i2 through the eye of $t1.", "$0 lay|lays out $i1, then begin|begins to thread $i2 through the eye of $t1."), (35, "$0 begin|begins to place $i3 along $i1 at even intervals, and use|uses $t1 to stitch them to the outer layer of the pants.", "$0 begin|begins to place $i3 along $i1 at even intervals, and use|uses $t1 to stitch them to the outer layer of the pants."), (30, "$0 continue|continues to stitch $i3 to $i1, flipping the piece over to stitch studs to the back and sides while leaving the back of the knee stud-free.", "$0 continue|continues to stitch $i3 to $i1, flipping the piece over to stitch studs to the back and sides while leaving the back of the knee stud-free."), (40, "$0 cut|cuts excess thread away with $t2, then hold|holds up $p1 for inspection.", "$0 cut|cuts excess thread away with $t2, then hold|holds up the pants for inspection. Unfortunately, it has been pricked to shreds during the process, and only $f1 is salvagable.")], ["Tag - 1x an item with the Padded Trousers tag", "Tag - 1x an item with the Thread tag", "Tag - 20x an item with the Armouring Studs tag"], ["TagTool - Held - an item with the Sewing Needle tag", "TagTool - Held - an item with the Scissors tag"], ["SimpleProduct - 1x a pair of bulky, studded cloth trousers (#280)"], ["UnusedInput - 45.00% of 20x an item with the Armouring Studs tag ($i3)"], [(1, 1)]);
		AddCraft("make studded shoes", "Armorcrafting", "make studded shoes", "making studded shoes", "studded shoes armormaking event", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 4, false, [(35, "$0 lay|lays out $i1, then begin|begins to thread $i3 through the eye of $t1.", "$0 lay|lays out $i1, then begin|begins to thread $i3 through the eye of $t1."), (35, "$0 set|sets the needle aside for a moment, and take|takes up $i2, cutting a pair of rough shoe soles from the sheet using $t2.", "$0 set|sets the needle aside for a moment, and take|takes up $i2, cutting a pair of rough shoe soles from the sheet using $t2."), (30, "$0 begin|begins to stitch large pieces of $i1, cut into shoe patterns, to the sides of $i2.", "$0 begin|begins to stitch large pieces of $i1, cut into shoe patterns, to the sides of $i2."), (40, "$0 stuff|stuffs $i4 between the sheets of cloth until they are quite firm and inflexible.", "$0 stuff|stuffs $i4 between the sheets of cloth until they are quite firm and inflexible."), (40, "Lastly, $0 stitch|stitches $i5 to the padded cloth, and set|sets aside $p1.", "Lastly, $0 stitch|stitches $i5 to the padded cloth, and set|sets aside the shoes, but the flimsy construction means only $f1 is salvagable in the end.")], ["CommodityTag - 1 kilogram of a material tagged as Fabric", "Tag - 1x an item with the Thick Leather tag", "Tag - 1x an item with the Thread tag", "Tag - 20x an item with the Padding tag", "Tag - 10x an item with the Armouring Studs tag"], ["TagTool - Held - an item with the Sewing Needle tag", "TagTool - Held - an item with the Scissors tag"], ["SimpleProduct - 1x a pair of leather-soled, studded cloth shoes (#281)"], ["UnusedInput - 45.00% of 10x an item with the Armouring Studs tag ($i5)"], [(1, 2)]);
		AddCraft("make leather greaves", "Armorcrafting", "assemble a pair of leather greaves", "making leather greaves", "a greaves making craft", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of assembling a pair of leather greaves, using the tip of $t1 to trace a pattern into the surface of $i1, drawing the rough shape of the greaves in the leather.", "$0 begin|begins the process of assembling a pair of leather greaves, using the tip of $t1 to trace a pattern into the surface of $i1, drawing the rough shape of the greaves in the leather."), (30, "$0 use|uses $t2 to cut the pieces out of $i1, and further cut|cuts long strips out of the off-cuts of the leather, setting those aside for the moment.", "$0 use|uses $t2 to cut the pieces out of $i1, and further cut|cuts long strips out of the off-cuts of the leather, setting those aside for the moment."), (45, "$0 heat|heats $i4 over $t5, then dunk|dunks the leather pieces into the wax once it is boiling hot. Then $0 set|sets the leather pieces aside after shaping them into vaguely curved, greaves-like shapes.", "$0 heat|heats $i4 over $t5, then dunk|dunks the leather pieces into the wax once it is boiling hot. Then $0 set|sets the leather pieces aside after shaping them into vaguely curved, greaves-like shapes."), (30, "Next, once the leather has cooled, $0 thread|threads $t4 with $i3, and stitch|stitches $i2 to the backside of the leather pieces, making for a more comfortable fit.", "Next, once the leather has cooled, $0 thread|threads $t4 with $i3, and stitch|stitches $i2 to the backside of the leather pieces, making for a more comfortable fit."), (35, "Finally, $0 stitch|stitches the pliable leather straps to both sides of the greaves, finishing by attaching buckles shaped from $i5 to the ends, then set|sets aside $p1.", "Finally, $0 stitch|stitches straps and buckles onto the greaves. On closer inspection, however, the greaves are a sloppy, misshapen mess and only $f1 is salvagable.")], ["Tag - 4x an item with the Thick Leather tag", "Tag - 20x an item with the Padding tag", "Tag - 1x an item with the Thread tag", "Commodity - 1 kilogram of beeswax", "CommodityTag - 100 grams of a material tagged as Forged Metal"], ["TagTool - InRoom - an item with the Knife tag", "TagTool - InRoom - an item with the Scissors tag", "TagTool - InRoom - an item with the Cleaning Rag tag", "TagTool - InRoom - an item with the Sewing Needle tag", "TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 1x a pair of hard leather greaves (#283)"], ["UnusedInput - 45.00% of 10x an item with the Padding tag ($i2)"], [(1, 1)]);
		AddCraft("make leather cap", "Armorcrafting", "assemble a hard leather cap", "making a leather cap", "a leather cap making craft", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of assembling a leather cap, using the tip of $t1 to trace a large, circular pattern into the surface of $i1. Additionally, tracing with $t1, $0 trace|traces two half-oval shapes into the remaining leather.", "$0 begin|begins the process of assembling a leather cap, using the tip of $t1 to trace a large, circular pattern into the surface of $i1. Additionally, tracing with $t1, $0 trace|traces two half-oval shapes into the remaining leather."), (30, "$0 use|uses $t2 to cut the pieces out of $i1, setting aside the two half-oval shaped pieces to focus on the larger, circular shaped leather, tidying the edges.", "$0 use|uses $t2 to cut the pieces out of $i1, setting aside the two half-oval shaped pieces to focus on the larger, circular shaped leather, tidying the edges."), (45, "$0 heat|heats $i4 over $t5, then dunk|dunks the leather pieces into the wax once it is boiling hot. Then $0 work|works to shape the circular cut of leather into a bowl shape before setting it aside to cool.", "$0 heat|heats $i4 over $t5, then dunk|dunks the leather pieces into the wax once it is boiling hot. Then $0 work|works to shape the circular cut of leather into a bowl shape before setting it aside to cool."), (30, "Next, once the leather has cooled, $0 thread|threads $t4 with $i3, and stitch|stitches $i2 to the interior dome of the leather bowl, making for a more comfortable fit.", "Next, once the leather has cooled, $0 thread|threads $t4 with $i3, and stitch|stitches $i2 to the interior dome of the leather bowl, making for a more comfortable fit."), (35, "Finally, $0 stitch|stitches the hard half oval flaps to either side of the hard cap, then set|sets aside $p1.", "Finally, $0 stitch|stitches the hard half oval flaps to either side of the hard cap. On closer inspection, however, the cap is shaped too narrowly and the leather has hardened unevenly. Only $f1 is salvagable.")], ["Tag - 2x an item with the Thick Leather tag", "Tag - 20x an item with the Padding tag", "Tag - 1x an item with the Thread tag", "Commodity - 500 grams of beeswax"], ["TagTool - Held - an item with the Knife tag", "TagTool - Held - an item with the Scissors tag", "TagTool - Held - an item with the Cleaning Rag tag", "TagTool - Held - an item with the Sewing Needle tag", "TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 1x a hard leather cap with ear-flaps (#285)"], ["UnusedInput - 45.00% of 10x an item with the Padding tag ($i2)"], [(1, 1)]);
		AddCraft("make leather bracers", "Armorcrafting", "assemble a pair of leather bracers", "making leather bracers", "a leather bracers making craft", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of assembling a pair of leather bracers, using the tip of $t1 to trace a pattern into the surface of $i1, drawing the rough shape of the bracers in the leather.", "$0 begin|begins the process of assembling a pair of leather bracers, using the tip of $t1 to trace a pattern into the surface of $i1, drawing the rough shape of the bracers in the leather."), (30, "$0 use|uses $t2 to cut the pieces out of $i1, and further cut|cuts long strips out of the off-cuts of the leather, setting those aside for the moment.", "$0 use|uses $t2 to cut the pieces out of $i1, and further cut|cuts long strips out of the off-cuts of the leather, setting those aside for the moment."), (45, "$0 heat|heats $i4 over $t5, then dunk|dunks the leather pieces into the wax once it is boiling hot. Then $0 set|sets the leather pieces aside after shaping them into vaguely curved, bracer-like shapes.", "$0 heat|heats $i4 over $t5, then dunk|dunks the leather pieces into the wax once it is boiling hot. Then $0 set|sets the leather pieces aside after shaping them into vaguely curved, bracer-like shapes."), (30, "Next, once the leather has cooled, $0 thread|threads $t4 with $i3, and stitch|stitches $i2 to the backside of the leather pieces, making for a more comfortable fit.", "Next, once the leather has cooled, $0 thread|threads $t4 with $i3, and stitch|stitches $i2 to the backside of the leather pieces, making for a more comfortable fit."), (35, "Finally, $0 stitch|stitches the pliable leather straps to both sides of the bracers, finishing by attaching buckles shaped from $i5 to the ends, then set|sets aside $p1.", "Finally, $0 stitch|stitches straps and buckles onto the bracers. On closer inspection, however, the bracers are a sloppy, misshapen mess and only $f1 is salvagable.")], ["Tag - 2x an item with the Thick Leather tag", "Tag - 20x an item with the Padding tag", "Tag - 1x an item with the Thread tag", "Commodity - 1 kilogram of beeswax", "CommodityTag - 100 grams of a material tagged as Forged Metal"], ["TagTool - Held - an item with the Knife tag", "TagTool - Held - an item with the Scissors tag", "TagTool - Held - an item with the Cleaning Rag tag", "TagTool - Held - an item with the Sewing Needle tag", "TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 1x a pair of hard leather bracers (#286)"], ["UnusedInput - 45.00% of 10x an item with the Padding tag ($i2)"], [(1, 1)]);
		AddCraft("make leather cuirass", "Armorcrafting", "assemble a leather cuirass", "making a leather cuirass", "a cuirass making craft", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of assembling a leather cuirass, using $t1 to first score $i1, marking out what will be the front and back of the cuirass.", "$0 begin|begins the process of assembling a leather cuirass, using $t1 to first score $i1, marking out what will be the front and back of the cuirass."), (30, "$0 cut|cuts out the marked pieces using $t2, then set|sets them aside and focus|focuses on heating $i5 over $t5.", "$0 cut|cuts out the marked pieces using $t2, then set|sets them aside and focus|focuses on heating $i5 over $t5."), (45, "$0 dunk|dunks the pieces of leather into $i5, roughly mould|moulds the pieces into the shape of a muscular humanoid chest, then lay|lays them out to dry.", "$0 dunk|dunks the pieces of leather into $i5, roughly mould|moulds the pieces into the shape of a muscular humanoid chest, then lay|lays them out to dry."), (30, "$0 thread|threads $i3 through the eye of $t4, then set|sets it aside for the moment. Taking up the moulded leather pieces, instead, $0 use|uses $t3 to punch holes into the bottom edge of the front and back pieces, and to punch holes along the upper shoulder.", "$0 thread|threads $i3 through the eye of $t4, then set|sets it aside for the moment. Taking up the moulded leather pieces, instead, $0 use|uses $t3 to punch holes into the bottom edge of the front and back pieces, and to punch holes along the upper shoulder."), (35, "Finally, $0 stitch|stitches $i4 over the shoulder parts of the partially formed cuirass, forming segmented pauldrons, and stitch|stitches the remainder of $i4 along the bottom of the front and back of the cuirass, creating tassets - and, just like that, $p1 is done.", "FFinally, $0 stitch|stitches $i4 over the shoulder parts of the partially formed cuirass, forming segmented pauldrons, and stitch|stitches the remainder of $i4 along the bottom of the front and back of the cuirass, but the entire piece is lopsided and ill-made, and in the end only $f1 is salvageable.")], ["Tag - 8x an item with the Thick Leather tag", "Tag - 20x an item with the Padding tag", "Tag - 1x an item with the Thread tag", "Tag - 5x an item with the Curved Leather Piece tag", "Commodity - 1 kilogram of beeswax"], ["TagTool - Held - an item with the Knife tag", "TagTool - Held - an item with the Scissors tag", "TagTool - Held - an item with the Awl tag", "TagTool - Held - an item with the Sewing Needle tag", "TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 1x a stiff leather cuirass with segmented pauldrons (#288)"], ["UnusedInput - 75.00% of 5x an item with the Curved Leather Piece tag ($i4)"], [(1, 1)]);
		AddCraft("make scalemail shirt", "Armorcrafting", "assemble a scalemail shirt", "making a scalemail shirt", "a scale shirt-making craft", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of making a scalemail shirt by laying out $i1, using $t2 to cut out the rough pattern of a sleeveless shirt.", "$0 begin|begins the process of making a scalemail shirt by laying out $i1, using $t2 to cut out the rough pattern of a sleeveless shirt."), (30, "$0 thread|threads $i3 through the eye of $t4 and begin|begins to stitch the leather pieces together to form a shirt, adding short sleeves at the shoulder and, by stitching $i2 to the inside of the garment, some degree of comfort.", "$0 thread|threads $i3 through the eye of $t4 and begin|begins to stitch the leather pieces together to form a shirt, adding short sleeves at the shoulder and, by stitching $i2 to the inside of the garment, some degree of comfort."), (45, "Setting the leather shirt aside, $0 take|takes up $t1 and use|uses it to punch holes in the upper part of each of $i4.", "Setting the leather shirt aside, $0 take|takes up $t1 and use|uses it to punch holes in the upper part of each of $i4."), (30, "Next, $0 painstakingly begin|begins to connect the individual scales with $i5, using $t3 to open and then twist shut the metal rings after fixing scales through them so that they overlap.", "Next, $0 painstakingly begin|begins to connect the individual scales with $i5, using $t3 to open and then twist shut the metal rings after fixing scales through them so that they overlap."), (35, "Finally, $0 use|uses more thread to stitch and then double-stitch the ring and scale assembly to the front and back of the leather shirt, adding scales over the short sleeves too, and a ridge of them along the sides of the shirt - until, finally, $0 can set aside $p1.", "Finally, $0 use|uses more thread to stitch and then double-stitch the ring and scale assembly to the front and back of the leather shirt, but it doesn't seem to hold up strongly enough and pulls apart at the slightest touch, ruining the leather, leaving only $f1 behind.")], ["Tag - 6x an item with the Thick Leather tag", "Tag - 20x an item with the Padding tag", "Tag - 1x an item with the Thread tag", "Tag - 80x an item with the Armouring Scales tag", "Tag - 40x an item with the Armouring Rings tag"], ["TagTool - Held - an item with the Awl tag", "TagTool - Held - an item with the Scissors tag", "TagTool - Held - an item with the Pliers tag", "TagTool - Held - an item with the Sewing Needle tag"], ["SimpleProduct - 1x a short-sleeved shirt of @material scalemail (#289)"], ["UnusedInput - 85.00% of 80x an item with the Armouring Scales tag ($i4)"], [(1, 4)]);
		AddCraft("make helm with chain aventail", "Armorcrafting", "assemble a half-helm with chain aventail", "making an aventailed half-helm", "an aventailed helm-making craft", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins by first making sure $t1 is burning hot, then pick|picks up $i1 with $t2, thrusting it into $t1.", "$0 begin|begins by first making sure $t1 is burning hot, then pick|picks up $i1 with $t2, thrusting it into $t1."), (30, "When the metal has been heated, $0 withdraw|withdraws $i1 and place|places it on $t3. Then $0 pick|picks up $t4 and start|starts to shape the metal into a dome with repeated hammer strikes.", "When the metal has been heated, $0 withdraw|withdraws $i1 and place|places it on $t3. Then $0 pick|picks up $t4 and start|starts to shape the metal into a dome with repeated hammer strikes."), (45, "Setting the formed metal dome aside, $0 take|takes up $t5 and use|uses it to twist open the rings of $i2.", "Setting the formed metal dome aside, $0 take|takes up $t5 and use|uses it to twist open the rings of $i2."), (25, "$0 painstakingly begin|begins to connect the individual rings in $i2, using $t5 to open and then twist shut the metal rings, creating an overlapping blanket of metal rings.", "$0 painstakingly begin|begins to connect the individual rings in $i2, using $t5 to open and then twist shut the metal rings, creating an overlapping blanket of metal rings."), (35, "Finally, $0 use|uses $t6 to punch small holes into the back, bottom edge of the domed half-helm, and string|strings the sheet of chainmail to the back by connecting rings to those holes, creating a thick aventail - and, finally, $0 can set aside $p1.", "Finally, $0 use|uses $t6 to punch small holes into the back, bottom edge of the domed half-helm, and string|strings the sheet of chainmail to the back by connecting rings to those holes, creating a thick aventail - but they don't seem to hold up strongly enough and pull apart at the slightest touch, ruining the aventail, leaving only $f1 behind.")], ["CommodityTag - 1 kilogram 200 grams of a material tagged as Manufactured Metal", "Tag - 40x an item with the Armouring Rings tag"], ["TagTool - In Room - an item with the Hot Fire tag", "TagTool - Held - an item with the Forge Tongs tag", "TagTool - InRoom - an item with the Anvil tag", "TagTool - Held - an item with the Hammer tag", "TagTool - Held - an item with the Pliers tag", "TagTool - Held - an item with the Awl tag"], ["SimpleProduct - 1x &a_an[@material] half-helm with chain aventail (#293)"], ["UnusedInput - 95.00% of 1 kilogram 200 grams of a material tagged as Manufactured Metal ($i1)"], [(1, 2)]);
		AddCraft("make chainmail mittens", "Armorcrafting", "assemble chainmail mittens", "making chainmail mittens", "a chainmail mitten-making craft", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 5, false, [(25, "$0 start|starts by setting out $i1, sorting the rings into a few separate piles.", "$0 start|starts by setting out $i1, sorting the rings into a few separate piles."), (30, "$0 begin|begins to flatten the rings with smacks of $t2, linking those rings together with deft twists of $t1.", "$0 begin|begins to flatten the rings with smacks of $t2, linking those rings together with deft twists of $t1."), (45, "$0 continue|continues to link the rings together, shrinking the sorted piles of $i1, closing the rings with tiny little pins and thwacks of $t2.", "$0 continue|continues to link the rings together, shrinking the sorted piles of $i1, closing the rings with tiny little pins and thwacks of $t2."), (25, "$0 loop|loops the sheets of chainmail over onto themselves again, linking portions together to give them shape and form.", "$0 loop|loops the sheets of chainmail over onto themselves again, linking portions together to give them shape and form."), (35, "Finally, $0 thump|thumps $t2 into the final tiny pin on the last little ring, and can set aside $p1.", "Finally, $0 thump|thumps $t2 into the final tiny pin on the last little ring - but the mittens don't seem to hold up strongly enough and pull apart at the slightest stress, leaving only $f1 behind.")], ["Tag - 80x an item with the Armouring Rings tag"], ["TagTool - Held - an item with the Pliers tag", "TagTool - Held - an item with the Riveter tag"], ["SimpleProduct - 1x a pair of @material chainmail mittens (#291)"], ["UnusedInput - 45.00% of 80x an item with the Armouring Rings tag ($i1)"], [(1, 1)]);
		AddCraft("make chainmail chausses", "Armorcrafting", "assemble chainmail chausses", "making chainmail chausses", "a chainmail chausses-making craft", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 start|starts by setting out $i1, sorting the rings into a few separate piles.", "$0 start|starts by setting out $i1, sorting the rings into a few separate piles."), (40, "$0 begin|begins to flatten the rings with smacks of $t2, linking those rings together with deft twists of $t1.", "$0 begin|begins to flatten the rings with smacks of $t2, linking those rings together with deft twists of $t1."), (55, "$0 continue|continues to link the rings together, shrinking the sorted piles of $i1, closing the rings with tiny little pins and thwacks of $t2.", "$0 continue|continues to link the rings together, shrinking the sorted piles of $i1, closing the rings with tiny little pins and thwacks of $t2."), (35, "$0 loop|loops the long sheets of chainmail over onto themselves again, linking portions together to give them the shape and form of big tubes.", "$0 loop|loops the long sheets of chainmail over onto themselves again, linking portions together to give them the shape and form of big tubes."), (35, "Finally, $0 thump|thumps $t2 into the final tiny pin on the last little ring, and can set aside $p1.", "Finally, $0 thump|thumps $t2 into the final tiny pin on the last little ring - but the chausses don't seem to hold up strongly enough and pull apart at the slightest stress, leaving only $f1 behind.")], ["Tag - 160x an item with the Armouring Rings tag"], ["TagTool - Held - an item with the Pliers tag", "TagTool - Held - an item with the Riveter tag"], ["SimpleProduct - 1x a pair of riveted, @material chainmail chausses (#292)"], ["UnusedInput - 55.00% of 160x an item with the Armouring Rings tag ($i1)"], [(1, 1)]);
		AddCraft("make chainmail hauberk", "Armorcrafting", "assemble chainmail hauberk", "making chainmail hauberk", "a chainmail hauberk-making craft", "HasArmourcrafting", null, null, null, _traits["Armourcrafting"] ?? _traits["Armourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 start|starts by setting out $i1, sorting the rings into a few separate piles.", "$0 start|starts by setting out $i1, sorting the rings into a few separate piles."), (40, "$0 begin|begins to flatten the rings with smacks of $t2, linking those rings together with deft twists of $t1.", "$0 begin|begins to flatten the rings with smacks of $t2, linking those rings together with deft twists of $t1."), (55, "$0 continue|continues to link the rings together, shrinking the sorted piles of $i1, closing the rings with tiny little pins and thwacks of $t2.", "$0 continue|continues to link the rings together, shrinking the sorted piles of $i1, closing the rings with tiny little pins and thwacks of $t2."), (35, "$0 continue|continues the tedious, painstaking process of linking $i1 together, over and over and over, until there is a large sheet of chainmail with three conspicious holes - one for the head, and two for the arms.", "$0 continue|continues the tedious, painstaking process of linking $i1 together, over and over and over, until there is a large sheet of chainmail with three conspicious holes - one for the head, and two for the arms."), (35, "$0 link|links the sides of the chainmail sheet together, forming a hauberk, and lastly add|adds chainmail sleeves, and then can set aside $p1.", "$0 link|links the sides of the chainmail sheet together, forming a hauberk, and lastly add|adds chainmail sleeves - but the hauberk doesn't seem to hold up strongly enough and pull apart at the slightest stress, leaving only $f1 behind.")], ["Tag - 240x an item with the Armouring Rings tag"], ["TagTool - Held - an item with the Pliers tag", "TagTool - Held - an item with the Riveter tag"], ["SimpleProduct - 1x a riveted, @material chainmail hauberk (#290)"], ["UnusedInput - 65.00% of 240x an item with the Armouring Rings tag ($i1)"], [(1, 1)]);
		AddCraft("make metal wire", "Blacksmithing", "make a coil of metal wire", "making metal wire", "metal being shaped into wire", "hasblacksmithing", null, null, null, _traits["Blacksmithing"] ?? _traits["Blacksmith"] ?? _traits.First().Value, Difficulty.ExtremelyEasy, Outcome.MinorPass, 5, 4, false, [(40, "$0 begin|begins by placing $i1 on $t1, hammering the metal into a thinner shape with repeated blows of $t2.", "$0 begin|begins by placing $i1 on $t1, hammering the metal into a thinner shape with repeated blows of $t2."), (25, "Once $i is thin enough, $0 cover|covers the metal in $i2 and roughly thread|threads the tip through the draw plate on $t1 and grip|grips the end with $t3.", "Once $i is thin enough, $0 cover|covers the metal in $i2 and roughly thread|threads the tip through the draw plate on $t1 and grip|grips the end with $t3."), (40, "$0 pull|pulls $i1 through the hole on the draw plate, though the process is slow, manually intensive, and incredibly tedious. When the proto-wire has cleared the first hole, $0 pull|pull it through the second hole, and repeat|repeats the process all over again, and again, and again.", "$0 pull|pulls $i1 through the hole on the draw plate, though the process is slow, manually intensive, and incredibly tedious. When the proto-wire has cleared the first hole, $0 pull|pull it through the second hole, and repeat|repeats the process all over again, and again, and again."), (35, "After an eternity wrenching $i1 with $t3 through progressively smaller holes, $0 have|has finished and can set aside $p1.", "After an eternity wrenching $i1 with $t3 through progressively smaller holes, $0 make|makes an unfortunate mistake, pulling too hard, and on the last hole, the wire snaps.")], ["CommodityTag - 500 grams of a material tagged as Forged Metal", "Commodity - 450 grams of beeswax"], ["TagTool - InRoom - an item with the Drawplate tag", "TagTool - Held - an item with the Hammer tag", "TagTool - Held - an item with the Forge Tongs tag"], ["SimpleProduct - 1x coil of @material wire (#250)"], [], [(1, 1)]);
		AddCraft("forge sheet metal", "Blacksmithing", "make sheet metal", "forging sheet metal", "metal being shaped into a thin sheet", "hasblacksmithing", null, null, null, _traits["Blacksmithing"] ?? _traits["Blacksmith"] ?? _traits.First().Value, Difficulty.ExtremelyEasy, Outcome.MinorPass, 5, 4, false, [(25, "$0 grip|grips $i1 with $t2, holding the metal over $t1 until it is red-hot and malleable.", "$0 grip|grips $i1 with $t2, holding the metal over $t1 until it is red-hot and malleable."), (35, "When $i1 is hot enough, $0 set|sets it on $t3 and take|takes up $t1, beginning to hammer the metal flat, starting at the edges and working inward.", "When $i1 is hot enough, $0 set|sets it on $t3 and take|takes up $t1, beginning to hammer the metal flat, starting at the edges and working inward."), (35, "$0 continue|continues to hammer $i1 - first into a rectangular shape, and then into a progressively thinner sheet from repeated blows of $t1.", "$0 continue|continues to hammer $i1 - first into a rectangular shape, and then into a progressively thinner sheet from repeated blows of $t1."), (20, "$0 lower|lowers $t1 finally and step|steps back from $t3, having produced $p1.", "$0 lower|lowers $t1 and step|steps back, considering the sheet metal. Unfortunately, it is lumpy and uneven, and only $f1 can be salvaged.")], ["CommodityTag - 1 kilogram 200 grams of a material tagged as Forged Metal"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - Held - an item with the Hammer tag", "TagTool - Held - an item with the Forge Tongs tag", "TagTool - Held - an item with the Anvil tag"], ["SimpleProduct - 1x a square of @material sheet metal (#249)"], ["UnusedInput - 30.00% of 1 kilogram 200 grams of a material tagged as Forged Metal ($i1)"], [(1, 1)]);
		AddCraft("cast sheet metal", "Blacksmithing", "cast sheet metal", "casting sheet metal", "metal being cast into a thin sheet", "hasblacksmithing", null, null, null, _traits["Blacksmithing"] ?? _traits["Blacksmith"] ?? _traits.First().Value, Difficulty.ExtremelyEasy, Outcome.MinorPass, 5, 4, false, [(15, "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it.", "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it."), (35, "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t3 and place|places it within $t1 to heat.", "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t3 and place|places it within $t1 to heat."), (40, "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t2, then carefully pour|pours the liquid metal mixture into $i3 and leave|leaves it to cool.", "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t2, then carefully pour|pours the liquid metal mixture into $i3 and leave|leaves it to cool."), (25, "When the metal mixture has cooled for long enough, $0 use|uses $t2 to knock apart the clay mould, and reveals $p1.", "When the metal mixture has cooled for long enough, $0 use|uses $t2 to knock apart the clay mould, revealing that the metal has cracked and not set successfully. Only $f1 can be salvaged from the resulting mess.")], ["CommodityTag - 1 kilogram of a material tagged as Cast Metal", "Tag - 1x an item with the Crucible tag", "Tag - 1x an item with the Mould Sheet Metal tag"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - Held - an item with the Hammer tag", "TagTool - Held - an item with the Forge Tongs tag"], ["SimpleProduct - 1x a square of @material sheet metal (#249)"], ["UnusedInput - 100.00% of 1 kilogram of a material tagged as Cast Metal ($i1)"], [(1, 1)]);
		AddCraft("make armoring rings", "Blacksmithing", "make rings for certain armors", "making armoring rings", "metal wire being shaped into rings", "hasblacksmithing", null, null, null, _traits["Blacksmithing"] ?? _traits["Blacksmith"] ?? _traits.First().Value, Difficulty.ExtremelyEasy, Outcome.MinorPass, 5, 3, false, [(15, "$0 unravel|unravels $i1 bit by bit, and use|uses $t1 to twist the wire into a small ring, then clamp|clamps it off from the spool.", "$0 unravel|unravels $i1 bit by bit, and use|uses $t1 to twist the wire into a small ring, then clamp|clamps it off from the spool."), (35, "$0 continue|continues to form little metal rings from $i1, until a small pile has formed.", "$0 continue|continues to form little metal rings from $i1, until a small pile has formed."), (25, "$0 begin|begins to close each individual metal ring in the pile with $t2, by whacking it shut, until $p1 can be set aside.", "Somehow during the complete tedium of forming little metal rings, and closing them with repeated hits from $t2, $0 mess|messes up. Many rings are ill-formed, and only $f1 can be salvaged.")], ["Tag - 1x an item with the Wire tag"], ["TagTool - Held - an item with the Pliers tag", "TagTool - Held - an item with the Riveter tag"], ["SimpleProduct - 10x handful of small, @material rings (#252)"], ["SimpleProduct - 3x handful of small, @material rings (#252)"], [(1, 1)]);
		AddCraft("cast knife blade", "Blacksmithing", "cast a knife blade", "casting a knife blade", "the in-progress cast of a knife blade", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.VeryEasy, Outcome.MinorPass, 5, 4, false, [(15, "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it.", "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it."), (35, "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat.", "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat."), (25, "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool.", "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool."), (25, "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, and reveals $p1.", "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, revealing that the metal has cracked and not set successfully. Only $f1 can be salvaged from the resulting mess.")], ["CommodityTag - 200 grams of a material tagged as Cast Metal", "Tag - 1x an item with the Crucible tag", "Commodity - 50 grams of clay", "Tag - 1x an item with the Mould Knife Blade tag"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - Held - an item with the Forge Tongs tag", "TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] knife blade (#218)"], ["UnusedInput - 25.00% of 200 grams of a material tagged as Cast Metal ($i1)"], [(1, 1)]);
		AddCraft("cast sword blade", "Blacksmithing", "cast a sword blade", "casting a sword blade", "the in-progress cast of a sword blade", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 4, false, [(15, "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it.", "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it."), (35, "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat.", "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat."), (25, "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool.", "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool."), (25, "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, and reveals $p1.", "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, revealing that the metal has cracked and not set successfully. Only $f1 can be salvaged from the resulting mess.")], ["CommodityTag - 1 kilogram of a material tagged as Cast Metal", "Tag - 1x an item with the Crucible tag", "Commodity - 50 grams of clay", "Tag - 1x an item with the Mould Sword Blade tag"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - Held - an item with the Forge Tongs tag", "TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] sword blade (#217)"], ["UnusedInput - 30.00% of 1 kilogram of a material tagged as Cast Metal ($i1)"], [(1, 1)]);
		AddCraft("cast axe head", "Blacksmithing", "cast an axe head", "casting an axe head", "the in-progress cast of an axe head", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 4, false, [(15, "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it.", "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it."), (35, "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat.", "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat."), (25, "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool.", "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool."), (25, "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, and reveals $p1.", "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, revealing that the metal has cracked and not set successfully. Only $f1 can be salvaged from the resulting mess.")], ["CommodityTag - 1 kilogram 500 grams of a material tagged as Cast Metal", "Tag - 1x an item with the Crucible tag", "Commodity - 50 grams of clay", "Tag - 1x an item with the Mould Axe Head tag"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - Held - an item with the Forge Tongs tag", "TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] axehead (#216)"], ["UnusedInput - 30.00% of 1 kilogram 500 grams of a material tagged as Cast Metal ($i1)"], [(1, 1)]);
		AddCraft("cast spearhead", "Blacksmithing", "cast a spearhead", "casting a spearhead", "the in-progress cast of a spearhead", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 4, false, [(15, "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it.", "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it."), (35, "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat.", "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat."), (25, "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool.", "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool."), (25, "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, and reveals $p1.", "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, revealing that the metal has cracked and not set successfully. Only $f1 can be salvaged from the resulting mess.")], ["CommodityTag - 500 grams of a material tagged as Cast Metal", "Tag - 1x an item with the Crucible tag", "Commodity - 50 grams of clay", "Tag - 1x an item with the Mould Spearhead tag"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - Held - an item with the Forge Tongs tag", "TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] spearhead (#214)"], ["UnusedInput - 30.00% of 500 grams of a material tagged as Cast Metal ($i1)"], [(1, 1)]);
		AddCraft("cast mace head", "Blacksmithing", "cast a mace head", "casting a mace head", "the in-progress cast of a mace head", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 4, false, [(15, "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it.", "$0 transfer|transfers $i1 into $i2, and pack|packs the top of the crucible shut with a plug of $i3, sealing it."), (35, "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat.", "After checking that $t1 is hot enough, $0 grasp|grasps $i2 with $t2 and place|places it within $t1 to heat."), (25, "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool.", "$0 withdraw|withdraws $i2 and knock|knocks the clay plug from its top with $t3, then carefully pour|pours the liquid metal mixture into $i4 and leave|leaves it to cool."), (25, "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, and reveals $p1.", "When the metal mixture has cooled for long enough, $0 use|uses $t3 to knock apart the clay mould, revealing that the metal has cracked and not set successfully. Only $f1 can be salvaged from the resulting mess.")], ["CommodityTag - 1 kilogram 500 grams of a material tagged as Cast Metal", "Tag - 1x an item with the Crucible tag", "Commodity - 50 grams of clay", "Tag - 1x an item with the Mould Mace Head tag"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - Held - an item with the Forge Tongs tag", "TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] macehead (#215)"], ["UnusedInput - 30.00% of 1 kilogram 500 grams of a material tagged as Cast Metal ($i1)"], [(1, 1)]);
		AddCraft("make armoring scales", "Blacksmithing", "make armoring scales", "making armoring scales", "a pile of unfinished armoring scales", "hasblacksmithing", null, null, null, _traits["Blacksmithing"] ?? _traits["Blacksmith"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 6, false, [(15, "$0 lay|lays out $i1, arranging the pieces.", "$0 lay|lays out $i1, arranging the pieces."), (25, "$0 begin|begins to tap out rectangular little patterns in $i1 with $t1, denting the metal with each little mark left.", "$0 begin|begins to tap out rectangular little patterns in $i1 with $t1, denting the metal with each little mark left."), (25, "$0 continue|continues to to tap out little patterns in $i1, filling each sheet with those rectangular, fish-scale shapes.", "$0 continue|continues to to tap out little patterns in $i1, filling each sheet with those rectangular, fish-scale shapes."), (5, "$0 set|sets aside $t1 and pick|picks up $t2, setting it in the groove of one fish-scale pattern.", "$0 set|sets aside $t1 and pick|picks up $t2, setting it in the groove of one fish-scale pattern."), (15, "$0 begin|begins to cut out each fish-scale shape, using $t2 to brute force through the metal of $i1.", "$0 begin|begins to cut out each fish-scale shape, using $t2 to brute force through the metal of $i1."), (20, "$0 cut|cuts again and again, wielding $t2 against $i1, until there is nothing left but $p1.", "$0 cut|cuts again and again, wielding $t2 against $i1, until there is nothing left but $f1.")], ["Tag - 4x an item with the Sheet Metal tag"], ["TagTool - Held - an item with the Awl Punch tag", "TagTool - Held - an item with the Shears tag"], ["SimpleProduct - 3x handful of small, @material scales (#251)"], ["SimpleProduct - 1x handful of small, @material scales (#251)"], [(1, 1)]);
		AddCraft("butcher deer hindquarter", "Butchering", "break a venison hindquarter into steaks and roasts", "breaking down a deer hindquarter", "a deer hindquarter butchery", "HasButchering", null, null, null, _traits["Butchery"] ?? _traits["Butcher"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 4, false, [(35, "$0 start|starts by using $t1 to trim excess fat and sinew from $i1, and trim|trims the hindquarter of as much visible silver skin as possible, sliding $t1 under the membrane, cutting it away.", "$0 start|starts by using $t1 to trim excess fat and sinew from $i1, and trim|trims the hindquarter of as much visible silver skin as possible, sliding $t1 under the membrane, cutting it away."), (35, "Having revealed more of the muscle structure of $i1, $0 now hunt|hunts for the seam between the top round and shank, using $t1 to slit connective tissue, and using &0ï¿½s hands to rip and pull the two muscle groups apart.", "Having revealed more of the muscle structure of $i1, $0 now hunt|hunts for the seam between the top round and shank, using $t1 to slit connective tissue, and using &0ï¿½s hands to rip and pull the two muscle groups apart."), (35, "$0 pause|pauses to cut the eye round away from the bottom of the bottom round, cutting it away from the larger muscle with deft little cuts of $t1.", "$0 pause|pauses to cut the eye round away from the bottom of the bottom round, cutting it away from the larger muscle with deft little cuts of $t1."), (25, "$0 set|sets aside $p1.", "$0 ineptly set|sets aside $f1."), (35, "$0 continue|continues to separate the various muscles by tugging, ripping and cutting, pausing again only to carefully extract a hard, white gland from within the hindquarter and discard it.", "$0 continue|continues to separate the various muscles by tugging, ripping and cutting, pausing again only to carefully extract a hard, white gland from within the hindquarter and discard it."), (35, "$0 tear|tears $p2 free and set|sets it aside, spending some time on additional clean-up to remove more silver skin and fat from the cut of meat.", "$0 set|sets aside $f2 after a mangled mess of butchery."), (35, "$0 scrape|scrapes $t1 along the thigh bone, cutting connective tissue between the bone and another muscle group, and take|takes $p3 off at the femur.", "$0 continue|continues to separate the various muscles by tugging, ripping and cutting, pausing again only to carefully extract a hard, white gland from within the hindquarter and discard it."), (35, "$0 cut|cuts $p4 away from $p5, working around the femur, cleaning up both pieces of meat, and then set|sets them aside.", "$0 set|sets aside $f2 after a mangled mess of butchery."), (35, "Finally, $0 set|sets down $t1 and reach|reaches for $t2, sawing the deer hindquarter down to $p6.", "$0 scrape|scrapes $t1 along the thigh bone, cutting connective tissue between the bone and another muscle group, and take|takes $p3 off at the femur.")], ["Tag - 1x an item with the Deer Hindquarter tag"], ["TagTool - InRoom - an item with the Boning Knife tag", "TagTool - InRoom - an item with the Bone Saw tag"], ["SimpleProduct - 1x venison eye round (#353)", "SimpleProduct - 1x venison bottom round (#354)", "SimpleProduct - 1x venison top round (#355)", "SimpleProduct - 1x venison stew meat (#356)", "SimpleProduct - 1x venison sirloin tip (#357)", "SimpleProduct - 1x venison shank (#358)"], ["SimpleProduct - 1x venison stew meat (#356)", "SimpleProduct - 1x venison stew meat (#356)"]);
		AddCraft("butcher deer forequarter", "Butchering", "break a venison forequarter into steaks and roasts", "breaking down a deer forequarter", "a deer forequarter butchery", "HasButchering", null, null, null, _traits["Butchery"] ?? _traits["Butcher"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 2, false, [(35, "$0 start|starts by using $t1 to trim excess fat and connective tissue from $i1, and trim|trims the forequarter of as much visible silver skin as possible, sliding $t1 under the membrane, cutting it away.", "$0 start|starts by using $t1 to trim excess fat and connective tissue from $i1, and trim|trims the forequarter of as much visible silver skin as possible, sliding $t1 under the membrane, cutting it away."), (35, "0", "begin|begins"), (35, "$0 pull|pulls $p1 free and sets it aside, cutting off a bit of hard, yellowy fat from one end.", "$0 pull|pulls $p1 free and sets it aside, cutting off a bit of hard, yellowy fat from one end."), (25, "Lastly, $0 clean|cleans the bone of any remaining usable meat, setting aside $p2.", "Lastly, $0 clean|cleans the bone of any remaining usable meat, setting aside $p2.")], ["Tag - 1x an item with the Deer Forequarter tag"], ["TagTool - Held - an item with the Boning Knife tag"], ["SimpleProduct - 1x venison chuck roast (#359)", "SimpleProduct - 5x venison stew meat (#356)"], ["SimpleProduct - 4x venison stew meat (#356)"]);
		AddCraft("butcher rump into steak", "Butchering", "break a rump into steaks", "breaking down a rump", "an in-progress rump butchery", "HasButchering", null, null, null, _traits["Butchery"] ?? _traits["Butcher"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 3, false, [(35, "$0 begin|begins by trimming away excess sinew and fat with $t1, but leave|leaves a fat cap over the top of $i1.", "$0 begin|begins by trimming away excess sinew and fat with $t1, but leave|leaves a fat cap over the top of $i1."), (35, "$0 start|starts to cut $i1 into equal sized steaks, each with a portion of the fat cap marbling their top side.", "$0 start|starts to cut $i1 into equal sized steaks, each with a portion of the fat cap marbling their top side."), (35, "After some time, $0 set|sets aside $p1.", "$0 have|has mangled $i1 beyond recognising, and for no result other than $f1.")], ["Tag - 1x an item with the Rump tag"], ["TagTool - Held - an item with the Butcher's Knife tag"], ["SimpleProduct - 10x rump steak (#360)"], ["SimpleProduct - 5x some meat (#186)"]);
		AddCraft("butcher large tenderloin into steak", "Butchering", "break a pig tenderloin into steaks", "breaking down a tenderloin", "an in-progress tenderloin butchery", "HasButchering", null, null, null, _traits["Butchery"] ?? _traits["Butcher"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 3, false, [(35, "$0 begin|begins by trimming away excess sinew and fat from the outside of $i1 with $t1.", "$0 begin|begins by trimming away excess sinew and fat from the outside of $i1 with $t1."), (35, "$0 start|starts to cut $i1 into equal sized steaks, each about an inch and a half thick.", "$0 start|starts to cut $i1 into equal sized steaks, each about an inch and a half thick."), (35, "After some time, $0 set|sets aside $p1.", "$0 have|has mangled $i1 beyond recognising, and for no result other than $f1.")], ["Tag - 1x an item with the Tenderloin tag"], ["TagTool - Held - an item with the Butcher's Knife tag"], ["SimpleProduct - 5x raw filet mignon steak (#362)"], ["SimpleProduct - 6x some meat (#186)"]);
		AddCraft("butcher tenderloin into steak", "Butchering", "break a tenderloin into steaks", "breaking down a tenderloin", "an in-progress tenderloin butchery", "HasButchering", null, null, null, _traits["Butchery"] ?? _traits["Butcher"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 0, false, [(35, "$0 begin|begins by trimming away excess sinew and fat from the outside of $i1 with $t1.", "$0 begin|begins by trimming away excess sinew and fat from the outside of $i1 with $t1."), (35, "$0 start|starts to cut $i1 into equal sized steaks, each about an inch and a half thick.", "$0 start|starts to cut $i1 into equal sized steaks, each about an inch and a half thick."), (35, "After some time, $0 set|sets aside $p1.", "$0 have|has mangled $i1 beyond recognising, and for no result other than $f1.")], ["Tag - 1x an item with the Tenderloin tag"], ["TagTool - Held - an item with the Butcher's Knife tag"], ["SimpleProduct - 3x raw filet mignon steak (#362)"], ["SimpleProduct - 4x some meat (#186)"]);
		AddCraft("butcher pig hindquarter", "Butchering", "break a pig hindquarter into smaller cuts", "breaking down a pig hindquarter", "a pig hindquarter butchery", "HasButchering", null, null, null, _traits["Butchery"] ?? _traits["Butcher"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 7, false, [(25, "$0 begin|begins by cutting away the thick, excessive fat cap surrounding $i1, shaving it off with the edge of $t1.", "$0 begin|begins by cutting away the thick, excessive fat cap surrounding $i1, shaving it off with the edge of $t1."), (35, "$0 cut|cuts $p1 out from above the aitch bone, setting it aside.", "$0 cut|cuts $p1 out from above the aitch bone, setting it aside."), (15, "$0 rotate|rotates $i1, angling to begin removal of the aitch bone.", "$0 rotate|rotates $i1, angling to begin removal of the aitch bone."), (35, "$0 make|makes a cut with $t1, and then use|uses brutal force and leveCleaning Rage to wrench the shank free of the bone.", "$0 make|makes a cut with $t1, and then use|uses brutal force and leveCleaning Rage to wrench the shank free of the bone."), (35, "$0 turn|turns to the shank, using $t1 to peel the seam between two muscle groups, and rip|rips with &0", "s"), (30, "$0 cut|cuts and rip|rips away the newly revealed eye round, muscling it away, and set|sets $p3 aside when finished.", "$0 cut|cuts and rip|rips away the newly revealed eye round, muscling it away, and set|sets $p3 aside when finished."), (35, "$0 begin|begins to remove the femur bone next, cutting with $t1 to open up the next muscle groups, and trim|trims excess fat and gristle away throughout the process.", "s"), (25, "$0 turn|turns all attention to separating the knuckle from the sirloin tip, once more making little cuts with $t1, ripping those seams apart with both hands, wrenching the muscle groups apart with tiring manual force.", "$0 cut|cuts and rip|rips away the newly revealed eye round, muscling it away, and set|sets $p3 aside when finished."), (25, "$0 set|sets aside $p4, then more easily remove|removes $p5 and set|sets it aside also, before turning to the knuckle.", "$0 continue|continues the manually intensive process of butchering the hindquarter, but make|makes too many mistakes to salvage the rest of the meat, and ends up with $f1."), (35, "$0 gradually separate|separates the knuckle into $p6, ripping $p8 away during the intensive process, and piling up $p7 to one side. Then $0 sit|sits back, exhausted.", "$0 turn|turns all attention to separating the knuckle from the sirloin tip, once more making little cuts with $t1, ripping those seams apart with both hands, wrenching the muscle groups apart with tiring manual force.")], ["Tag - 1x an item with the Pig Hindquarter tag"], ["TagTool - Held - an item with the Butcher's Knife tag"], ["SimpleProduct - 1x oyster steak (#364)", "SimpleProduct - 1x pig top round (#365)", "SimpleProduct - 1x pig eye round (#366)", "SimpleProduct - 1x pig sirloin tip (#367)", "SimpleProduct - 1x pig bottom round (#368)", "SimpleProduct - 1x pig strip loin (#369)", "SimpleProduct - 1x pile of suet (#370)", "SimpleProduct - 1x a large, whole tenderloin strip (#361)"], ["SimpleProduct - 8x some meat (#186)"]);
		AddCraft("butcher pig forequarter", "Butchering", "break a pig forequarter into smaller cuts", "breaking down a pig forequarter", "a pig forequarter butchery", "HasButchering", null, null, null, _traits["Butchery"] ?? _traits["Butcher"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 3, false, [(35, "$0 begin|begins by trimming away excess sinew and fat from $i1 with $t1.", "$0 begin|begins by trimming away excess sinew and fat from $i1 with $t1."), (35, "$0 start|starts to cut a seam along $i1, and pull|pulls $p1 free with some effort.", "$0 start|starts to cut a seam along $i1, and pull|pulls $p1 free with some effort."), (35, "Then, wicking $t1 up along another sinewy division between muscle groups, $0 manage|manages to separate both $p2 and $p3, setting them aside.", "$0 have|has mangled $i1 beyond recognising, and for no result other than $f1."), (35, "After some time, $0 finally set|sets aside $p4.", "After some time, $0 finally set|sets aside $p4.")], ["Tag - 1x an item with the Pig Forequarter tag"], ["TagTool - Held - an item with the Butcher's Knife tag"], ["SimpleProduct - 1x oyster blade steak (#363)", "SimpleProduct - 1x pig rib roast (#371)", "SimpleProduct - 1x pig chuck roast (#372)", "SimpleProduct - 1x pig blade roast (#373)", "SimpleProduct - 1x pig brisket (#374)"], ["SimpleProduct - 15x some meat (#186)"]);
		AddCraft("separate suet from organs", "Butchering", "separate suet from organs", "cutting fat from organs", "an effort to separate suet from organs", "HasButchering", null, null, null, _traits["Butchery"] ?? _traits["Butcher"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 3, false, [(25, "$0 begin|begins to cut the suet away from $i1, using $t1 to separate the organ meat from the hard, creamy fat.", "$0 begin|begins to cut the suet away from $i1, using $t1 to separate the organ meat from the hard, creamy fat."), (30, "$0 continue|continues to separate the suet from the rest of $i1, pulling the fat away by hand with a ripping, crinkled sound.", "$0 continue|continues to separate the suet from the rest of $i1, pulling the fat away by hand with a ripping, crinkled sound."), (15, "$0 set|sets aside $p1, having finished separating it from the organs and entrails.", "$0 cannot manage to separate the suet from the organs and entrails, and manage|manages only to make a greasy, fatty mess of everything.")], ["Tag - 1x an item with the Entrails tag"], ["TagTool - Held - an item with the Cutting tag"], ["SimpleProduct - 1x pile of suet (#370)"], []);
		AddCraft("render suet", "Butchering", "render suet into tallow", "rendering suet", "an effort to stinking suet rendering process", "HasButchering", null, null, null, _traits["Butchery"] ?? _traits["Butcher"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 4, false, [(15, "$0 first place|places $i1 into $t1, then places $t1 onto $t2 to heat.", "$0 first place|places $i1 into $t1, then places $t1 onto $t2 to heat."), (55, "$0 wait|waits for $i1 to melt into a liquid within $t1.", "$0 wait|waits for $i1 to melt into a liquid within $t1."), (30, "$0 begin|begins to skim liquid fat off the top of the liquid within $t1, letting impurities sink to the bottom of the vessel.", "$0 begin|begins to skim liquid fat off the top of the liquid within $t1, letting impurities sink to the bottom of the vessel."), (15, "$0 set|sets aside $p1, having finished rendering it out successfully - but $p2 hangs heavily in the air, a by-product of the whole adventure.", "$0 fail|fails to successfully render the suet, and have|has instead only managed to produce $f1.")], ["Tag - 1x an item with the Suet tag"], ["TagTool - Held - an item with the Cooking Pot tag", "TagTool - Held - an item with the Fire tag"], ["CommodityProduct - 3.63 kilograms of beeswax commodity", "SimpleProduct - 1x a terrible, boiled offal stink (#162)"], ["SimpleProduct - 1x a terrible, boiled offal stink (#162)"]);
		AddCraft("make brick mould", "Carpentry", "create a brick mould", "making a brick mould", "a brick mould under construction", "hascarpentry", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.VeryHard, Outcome.MinorPass, 5, 4, true, [(20, "$0 take|takes up $t1 and begin|begins to cut $i1 into appropriately sized pieces.", "$0 take|takes up $t1 and begin|begins to cut $i1 into appropriately sized pieces."), (20, "$0 line|lines up $i1, forming a simple rectangular box.", "$0 line|lines up $i1, forming a simple rectangular box."), (25, "$0 begin|begins to hammer $i2 into $i1 using $t2, fixing the planks into a box shape.", "$0 begin|begins to hammer $i2 into $i1 using $t2, fixing the planks into a box shape."), (20, "$0 set|sets aside $p1.", "After closer inspection, $0 are|is forced to salvage $f from the cruddy mess.")], ["Tag - 6x an item with the Plank tag", "Tag - 8x an item with the Nail tag"], ["TagTool - Held - an item with the Saw tag", "TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x a wooden brick mould (#123)"], ["SimpleProduct - 6x a strip of wood (#240)"]);
		AddCraft("make brick mould", "Carpentry", "create a brick mould", "making a brick mould", "a brick mould under construction", "hascarpentry", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.VeryHard, Outcome.MinorPass, 5, 4, true, [(20, "$0 take|takes up $t1 and begin|begins to cut $i1 into appropriately sized pieces.", "$0 take|takes up $t1 and begin|begins to cut $i1 into appropriately sized pieces."), (20, "$0 line|lines up $i1, forming a simple rectangular box.", "$0 line|lines up $i1, forming a simple rectangular box."), (25, "$0 begin|begins to hammer $i2 into $i1 using $t2, fixing the planks into a box shape.", "$0 begin|begins to hammer $i2 into $i1 using $t2, fixing the planks into a box shape."), (20, "$0 set|sets aside $p1.", "After closer inspection, $0 are|is forced to salvage $f from the cruddy mess.")], ["Tag - 6x an item with the Plank tag", "Tag - 8x an item with the Nail tag"], ["TagTool - Held - an item with the Saw tag", "TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x a wooden brick mould (#123)"], ["SimpleProduct - 6x a strip of wood (#240)"]);
		AddCraft("make wooden door", "Carpentry", "make a wooden door", "making a wooden door", "a doormaking craft", "hascarpentry", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 4, false, [(25, "$0 take|takes up $t1, beginning to saw $i1 down into shape.", "$0 take|takes up $t1, beginning to saw $i1 down into shape."), (30, "Next, $0 set|sets aside $t1 and grab|grabs $t2 instead, smacking $i2 into the individual planks to secure them to each other.", "Next, $0 set|sets aside $t1 and grab|grabs $t2 instead, smacking $i2 into the individual planks to secure them to each other."), (35, "$0 use|uses $t2 to beat $i3 into a knob-like shape, then screw|screws it with $t3 into the door to form a sort of handle.", "$0 use|uses $t2 to beat $i3 into a knob-like shape, then screw|screws it with $t3 into the door to form a sort of handle."), (35, "$0 test|tests the handle, tweak|tweaks the hinges, and pronounces $p1 finished.", "$0 test|tests the handle, and it falls off. Then $0 tweak|tweaks the hinges, which also fall off, and then everything falls apart, leaving $f1.")], ["Tag - 10x an item with the Plank tag", "Tag - 20x an item with the Nail tag", "CommodityTag - 250 grams of a material tagged as Manufactured Metal"], ["TagTool - Held - an item with the Saw tag", "TagTool - Held - an item with the Hammer tag", "TagTool - Held - an item with the Screwdriver tag"], ["SimpleProduct - 1x &a_an[@material] door (#32)"], ["UnusedInput - 50.00% of 10x an item with the Plank tag ($i1)"], [(1, 1)]);
		AddCraft("process log", "Carpentry", "processing a log", "processing a log", "a log in the process of being processed", "HasForestry", null, null, null, _traits["Lumberjacking"] ?? _traits["Lumberjack"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorPass, 5, 4, false, [(15, "$0 make|makes rough, shallow cuts in $i1, marking out sections with $t1.", "$0 make|makes rough, shallow cuts in $i1, marking out sections with $t1."), (25, "$0 begin|begins to saw into $i1, dCleaning Ragging $t1 back and forth along the length of the log.", "$0 begin|begins to saw into $i1, dCleaning Ragging $t1 back and forth along the length of the log."), (35, "$0 set|sets aside one plank of wood and continue|continues to saw planks from $i1.", "$0 set|sets aside one plank of wood and continue|continues to saw planks from $i1."), (40, "After some time, $0 have|has reduced $i1 to $p1, cleaning up the edges of each plank with $t1.", "After some time, $0 have|has reduced $i1 to $f1, haphazardly cleaning up the edges of each plank with $t1.")], ["Tag - 1x an item with the Log tag"], ["TagTool - Held - an item with the Saw tag"], ["SimpleProduct - 5x &a_an[@material] plank (#136)"], ["SimpleProduct - 3x &a_an[@material] plank (#136)"], [(1, 1)], [(1, 1)]);
		AddCraft("make table legs", "Carpentry", "make a couple wooden table legs", "making a couple table legs", "unfinished table legs", "hascarpentry", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 3, false, [(25, "$0 begin|begins by splitting $i1 into two halves with $t1, and use|uses the wedge head to knock off the corners, roughly rounding the edges.", "$0 begin|begins by splitting $i1 into two halves with $t1, and use|uses the wedge head to knock off the corners, roughly rounding the edges."), (40, "Next, $0 use|uses $t2 to cut the rough shape of a table leg into each half of $i1, sawing steadily.", "Next, $0 use|uses $t2 to cut the rough shape of a table leg into each half of $i1, sawing steadily."), (40, "$0 set|sets aside $t2 and reach|reaches for $t3, beginning the slow, painstaking process of carving detail into $p1, until they are smooth and shapely.", "$0 set|sets aside $t2 and reach|reaches for $t3, beginning the slow, painstaking process of carving detail, but somehow get|gets caught up in the work, whittling until $f1 is left.")], ["Tag - 1x an item with the Log tag"], ["TagTool - Held - an item with the Tomahawk Axe tag", "TagTool - Held - an item with the Saw tag", "TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 2x &a_an[@material] table leg (#840)"], ["ScrapInput - 2.00% by weight of 1x an item with the Log tag ($i1)"], [(1, 1)]);
		AddCraft("make crude wooden table", "Carpentry", "make a crude wooden table", "making a table", "pieces of a wooden table requiring assembly", "hascarpentry", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.ExtremelyEasy, Outcome.MinorPass, 5, 4, false, [(15, "$0 set|sets out $i1, arranging them together until they fit snugly.", "$0 set|sets out $i1, arranging them together until they fit snugly."), (20, "$0 begin|begins to nail $i1 together, using $t1 to drive $i2 into place, bending many nails prematurely, and using extra nails to make up for the generally bad job.", "$0 begin|begins to nail $i1 together, using $t1 to drive $i2 into place, bending many nails prematurely, and using extra nails to make up for the generally bad job."), (30, "$0 fit|fits $i3 to each corner of the plank tabletop, using $t1 to hammer $i2 into each leg, fixing them into place. Due to inexpert strikes of $t1, the nails are often driven in bent, jutting out at angles.", "$0 fit|fits $i3 to each corner of the plank tabletop, using $t1 to hammer $i2 into each leg, fixing them into place. Due to inexpert strikes of $t1, the nails are often driven in bent, jutting out at angles."), (15, "$0 right|rights $p1, studying the finished product before stepping back.", "$0 right|rights $p1, studying the finished product before stepping back.")], ["Tag - 5x an item with the Plank tag", "Tag - 30x an item with the Nail tag", "SimpleItem - 4x &a_an[@material] table leg (#840)"], ["TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x a crude, @material table (#841)"], [], [(1, 1)]);
		AddCraft("make wooden table", "Carpentry", "make a wooden table", "making a table", "pieces of a wooden table requiring assembly", "HasCarpentryAdept", "HasCarpentryAdept", null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.ExtremelyEasy, Outcome.MinorPass, 5, 4, false, [(15, "$0 set|sets out $i1, arranging them together until they fit snugly.", "$0 set|sets out $i1, arranging them together until they fit snugly."), (20, "$0 begin|begins to nail $i1 together, using $t1 to drive $i2 into place.", "$0 begin|begins to nail $i1 together, using $t1 to drive $i2 into place."), (30, "$0 fit|fits $i3 to each corner of the plank tabletop, using $t1 to hammer $i2 into each leg, fixing them into place.", "$0 fit|fits $i3 to each corner of the plank tabletop, using $t1 to hammer $i2 into each leg, fixing them into place."), (15, "$0 right|rights $p1, studying the finished product before stepping back.", "$0 right|rights $f1, studying the finished product before stepping back. Wait, something's not right...")], ["Tag - 5x an item with the Plank tag", "Tag - 15x an item with the Nail tag", "SimpleItem - 4x &a_an[@material] table leg (#840)"], ["TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x a simple, @material table (#41)"], ["SimpleProduct - 1x a crude, @material table (#841)"], [(1, 1)], [(1, 1)]);
		AddCraft("make good wooden table", "Carpentry", "make a good wooden table", "making a table", "pieces of a wooden table requiring assembly", "HasCarpentryMaster", "HasCarpentryMaster", null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.ExtremelyEasy, Outcome.MinorPass, 5, 4, false, [(15, "$0 set|sets out $i1, arranging them together until they fit snugly.", "$0 set|sets out $i1, arranging them together until they fit snugly."), (20, "$0 begin|begins to nail $i1 together, using $t1 to drive $i2 into place.", "$0 begin|begins to nail $i1 together, using $t1 to drive $i2 into place."), (30, "$0 fit|fits $i3 to each corner of the plank tabletop, using $t1 to hammer $i2 into each leg, fixing them into place.", "$0 fit|fits $i3 to each corner of the plank tabletop, using $t1 to hammer $i2 into each leg, fixing them into place."), (30, "$0 right|rights $p1, using $i4 to scorch the surface until glossy black, then step|steps back to study the final product.", "$0 right|rights $f1, studying the finished product before stepping back. Wait, something's not right...")], ["Tag - 5x an item with the Plank tag", "Tag - 10x an item with the Nail tag", "SimpleItem - 4x &a_an[@material] table leg (#840)", "Tag - 1x an item with the Torches tag"], ["TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x an ornate table of fire-preserved @material (#843)"], ["SimpleProduct - 1x a simple, @material table (#41)"], [(1, 1)], [(1, 1)]);
		AddCraft("make wooden bedframe", "Carpentry", "make a wooden bedframe", "making a wooden bedframe", "pieces of a wooden bedframe requiring assembly", "HasCarpentryAdept", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.VeryEasy, Outcome.MinorPass, 5, 5, false, [(20, "$0 start|starts by sawing $i1 down to size to make two similarly sized boards - a headboard and a footboard. The effort takes multiple rasping, toothed strokes of $t1 to complete.", "$0 start|starts by sawing $i1 down to size to make two similarly sized boards - a headboard and a footboard. The effort takes multiple rasping, toothed strokes of $t1 to complete."), (30, "$0 add|adds flourishes to the two boards, carving patterns into the surface with $t2, smoothing corners, shaping the wood painstakingly.", "$0 add|adds flourishes to the two boards, carving patterns into the surface with $t2, smoothing corners, shaping the wood painstakingly."), (20, "Setting aside the boards, $0 lay|lays out $i2 into a rough square, and use|uses $t3 to drive $i3 into each plank, fixing them to one another.", "Setting aside the boards, $0 lay|lays out $i2 into a rough square, and use|uses $t3 to drive $i3 into each plank, fixing them to one another."), (15, "$0 take|takes up more planks from the pile of $i2 remaining, and set|sets them over top the square frame, using yet more $i3 to fix these planks to the ones below.", "$0 take|takes up more planks from the pile of $i2 remaining, and set|sets them over top the square frame, using yet more $i3 to fix these planks to the ones below."), (15, "As a final test of the frame, $0 lay|lays out across the completed bedframe, splay-limbed. Fortunately, $p1 holds, and passes muster.", "As a final test of the frame, $0 lay|lays out across the completed bedframe, splay-limbed. Unfortunately, the bedframe cracks under the weight and folds into itself, toppling $0 into a splintered pile of $f1.")], ["Tag - 2x an item with the Plank tag", "Tag - 8x an item with the Plank tag", "Tag - 20x an item with the Nail tag"], ["TagTool - Held - an item with the Saw tag", "TagTool - Held - an item with the Knife tag", "TagTool - Held - an item with the Hammer tag"], ["SimpleProduct - 1x a panel bedframe of @material (#842)"], ["ScrapInput - 60.00% by weight of 8x an item with the Plank tag ($i2)"], [(1, 1)]);
		AddCraft("build mudbrick hut", "Construction", "create a primitive brick house", "building a mudbrick hut", "a mudbrick hut under construction", "hasconstruction", "CanDoConstructionCooldown", "WhyCantDoConstructionCooldown", "ApplyConstructionCooldown", _traits["Constructing"] ?? _traits["Construction"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorPass, 5, 6, true, [(120, "$0 begin|begins to laboriously dig a deep trench to place $i3 down to make a foundation for the crude hut, using $t1.", "$0 begin|begins to laboriously dig a deep trench to place $i3 down to make a foundation for the crude hut, using $t1."), (180, "$0 pour|pours the contents of $i2 over $i1 to make a muddy mess and proceeds to slather it over the foundation as mortar.", "$0 pour|pours the contents of $i2 over $i1 to make a muddy mess and proceeds to slather it over the foundation as mortar."), (360, "$0 place|places $i3 on the top of the foundation and muddy mortar, slowly and painstakingly beginning to build up the walls of the rudimentary shelter.", "$0 place|places $i3 on the top of the foundation and muddy mortar, slowly and painstakingly beginning to build up the walls of the rudimentary shelter."), (360, "When the walls are high enough, $0 begin|begins to lay out the design for the slanted, thatched roof, using $i4 to frame the work.", "When the walls are high enough, $0 begin|begins to lay out the design for the slanted, thatched roof, using $i4 to frame the work."), (360, "$0 weave|weaves $i5 over the wooden framework of the roof, slowly enclosing the top of the hut and shutting out the elements.", "$0 weave|weaves $i5 over the wooden framework of the roof, slowly enclosing the top of the hut and shutting out the elements."), (180, "Finished, $0 stand|stands back and admire|admires $p1.", "Finished, $0 stands back and admires $p1, only to realise it is an abject failure. There is no salvaging this wreck.")], ["Tag - 15x an item with the Dirt tag", "LiquidUse - 2 litres of Water", "Tag - 160x an item with the Construction Brick tag", "Tag - 5x an item with the long shaft tag", "Tag - 40x an item with the Reeds tag"], ["TagTool - InRoom - an item with the shovel tag"], ["SimpleProduct - 1x a thatched, mudbrick hut (#175)"], ["UnusedInput - 15.00% of 160x an item with the Construction Brick tag ($i3)"]);
		AddCraft("cook meat", "Cooking", "cooking meat in its most basic form", "cooking meat", "a meat cooking process", "HasCooking", null, null, null, _traits["Cooking"] ?? _traits["Cook"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 4, false, [(25, "$0 toss|tosses $i1 into $t1.", "$0 toss|tosses $i1 into $t1."), (30, "$0 wait|waits.", "$0 wait|waits."), (30, "$0 wait|waits.", "$0 wait|waits."), (25, "$0 bat|bats $p1 out of $t1.", "$0 rescue|rescues $f1 from $t1, but it is too late, having waited too long.")], ["Tag - 1x an item with the Meat tag"], ["TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 1x some roasted meat (#187)"], ["SimpleProduct - 1x some burnt meat (#188)"]);
		AddCraft("roast nuts", "Cooking", "cook nuts", "roasting some nuts", "a nut roasting experience", "HasCooking", null, null, null, _traits["Cooking"] ?? _traits["Cook"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorPass, 5, 4, false, [(35, "$0 drop|drops $i1 into $t1.", "$0 drop|drops $i1 into $t1."), (40, "$0 wait|waits patiently as, still shelled, $i1 begin to cook.", "$0 wait|waits patiently as, still shelled, $i1 begin to cook."), (25, "$t1 snap|snaps and crack|cracks as $i1 continue|continues to cook, the outer shells beginning to blacken.", "$t1 snap|snaps and crack|cracks as $i1 continue|continues to cook, the outer shells beginning to blacken."), (35, "When the shells of $p1 begin to smoke, and are quite heavily scorched, $1 bat|bats $p1 out of the fire, letting them cool on the ground.", "Despite a solid effort, $i1 ends up as nothing more than an inedible charcoal briquette.")], ["Tag - 1x an item with the Nuts tag"], ["TagTool - Held - an item with the Fire tag"], ["SimpleProduct - 1x handful of roasted nuts (#375)"], []);
		AddCraft("cook rabbit leg", "Cooking", "cook rabbit leg in a very basic way", "cooking a rabbit leg", "a cooking event for a rabbit leg", "HasCooking", null, null, null, _traits["Cooking"] ?? _traits["Cook"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 5, false, [(35, "After giving $t1 a rudimentary sharpening with $t3, $0 spit|spits $i1 onto it.", "After giving $t1 a rudimentary sharpening with $t3, $0 spit|spits $i1 onto it."), (25, "$0 swing|swings $t1 out over $t2.", "$0 swing|swings $t1 out over $t2."), (35, "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook.", "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook."), (35, "$i1 continue|continues to cook, charring in the fire.", "$i1 continue|continues to cook, charring in the fire."), (25, "$0 pull|pulls $t1 in away from $t2, drawing $p1 away from the flames with some caramelization and char on the outside of the meat.", "$0 wait|waits too long, and when $f1 comes away from $t2, it is a mess.")], ["Tag - 1x an item with the Rabbit Roast tag"], ["TagTool - Held - an item with the short shaft tag", "TagTool - Held - an item with the Fire tag", "TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 1x a roasted leg of rabbit (#376)"], ["SimpleProduct - 1x some burnt meat (#188)"]);
		AddCraft("cook deer hindquarter", "Cooking", "cook an unprocessed deer leg", "cooking a deer hindquarter", "a cooking event for a deer leg", "HasCooking", null, null, null, _traits["Cooking"] ?? _traits["Cook"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 5, false, [(35, "After giving $t1 a rudimentary sharpening with $t3, $0 awkwardly spit|spits $i1 onto it.", "After giving $t1 a rudimentary sharpening with $t3, $0 awkwardly spit|spits $i1 onto it."), (25, "$0 swing|swings $t1 out over $t2.", "$0 swing|swings $t1 out over $t2."), (35, "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook.", "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook."), (35, "$i1 continue|continues to cook, charring in the fire.", "$i1 continue|continues to cook, charring in the fire."), (25, "$0 heft|hefts $t1 in away from $t2, drawing $p1 away from the flames with some caramelization and char on the outside of the meat.", "$0 wait|waits too long, and when $f1 comes away from $t2, it is a mess.")], ["Tag - 1x an item with the Deer Hindquarter tag"], ["TagTool - Held - an item with the short shaft tag", "TagTool - Held - an item with the Fire tag", "TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 1x a cooked venison hindquarter (#377)"], ["SimpleProduct - 1x some burnt meat (#188)"]);
		AddCraft("cook deer forequarter", "Cooking", "cook an unprocessed deer leg", "cooking a deer forequarter", "a cooking event for a deer leg", "HasCooking", null, null, null, _traits["Cooking"] ?? _traits["Cook"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 5, false, [(35, "After giving $t1 a rudimentary sharpening with $t3, $0 awkwardly spit|spits $i1 onto it.", "After giving $t1 a rudimentary sharpening with $t3, $0 awkwardly spit|spits $i1 onto it."), (25, "$0 swing|swings $t1 out over $t2.", "$0 swing|swings $t1 out over $t2."), (35, "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook.", "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook."), (35, "$i1 continue|continues to cook, charring in the fire.", "$i1 continue|continues to cook, charring in the fire."), (25, "$0 heft|hefts $t1 in away from $t2, drawing $p1 away from the flames with some caramelization and char on the outside of the meat.", "$0 wait|waits too long, and when $f1 comes away from $t2, it is a mess.")], ["Tag - 1x an item with the Deer Forequarter tag"], ["TagTool - Held - an item with the short shaft tag", "TagTool - Held - an item with the Fire tag", "TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 1x a cooked venison forequarter (#378)"], ["SimpleProduct - 1x some burnt meat (#188)"]);
		AddCraft("cook venison roast", "Cooking", "cook an venison roast", "cooking a venison roast", "a cooking event for a venison roast", "HasCooking", null, null, null, _traits["Cooking"] ?? _traits["Cook"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 5, false, [(35, "After giving $t1 a rudimentary sharpening with $t3, $0 awkwardly spit|spits $i1 onto it.", "After giving $t1 a rudimentary sharpening with $t3, $0 awkwardly spit|spits $i1 onto it."), (25, "$0 swing|swings $t1 out over $t2.", "$0 swing|swings $t1 out over $t2."), (35, "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook.", "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook."), (35, "$i1 continue|continues to cook, charring in the fire.", "$i1 continue|continues to cook, charring in the fire."), (25, "$0 heft|hefts $t1 in away from $t2, drawing $p1 away from the flames with some caramelization and char on the outside of the meat.", "$0 wait|waits too long, and when $f1 comes away from $t2, it is a mess.")], ["Tag - 1x an item with the Deer Roast tag"], ["TagTool - Held - an item with the short shaft tag", "TagTool - Held - an item with the Fire tag", "TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 1x a cooked venison roast (#381)"], ["SimpleProduct - 1x some burnt meat (#188)"]);
		AddCraft("cook pig roast", "Cooking", "cook a pig roast", "cooking a pig roast", "a cooking event for a pig roast", "HasCooking", null, null, null, _traits["Cooking"] ?? _traits["Cook"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 5, false, [(35, "After giving $t1 a rudimentary sharpening with $t3, $0 awkwardly spit|spits $i1 onto it.", "After giving $t1 a rudimentary sharpening with $t3, $0 awkwardly spit|spits $i1 onto it."), (25, "With some difficulty, $0 swing|swings $t1 out over $t2.", "With some difficulty, $0 swing|swings $t1 out over $t2."), (35, "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook.", "$0 continue|continues to hold $t1 out over $t2, letting $i1 slowly cook."), (35, "$i1 continue|continues to cook, charring in the fire, while $0 struggle|struggles to keep the thick piece of meat aloft.", "$i1 continue|continues to cook, charring in the fire, while $0 struggle|struggles to keep the thick piece of meat aloft."), (25, "$0 heft|hefts $t1 in away from $t2, drawing $p1 away from the flames with some caramelization and char on the outside of the meat.", "$0 wait|waits too long, and when $f1 comes away from $t2, it is a mess.")], ["Tag - 1x an item with the Pig Roast tag"], ["TagTool - Held - an item with the short shaft tag", "TagTool - Held - an item with the Fire tag", "TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 1x a cooked pig roast (#382)"], ["SimpleProduct - 1x some burnt meat (#188)"]);
		AddCraft("cook pig forequarter", "Cooking", "cook a pig roast", "cooking a pig forequarter", "a cooking event for a pig leg", "HasCooking", null, null, null, _traits["Cooking"] ?? _traits["Cook"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 5, false, [(35, "$0 dCleaning Rag|dCleaning Rags $i1 closer to $t1.", "$0 dCleaning Rag|dCleaning Rags $i1 closer to $t1."), (40, "With some difficulty, $0 dCleaning Rag-drop|drops $i1 onto $t1, throwing up embers from the impact.", "With some difficulty, $0 dCleaning Rag-drop|drops $i1 onto $t1, throwing up embers from the impact."), (45, "$0 sit|sits back, watching $i1 cook within the flames.", "$0 sit|sits back, watching $i1 cook within the flames."), (45, "When one side of $i1 has started to char and blacken badly, $0 awkwardly up-end|ends the massive chunk of meat so that the rawer side is directly in the fire.", "When one side of $i1 has started to char and blacken badly, $0 awkwardly up-end|ends the massive chunk of meat so that the rawer side is directly in the fire."), (35, "$0 finally dCleaning Rag|dCleaning Rags $p1 out of $t1, though there's a fair coating of ash and dirt all over the meat.", "$0 wait|waits too long, and a terrible smelling smoke rises up from $f1.")], ["Tag - 1x an item with the Pig Forequarter tag"], ["TagTool - Held - an item with the Fire tag"], ["SimpleProduct - 1x an unevenly cooked pig forequarter (#383)"], ["SimpleProduct - 1x some burnt meat (#188)"]);
		AddCraft("cook pig hindquarter", "Cooking", "cook a pig roast", "cooking a pig hindquarter", "a cooking event for a pig leg", "HasCooking", null, null, null, _traits["Cooking"] ?? _traits["Cook"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 5, false, [(35, "$0 dCleaning Rag|dCleaning Rags $i1 closer to $t1.", "$0 dCleaning Rag|dCleaning Rags $i1 closer to $t1."), (40, "With some difficulty, $0 dCleaning Rag-drop|drops $i1 onto $t1, throwing up embers from the impact.", "With some difficulty, $0 dCleaning Rag-drop|drops $i1 onto $t1, throwing up embers from the impact."), (45, "$0 sit|sits back, watching $i1 cook within the flames.", "$0 sit|sits back, watching $i1 cook within the flames."), (45, "When one side of $i1 has started to char and blacken badly, $0 awkwardly up-end|ends the massive chunk of meat so that the rawer side is directly in the fire.", "When one side of $i1 has started to char and blacken badly, $0 awkwardly up-end|ends the massive chunk of meat so that the rawer side is directly in the fire."), (35, "$0 finally dCleaning Rag|dCleaning Rags $p1 out of $t1, though there's a fair coating of ash and dirt all over the meat.", "$0 wait|waits too long, and a terrible smelling smoke rises up from $f1.")], ["Tag - 1x an item with the Pig Hindquarter tag"], ["TagTool - Held - an item with the Fire tag"], ["SimpleProduct - 1x an unevenly cooked pig hindquarter (#384)"], ["SimpleProduct - 1x some burnt meat (#188)"]);
		AddCraft("scout for good tree", "Forestry", "scout for a suitable tree to chop down", "scouting a grove of trees", "a scouting event", "HasForestry", null, null, null, _traits["Lumberjacking"] ?? _traits["Lumberjack"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorPass, 5, 5, false, [(55, "$0 begin|begins to scout $i1, searching for a suitable tree.", "$0 begin|begins to scout $i1, searching for a suitable tree."), (45, "$0 gauge|gauges the width of several tree trunks, wandering among $i1.", "$0 gauge|gauges the width of several tree trunks, wandering among $i1."), (45, "$0 check|checks the height of each tree within $i1, and the length and thickness of its branches.", "$0 check|checks the height of each tree within $i1, and the length and thickness of its branches."), (45, "$0 kneel|kneels beside a tree, checking the soil around it and the condition of its roots.", "$0 kneel|kneels beside a tree, checking the soil around it and the condition of its roots."), (45, "$0 seem|seems to settle on one tree in particular, and are|is successful in scouting out $p1.", "$0 seem|seems to settle on one tree in particular, and are|is successful in scouting out $f1.")], ["Tag - 1x an item with the Grove Trees tag"], [], ["SimpleProduct - 1x &a_an[@material] tree (#247)"], ["SimpleProduct - 1x a gnarled @material tree with twisted branches (#572)"], [(1, 1)], [(1, 1)]);
		AddCraft("chop tree", "Forestry", "chop down a tree", "cutting down a tree", "a tree in the process of being cut down", "HasForestry", null, null, null, _traits["Lumberjacking"] ?? _traits["Lumberjack"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorPass, 5, 4, false, [(30, "$0 approach|appproaches $i1 and heft|hefts up $t1, studying $i1.", "$0 approach|appproaches $i1 and heft|hefts up $t1, studying $i1."), (30, "$0 ready|readies $t1, then begin|begins to swing it into $i1 repeatedly, chipping out small pieces of wood.", "$0 ready|readies $t1, then begin|begins to swing it into $i1 repeatedly, chipping out small pieces of wood."), (45, "$0 continue|continues to chop $i1 down, hacking out a wedge of wood near the bottom of the tree trunk.", "$0 continue|continues to chop $i1 down, hacking out a wedge of wood near the bottom of the tree trunk."), (45, "With a sharp 'CRACK', $i1 begins to topple to the side, crashing to the ground as $p1 as $0 jump|jumps well out of the way.", "With a sharp 'CRACK', $i1 begins to topple to the side, crashing to the ground as $f1 as $0 jump|jumps well out of the way.")], ["Tag - 1x an item with the Tree tag"], ["TagTool - Held - an item with the Felling Axe tag"], ["SimpleProduct - 1x a fallen @material tree trunk (#246)"], ["SimpleProduct - 1x a warped @material tree trunk with uneven bark (#571)"], [(1, 1)], [(1, 1)]);
		AddCraft("process fallen tree", "Forestry", "processing a fallen tree", "processing a fallen tree", "a tree in the process of being processed", "HasForestry", null, null, null, _traits["Lumberjacking"] ?? _traits["Lumberjack"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorPass, 5, 4, false, [(30, "$0 straddle|straddles $i1 and begin|begins to strip away bark and branches with the wedge-head of $t1.", "$0 straddle|straddles $i1 and begin|begins to strip away bark and branches with the wedge-head of $t1."), (30, "$0 hack|hacks away a thicker branch on $i1, working steadily to reduce it to a more log-like shape.", "$0 hack|hacks away a thicker branch on $i1, working steadily to reduce it to a more log-like shape."), (45, "$0 straighten|straightens away from $i1 and, after measuring out the length of the trunk, begin|begins to chop it down the middle with broad, focused swings of $t1.", "$0 straighten|straightens away from $i1 and, after measuring out the length of the trunk, begin|begins to chop it down the middle with broad, focused swings of $t1."), (45, "After some time, $0 step|steps back, having severed and neatly seperated the fallen tree trunk into $p1.", "After some time, $0 step|steps back, having very messily and inexpertly separated the fallen tree trunk into $f1.")], ["Tag - 1x an item with the Trunk tag"], ["TagTool - Held - an item with the Splitting Axe tag"], ["SimpleProduct - 2x &a_an[@material] log (#211)"], ["SimpleProduct - 1x &a_an[@material] log (#211)"], [(1, 1)], [(1, 1)]);
		AddCraft("dig grave", "General", "Dig a decent sized hole to bury a body in", "digging a grave", "a grave in the process of being dug", "AlwaysTrue", "CanDigGrave", "WhyCannotDigGrave", null, _traits["Labouring"] ?? _traits["Labourer"] ?? _traits.First().Value, Difficulty.VeryEasy, Outcome.None, 5, 3, true, [(20, "$0 begin|begins to dig with $t1.", "$0 begin|begins to dig with $t1."), (20, "$0 continue|continues to dump shovelful after shoveful of earth beside the small, slowly widening hole.", "$0 continue|continues to dump shovelful after shoveful of earth beside the small, slowly widening hole."), (20, "With steady, monotonous motions, $0 continue|continues to use $t1 to dig a great big hole in the ground, emptying dirt from it onto a growing pile beside the hole.", "With steady, monotonous motions, $0 continue|continues to use $t1 to dig a great big hole in the ground, emptying dirt from it onto a growing pile beside the hole."), (20, "Having widened it appropriately, $0 work|works on lengthening the hole, shoveling dirt from it onto the level ground beside the growing pit.", "Having widened it appropriately, $0 work|works on lengthening the hole, shoveling dirt from it onto the level ground beside the growing pit."), (20, "$0 jump|jumps into the hole, deepening it with yet more repetitive strokes of $t1, digging out more and more dirt.", "$0 jump|jumps into the hole, deepening it with yet more repetitive strokes of $t1, digging out more and more dirt."), (20, "Finally, $0 have|has managed to dig out $p1, just ready and waiting now to be filled.", "Finally, $0 have|has managed to dig out $f1, just ready and waiting now to be filled.")], [], ["TagTool - Wielded - an item with the shovel tag"], ["SimpleProduct - 1x an open grave (#183)"], ["SimpleProduct - 1x an open grave (#183)"]);
		AddCraft("fill grave", "General", "Fill in a previously dug grave", "filling in a grave", "a grave in the process of being filled in", "AlwaysTrue", null, null, null, _traits["Labouring"] ?? _traits["Labourer"] ?? _traits.First().Value, Difficulty.VeryEasy, Outcome.None, 5, 4, true, [(20, "$0 begin|begins the slow process of filling $i1, using $t1 to heap dirt back into the hole.", "$0 begin|begins the slow process of filling $i1, using $t1 to heap dirt back into the hole."), (20, "$0 continue|continues to fill in $i1.", "$0 continue|continues to fill in $i1."), (20, "It is long and tedious, but $0 continue|continues to fill in $i1.", "It is long and tedious, but $0 continue|continues to fill in $i1."), (20, "$0 spend|spends a very long time shoveling dirt from the pile beside $i1 back into the grave.", "$0 spend|spends a very long time shoveling dirt from the pile beside $i1 back into the grave."), (20, "Eventually, $i1 is all but filled, and $0 shovel|shovels the last bit of dirt back into the hole.", "Eventually, $i1 is all but filled, and $0 shovel|shovels the last bit of dirt back into the hole."), (20, "$0 pat|pats the top of $p1 with $t1, smoothing down the dirt.", "$0 pat|pats the top of $f1 with $t1, smoothing down the dirt.")], ["Tag - 1x an item with the Open Grave tag"], ["TagTool - InRoom - an item with the shovel tag"], ["SimpleProduct - 1x a grave (#182)"], ["SimpleProduct - 1x a grave (#182)"]);
		AddCraft("extinguish fire", "General", "extinguish a fire", "putting out a fire", "a firefighting effort", "AlwaysTrue", null, null, null, _traits["Labouring"] ?? _traits["Labourer"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 3, false, [(30, "$0 begin|begins to put out $i1, throwing $i2 onto it.", "$0 begin|begins to put out $i1, throwing $i2 onto it."), (20, "$0 continue|continues to fight $i1 by extinguishing it with $i2.", "$0 continue|continues to fight $i1 by extinguishing it with $i2."), (25, "$0 finally manage|manages to extinguish $i1.", "$0 are|is unable to extinguish $f1.")], ["Tag - 1x an item with the Fire tag", "LiquidUse - 15.14 litres of Water"], [], [], ["SimpleProduct - 1x a small fire (#838)"]);
		AddCraft("extinguish inferno", "General", "extinguish a big fire", "putting out a blazing inferno", "a firefighting effort", "AlwaysTrue", null, null, null, _traits["Labouring"] ?? _traits["Labourer"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorPass, 5, 4, false, [(30, "$0 begin|begins to put out $i1, throwing $i2 onto it.", "$0 begin|begins to put out $i1, throwing $i2 onto it."), (20, "$0 continue|continues to fight $i1 by extinguishing it with $i2.", "$0 continue|continues to fight $i1 by extinguishing it with $i2."), (20, "$0 throw|throws $i2 onto $i1, working around the edges of the blaze.", "$0 throw|throws $i2 onto $i1, working around the edges of the blaze."), (25, "$0 finally manage|manages to less the severity of $i1, producing $p1.", "$0 are|is unable to extinguish $f1.")], ["Tag - 1x an item with the Hot Fire tag", "LiquidUse - 15.14 litres of Water"], [], ["SimpleProduct - 1x a small fire (#838)"], ["SimpleProduct - 1x a fire burning out of control (#176)"]);
		AddCraft("melt metal object", "General", "melt down a metal object", "melting a metal object", "ongoing forge work", "hasblacksmithing", null, null, null, _traits["Blacksmithing"] ?? _traits["Blacksmith"] ?? _traits.First().Value, Difficulty.Automatic, Outcome.MinorFail, 5, 5, false, [(35, "$0 check|checks $t1, verifying that $t2 burns nice and hot.", "$0 check|checks $t1, verifying that $t2 burns nice and hot."), (40, "$0 drop|drops $i1 into $i2, sealing the crucible with a clay plug made from $i3.", "$0 drop|drops $i1 into $i2, sealing the crucible with a clay plug made from $i3."), (45, "$0 use|uses $t3 to carefully set $i2 within $t2.", "$0 use|uses $t3 to carefully set $i2 within $t2."), (45, "$0 move|moves to the side of $t1, using $t4 to fan the flames higher, generating intense heat.", "$0 move|moves to the side of $t1, using $t4 to fan the flames higher, generating intense heat."), (35, "$0 continue|continues to use $t4 to fan $t2, working diligently to keep the fires burning.", "$0 continue|continues to use $t4 to fan $t2, working diligently to keep the fires burning."), (35, "$0 straighten|straightens, using $t3 to reach into $t2 and retrieve $i2.", "$0 straighten|straightens, using $t3 to reach into $t2 and retrieve $i2."), (35, "$0 crack|cracks open $i2 to reveal $p1.", "$0 continue|continues to use $t4 to fan $t2, working diligently to keep the fires burning.")], ["Tag - 1x an item with the Meltable tag", "Tag - 1x an item with the Crucible tag", "Commodity - 100 grams of clay"], ["TagTool - InRoom - an item with the Forge tag", "TagTool - InRoom - an item with the Hot Fire tag", "TagTool - Held - an item with the Forge Tongs tag", "TagTool - Held - an item with the Bellows tag"], ["ScrapInput - 30.00% by weight of 1x an item with the Meltable tag ($i1)"], []);
		AddCraft("commoditise", "General", "this craft takes an item that is commoditisable and breaks it down into a commodity with the equivalent weight. you should always do craft preview before using this craft to see what will be consumed. warning: irreversible", "crafting something", "an item is being commoditised", "AlwaysTrue", null, null, null, _traits["Foraging"] ?? _traits["Forage"] ?? _traits.First().Value, Difficulty.Automatic, Outcome.NotTested, 5, 0, false, [(2, "$0 break|breaks down $i1 into $p1", "$0 break|breaks down $i1 into $f1")], ["SimpleMaterial - 1x an item with material tagged as Commoditisable"], [], ["ScrapInput - 100.00% by weight of 1x an item with material tagged as Commoditisable ($i1)"], ["ScrapInput - 100.00% by weight of 1x an item with material tagged as Commoditisable ($i1)"]);
		AddCraft("make mudbricks", "Labouring", "create adobe bricks.", "making adobe bricks", "adobe bricks under construction", "HasLabouring", null, null, null, _traits["Labouring"] ?? _traits["Labourer"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorPass, 5, 4, false, [(20, "$0 begin|begins to mix $i1, $i2 and $i3 in $t2 until there is a wet, sticky slurry.", "$0 begin|begins to mix $i1, $i2 and $i3 in $t2 until there is a wet, sticky slurry."), (20, "$0 set|sets up $t1 and pour|pours the slurry mixture into the mould.", "$0 set|sets up $t1 and pour|pours the slurry mixture into the mould."), (120, "$0 settle|settles back to wait, leaving the mixture in $t1 to slowly set.", "$0 settle|settles back to wait, leaving the mixture in $t1 to slowly set."), (180, "$0 carefully extract|extracts an adobe brick from $t1, and repeat|repeats the process until there are $p1.", "$0 attempt|attempts to extract the adobe brick from $t1, but it has not properly set and spills everywhere.")], ["Tag - 85x an item with the Dirt tag", "Tag - 45x an item with the Grass tag", "LiquidUse - 7.57 litres of Water"], ["TagTool - InRoom - an item with the Mould Brick tag", "TagTool - Held - an item with the cooking pot tag"], ["SimpleProduct - 4x a heavy mudbrick (#174)"], []);
		AddCraft("make work boots", "Leatherworking", "make leather boots", "making boots", "a boot making craft", "HasLeatherworking", null, null, null, _traits["Leatherworking"] ?? _traits["Tanner"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 use|uses the tip of $t1 to lightly cut a pattern into the surface of $i1, drawing the rough shape of a boot sole, boot side cuts, and what will be the tongue flap.", "$0 use|uses the tip of $t1 to lightly cut a pattern into the surface of $i1, drawing the rough shape of a boot sole, boot side cuts, and what will be the tongue flap."), (30, "Next, $0 take|takes up $t2 and begin|begins to cut out the patterns, setting each piece aside when it is cut free.", "Next, $0 take|takes up $t2 and begin|begins to cut out the patterns, setting each piece aside when it is cut free."), (45, "$0 thread|threads $i3 through $t3, then begin|begins to stitch the various pieces together, forming a rough, unfinished boot.", "$0 thread|threads $i3 through $t3, then begin|begins to stitch the various pieces together, forming a rough, unfinished boot."), (30, "$0 pad|pads the interior of the unfinished boot with $i2, then flip|flips the boot over, punching $i4 into the bottom sole of the shoe.", "$0 pad|pads the interior of the unfinished boot with $i2, then flip|flips the boot over, punching $i4 into the bottom sole of the shoe."), (35, "When one boot is finished, $0 repeat|repeats the whole process again to produce another boot, and sets $p1 aside after some quality checks.", "$0 set|sets the boot aside when finished, and start|starts the process of making another... but the first boot unravels as soon as it has been set down, and everything is a mess. In the end, only $f1 can be salvaged.")], ["Tag - 4x an item with the Thick Leather tag", "Tag - 10x an item with the Padding tag", "Tag - 1x an item with the Thread tag", "Tag - 10x an item with the Armouring Studs tag"], ["TagTool - Held - an item with the Knife tag", "TagTool - Held - an item with the Scissors tag", "TagTool - Held - an item with the Sewing Needle tag"], ["SimpleProduct - 1x a pair of thick, brown leather work boots (#282)"], ["UnusedInput - 45.00% of 10x an item with the Armouring Studs tag ($i4)"]);
		AddCraft("make leather gloves", "Leatherworking", "assemble a pair of leather gloves", "making leather gloves", "a glove making craft", "HasLeatherworking", null, null, null, _traits["Leatherworking"] ?? _traits["Tanner"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of assembling a pair of leather gloves, using the tip of $t1 to trace a pattern into the surface of $i1, drawing the rough shape of the glove pattern in the leather.", "$0 begin|begins the process of assembling a pair of leather gloves, using the tip of $t1 to trace a pattern into the surface of $i1, drawing the rough shape of the glove pattern in the leather."), (30, "$0 use|uses $t2 to cut the pieces out of $i1, and further cut|cuts long strips out of the off-cuts of the leather, setting those aside for the moment.", "$0 use|uses $t2 to cut the pieces out of $i1, and further cut|cuts long strips out of the off-cuts of the leather, setting those aside for the moment."), (45, "$0 thread|threads $t3 with $i3, and begin|begins the process of sewing two pieces of glove pattern cut leather together.", "$0 thread|threads $t3 with $i3, and begin|begins the process of sewing two pieces of glove pattern cut leather together."), (30, "$0 continue|continues to sew the glove pieces together, and use|uses $i2 to pad the interior of the partially finished gloves, adding comfort to the durable leather.", "$0 continue|continues to sew the glove pieces together, and use|uses $i2 to pad the interior of the partially finished gloves, adding comfort to the durable leather."), (35, "Finally, $0 stitch|stitches the pliable leather straps to the wrist end of each glove, allowing them to be tightened to fit, then set|sets aside $p1.", "Finally, $0 stitch|stitches the pliable leather straps to the wrist end of each glove, allowing them to be tightened to fit, however, the gloves are a sloppy mess with only four finger tubes each, and only $f1 is salvagable.")], ["Tag - 2x an item with the Thick Leather tag", "Tag - 5x an item with the Padding tag", "Tag - 1x an item with the Thread tag"], ["TagTool - Held - an item with the Knife tag", "TagTool - Held - an item with the Scissors tag", "TagTool - Held - an item with the Sewing Needle tag"], ["SimpleProduct - 1x a pair of segmented leather gauntlets (#284)"], ["UnusedInput - 45.00% of 5x an item with the Padding tag ($i2)"]);
		AddCraft("make leather strip skirt", "Leatherworking", "assemble a skirt of leather strips", "making a leather skirt", "a skirt making craft", "HasLeatherworking", null, null, null, _traits["Leatherworking"] ?? _traits["Tanner"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of assembling a skirt of leather strips, using $t1 to cut wide, thick strips out of $i1.", "$0 begin|begins the process of assembling a skirt of leather strips, using $t1 to cut wide, thick strips out of $i1."), (30, "$0 continue|continues to cut strips out of $i1, piling them to the side.", "$0 continue|continues to cut strips out of $i1, piling them to the side."), (45, "$0 cut|cuts a larger, wider band of leather out of $i1, then set|sets aside $t1 and reach|reaches for $t2, threading the loose end of the first of $i2 through the eye.", "$0 cut|cuts a larger, wider band of leather out of $i1, then set|sets aside $t1 and reach|reaches for $t2, threading the loose end of the first of $i2 through the eye."), (30, "$0 begin|begins to stitch the thick leather strips to the wider band of leather, so that the strips hang length-wise from the band, overlapping one another.", "$0 begin|begins to stitch the thick leather strips to the wider band of leather, so that the strips hang length-wise from the band, overlapping one another."), (35, "Finally, $0 hold|holds up the finished product for a final inspection, checking over that all the strips are attached securely, then set|sets aside $p1.", "Finally, $0 hold|holds up the finished product for a final inspection. The poor quality, however, means that it must be scrapped for $f1.")], ["Tag - 6x an item with the Thick Leather tag", "Tag - 2x an item with the Thread tag"], ["TagTool - Held - an item with the Scissors tag", "TagTool - Held - an item with the Sewing Needle tag"], ["SimpleProduct - 1x an armoured skirt of many thick leather strips (#287)"], ["UnusedInput - 50.00% of 2x an item with the Thread tag ($i2)"]);
		AddCraft("make curved leather pieces", "Leatherworking", "cut curved pieces from a leather sheet", "cutting pieces out of a leather sheet", "a leather sheet being cut into strips", "HasLeatherworking", null, null, null, _traits["Leatherworking"] ?? _traits["Tanner"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 4, false, [(15, "$0 lay|lays out $i1, roughly tracing curved lines with the tip of $t1 onto the tanned leather.", "$0 lay|lays out $i1, roughly tracing curved lines with the tip of $t1 onto the tanned leather."), (25, "$0 begin|begins to cut through the thick leather, following along the roughly traced lines with $t2.", "$0 begin|begins to cut through the thick leather, following along the roughly traced lines with $t2."), (25, "$0 heat|heats $i2 over $t3 until it is bubbling hot, then dip|dips the curve leather pieces into the liquid.", "$0 heat|heats $i2 over $t3 until it is bubbling hot, then dip|dips the curve leather pieces into the liquid."), (40, "$0 set|sets $p1 out to dry until the wax hardens, giving the leather its shape.", "The boiling wax completely ruin|ruins the leather pieces, leaving $0 with nothing.")], ["Tag - 1x an item with the Thick Leather tag", "Commodity - 500 grams of beeswax"], ["TagTool - Held - an item with the Knife tag", "TagTool - Held - an item with the Scissors tag", "TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 4x short, curved piece of leather (#254)"], []);
		AddCraft("cut thick leather sheet", "Leatherworking", "cut a tanned hide into leather sheets", "cutting a tanned hide into sheets", "a tanned hide being cut into leather sheets", "HasLeatherworking", null, null, null, _traits["Leatherworking"] ?? _traits["Tanner"] ?? _traits.First().Value, Difficulty.VeryEasy, Outcome.MinorFail, 5, 3, false, [(15, "$0 lay|lays out $i1, beginning to cut it with $t1 into similarly sized leather sheets.", "$0 lay|lays out $i1, beginning to cut it with $t1 into similarly sized leather sheets."), (20, "$0 continue|continues to cut up $i1, dividing it into two separate leather sheets.", "$0 continue|continues to cut up $i1, dividing it into two separate leather sheets."), (25, "$0 hold|holds up $p1, surveying the finished work.", "When $0 hold|holds up the leather sheets, it become|becomes apparent that they are utter shit and only $f1 is salvageable.")], ["Tag - 1x an item with the Thick Leather tag"], ["TagTool - Held - an item with the Scissors tag"], ["SimpleProduct - 2x sheet of thick leather (#253)"], ["SimpleProduct - 1x sheet of thick leather (#253)"]);
		AddCraft("tan thick hide", "Leatherworking", "tan a thick raw hide", "tanning a thick hide", "a thick hide in the process of being tanned", "HasLeatherworking", null, null, null, _traits["Leatherworking"] ?? _traits["Tanner"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 4, false, [(15, "$0 trim|trims any remaining fat or gristle from $i1, cleaning it up.", "$0 trim|trims any remaining fat or gristle from $i1, cleaning it up."), (15, "$0 place|places $i1 into $t1, making sure it is covered with $i2.", "$0 place|places $i1 into $t1, making sure it is covered with $i2."), (30, "$0 leave|leaves $i1 soak in $t1 for a short time, curing in the foul liquid.", "$0 leave|leaves $i1 soak in $t1 for a short time, curing in the foul liquid."), (15, "$0 drain|drains $t1 and shake|shakes out $p1, laying it out to finish drying.", "$0 drain|drains $t1 and shake|shakes out the hide, but it's somehow been ruined by the process and has a rotten, acidic smell.")], ["Tag - 1x an item with the Thick Leather tag", "LiquidTagUse - 15.14 litres of a liquid tagged Tanning Agent"], ["TagTool - InRoom - an item with the cooking pot tag"], ["SimpleProduct - 1x tanning thick hide (#270)"], []);
		AddCraft("make crude locksmithing tools", "Locksmithing", "make crude locksmithing tools", "making crude locksmithing tools", "a locksmithing craft", "haslocksmithing", null, null, null, _traits["Locksmithing"] ?? _traits["Locksmith"] ?? _traits.First().Value, Difficulty.VeryEasy, Outcome.MinorFail, 5, 5, false, [(25, "$0 start|starts to assemble a crude set of locksmithing tools, laying out $i1.", "$0 start|starts to assemble a crude set of locksmithing tools, laying out $i1."), (40, "$0 dump|dumps $i2 into $i1, then turn|turns to $i3, beginning to twist and shape the wires.", "$0 dump|dumps $i2 into $i1, then turn|turns to $i3, beginning to twist and shape the wires."), (55, "$0 continue|continues to shape the wire, hooking the top end sharply, and form|forms a variety of different looking lockpicks.", "$0 continue|continues to shape the wire, hooking the top end sharply, and form|forms a variety of different looking lockpicks."), (35, "$0 hook|hooks the remaining wire of $i3 into a crude, questionably useful pair of tweezers.", "$0 hook|hooks the remaining wire of $i3 into a crude, questionably useful pair of tweezers."), (35, "$0 place|places the lockpicks and tweezers into $i1, then close|closes the bag, setting $p1 aside.", "$0 are|is wholly incompetent, and manage|manages to mess up everything somehow, and ends up only with $f1.")], ["Tag - 1x an item with the Porous Container tag", "Tag - 1x an item with the Pliers tag", "Tag - 5x an item with the Wire tag"], [], ["SimpleProduct - 1x a disorganized, rusted set of locksmithing tools (#490)"], ["SimpleProduct - 1x a fraying @material bag with a broken drawstring (#444)"], [(1, 1)], [(1, 1)]);
		AddCraft("make simple wood bolt latch", "Locksmithing", "make a simple wood bolt latch", "making a simple bolt latch", "a locksmithing craft", "haslocksmithing", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 5, false, [(25, "$0 take|takes up $i1, and use|uses $t1 to begin carving it into the makings of a bolt latch.", "$0 take|takes up $i1, and use|uses $t1 to begin carving it into the makings of a bolt latch."), (30, "$0 continue|continues to carve $i1, whittling it down into smaller pieces.", "$0 continue|continues to carve $i1, whittling it down into smaller pieces."), (55, "$0 test|tests the fit of the bolt, pushing it through the latch.", "$0 test|tests the fit of the bolt, pushing it through the latch."), (35, "$0 refine|refines the wooden cylinder that is the bolt, smoothing it down with scrapes of $t1.", "$0 refine|refines the wooden cylinder that is the bolt, smoothing it down with scrapes of $t1."), (35, "$0 wiggle|wiggles the bolt through the latch again, and then voila, $p1.", "$0 are|is wholly incompetent, and manage|manages to mess up everything somehow, and ends up with $f1.")], ["Tag - 1x an item with the Branch tag"], ["TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 1x &a_an[@material] deadbolt (#143)"], ["SimpleProduct - 1x a strip of wood (#240)"], [(1, 1)]);
		AddCraft("make simple metal bolt latch", "Locksmithing", "make a simple metal bolt latch", "making a simple bolt latch", "a locksmithing craft", "haslocksmithing", null, null, null, _traits["Blacksmithing"] ?? _traits["Blacksmith"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 5, false, [(25, "$0 check|checks the heat of $t3 and, satisfied, grab|grabs $i1 with $t4 and heat|heats $i1 over it until red-hot.", "$0 check|checks the heat of $t3 and, satisfied, grab|grabs $i1 with $t4 and heat|heats $i1 over it until red-hot."), (30, "$0 hold|holds $i1 against $t5 and use|uses $t1 to shape the metal into a longer, thinner shape.", "$0 hold|holds $i1 against $t5 and use|uses $t1 to shape the metal into a longer, thinner shape."), (35, "$0 continue|continues to knock $i1 into shape, or several shapes - the hammer strokes of $t1 separate the metal into separate chunks, a thinner tube and a flat plate.", "$0 continue|continues to knock $i1 into shape, or several shapes - the hammer strokes of $t1 separate the metal into separate chunks, a thinner tube and a flat plate."), (35, "$0 use|uses $t2 to punch holes into the metal plate, enabling the thinner tube to be pushed through it.", "$0 use|uses $t2 to punch holes into the metal plate, enabling the thinner tube to be pushed through it."), (35, "$0 finish|finishes $p1 by twisting $i2 around the thinner metal tube, creating a stopper at one end, and a handle at the other.", "$0 are|is wholly incompetent, and are|is lucky to still have $f1 at the end of the whole failed mess.")], ["CommodityTag - 250 grams of a material tagged as Forged Metal", "Tag - 2x an item with the Wire tag"], ["TagTool - Held - an item with the Hammer tag", "TagTool - Held - an item with the Awl tag", "TagTool - InRoom - an item with the Hot Fire tag", "TagTool - Held - an item with the Forge Tongs tag", "TagTool - InRoom - an item with the Anvil tag"], ["SimpleProduct - 1x &a_an[@material] deadbolt with smooth edges and a heavy, reliable mechanism (#745)"], ["UnusedInput - 65.00% of 250 grams of a material tagged as Forged Metal ($i1)"], [(1, 1)]);
		AddCraft("make locksmithing tools", "Locksmithing", "make locksmithing tools", "making locksmithing tools", "a locksmith tool-making craft", "haslocksmithing", null, null, null, _traits["Locksmithing"] ?? _traits["Locksmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 4, false, [(25, "$0 start|starts to assemble a set of locksmithing tools, laying out $i1.", "$0 start|starts to assemble a set of locksmithing tools, laying out $i1."), (30, "$0 place|places $i2 into $i1, then turn|turns to $i3, beginning to twist and shape the wires.", "$0 place|places $i2 into $i1, then turn|turns to $i3, beginning to twist and shape the wires."), (35, "$0 continue|continues to shape the wire, hooking the top end sharply, and form|forms a variety of different looking lockpicks.", "$0 continue|continues to shape the wire, hooking the top end sharply, and form|forms a variety of different looking lockpicks."), (35, "$0 hook|hooks the remaining wire of $i3 into a practical, if simple, pair of tweezers.", "$0 hook|hooks the remaining wire of $i3 into a practical, if simple, pair of tweezers."), (35, "$0 place|places the lockpicks and tweezers into $i1, then close|closes the sack, setting $p1 aside.", "$0 are|is wholly incompetent, and manage|manages to mess up everything somehow, and ends up only with $f1.")], ["Tag - 1x an item with the Porous Container tag", "Tag - 1x an item with the Pliers tag", "Tag - 10x an item with the Wire tag"], [], ["SimpleProduct - 1x a set of locksmithing tools (#109)"], ["UnusedInput - 50.00% of 10x a twisted hunk of @material ($i3) (#169)"]);
		AddCraft("type human blood", "Medical", "this craft tests human blood and reveals the bloodtype if successful.", "testing blood", "an in-progress blood-typing test", "HasBasicPharmacology", null, null, null, _traits["Pharmacology"] ?? _traits["Pharmacology"] ?? _traits.First().Value, Difficulty.ExtremelyEasy, Outcome.MajorFail, 5, 4, true, [(15, "$0 begin|begins by examining $i2 thoroughly, checking for any signs of contamination.", "$0 begin|begins by examining $i2 thoroughly, checking for any signs of contamination."), (15, "Satisfied with the integrity of $i2, @ next begin|begins to apply small amounts of $i1 to the antigen test circles one at a time.", "Satisfied with the integrity of $i2, @ next begin|begins to apply small amounts of $i1 to the antigen test circles one at a time."), (15, "@ continue|continues to apply the blood to the test circles until they are all complete.", "@ continue|continues to apply the blood to the test circles until they are all complete."), (15, "$0 pause|pauses to read the card and interpret $p1.", "$0 pause|pauses to read the card and interpret $f1.")], ["LiquidUse - 5 millilitres of Blood", "Tag - 1x an item with the Human Blood Typing tag"], [], ["BloodTyping - test 5 millilitres of Blood ($i1) against the ABO+Rh blood model"], ["BloodTyping - test 5 millilitres of Blood ($i1) against the ABO+Rh blood model"]);
		AddCraft("make clay crucible", "Pottery", "make a clay crucible", "making a clay crucible", "a blob of clay being shaped", "HasPottery", null, null, null, _traits["Pottery"] ?? _traits["Potter"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 4, false, [(25, "$0 plop|plops down $i and begin|begins to shape it roughly.", "$0 plop|plops down $i and begin|begins to shape it roughly."), (35, "$0 continue|continues to shape $i into the semblance of a wide clay bowl, and pinch|pinches the sides to form simple handles.", "$0 continue|continues to shape $i into the semblance of a wide clay bowl, and pinch|pinches the sides to form simple handles."), (40, "$0 set|sets the unfired clay crucible into $t1, and stoke|stokes $t2, then step|steps back to wait.", "$0 set|sets the unfired clay crucible into $t1, and stoke|stokes $t2, then step|steps back to wait."), (25, "After some time, $0 open|opens $t1 and retrieve|retrieves $p1, setting it aside to cool.", "After some time, $0 open|opens $t1, but the clay crucible within has cracked and shattered in the heat, becoming useless.")], ["Commodity - 1 kilogram of clay"], ["TagTool - InRoom - an item with the Kiln tag", "TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 1x a clay crucible (#118)"], []);
		AddCraft("make knife blade mould", "Pottery", "make a knife blade mould", "making a mould for a knife blade", "a blob of clay being shaped", "HasPottery", null, null, null, _traits["Pottery"] ?? _traits["Potter"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 4, false, [(25, "$0 plop|plops down $i and begin|begins to shape it into a rough square.", "$0 plop|plops down $i and begin|begins to shape it into a rough square."), (35, "$0 continue|continues to shape $i into a thick square, and then press|presses $t3 into the wet clay, leaving a deep imprint of the blade behind.", "$0 continue|continues to shape $i into a thick square, and then press|presses $t3 into the wet clay, leaving a deep imprint of the blade behind."), (40, "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait.", "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait."), (25, "After some time, $0 open|opens $t1 and retrieve|retrieves $p1, setting it aside to cool.", "After some time, $0 open|opens $t1, but the clay mould within has cracked and shattered in the heat, becoming useless.")], ["Commodity - 500 grams of clay"], ["TagTool - InRoom - an item with the Kiln tag", "TagTool - InRoom - an item with the Fire tag", "TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 1x a knife blade mould (#125)"], []);
		AddCraft("make sword blade mould", "Pottery", "make a sword blade mould", "making a mould for a sword blade", "a blob of clay being shaped", "HasPottery", null, null, null, _traits["Pottery"] ?? _traits["Potter"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 4, false, [(25, "$0 plop|plops down $i and begin|begins to shape it into a rough square.", "$0 plop|plops down $i and begin|begins to shape it into a rough square."), (35, "$0 continue|continues to shape $i into a thick square, and then press|presses $t3 into the wet clay, leaving a deep imprint of the blade behind.", "$0 continue|continues to shape $i into a thick square, and then press|presses $t3 into the wet clay, leaving a deep imprint of the blade behind."), (40, "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait.", "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait."), (25, "After some time, $0 open|opens $t1 and retrieve|retrieves $p1, setting it aside to cool.", "After some time, $0 open|opens $t1, but the clay mould within has cracked and shattered in the heat, becoming useless.")], ["Commodity - 1 kilogram 200 grams of clay"], ["TagTool - InRoom - an item with the Kiln tag", "TagTool - InRoom - an item with the Fire tag", "TagTool - Held - an item with the Swords tag"], ["SimpleProduct - 1x a sword blade mould (#126)"], []);
		AddCraft("make mace head mould", "Pottery", "make a mace head mould", "making a mould for a mace head", "a blob of clay being shaped", "HasPottery", null, null, null, _traits["Pottery"] ?? _traits["Potter"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 4, false, [(25, "$0 plop|plops down $i and begin|begins to shape it into a rough square.", "$0 plop|plops down $i and begin|begins to shape it into a rough square."), (35, "$0 continue|continues to shape $i into a thick square, and then press|presses $t3 into the wet clay, leaving a deep imprint of the head behind.", "$0 continue|continues to shape $i into a thick square, and then press|presses $t3 into the wet clay, leaving a deep imprint of the head behind."), (40, "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait.", "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait."), (25, "After some time, $0 open|opens $t1 and retrieve|retrieves $p1, setting it aside to cool.", "After some time, $0 open|opens $t1, but the clay mould within has cracked and shattered in the heat, becoming useless.")], ["Commodity - 1 kilogram of clay"], ["TagTool - InRoom - an item with the Kiln tag", "TagTool - InRoom - an item with the Fire tag", "TagTool - Held - an item with the Maces tag"], ["SimpleProduct - 1x a mace head mould (#127)"], []);
		AddCraft("make spearhead mould", "Pottery", "make a spearhead mould", "making a mould for a spearhead", "a blob of clay being shaped", "HasPottery", null, null, null, _traits["Pottery"] ?? _traits["Potter"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 4, false, [(25, "$0 plop|plops down $i and begin|begins to shape it into a rough square.", "$0 plop|plops down $i and begin|begins to shape it into a rough square."), (35, "$0 continue|continues to shape $i into a thick square, and then press|presses the head of $t3 into the wet clay, leaving a deep imprint of the head behind.", "$0 continue|continues to shape $i into a thick square, and then press|presses the head of $t3 into the wet clay, leaving a deep imprint of the head behind."), (40, "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait.", "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait."), (25, "After some time, $0 open|opens $t1 and retrieve|retrieves $p1, setting it aside to cool.", "After some time, $0 open|opens $t1, but the clay mould within has cracked and shattered in the heat, becoming useless.")], ["Commodity - 750 grams of clay"], ["TagTool - InRoom - an item with the Kiln tag", "TagTool - InRoom - an item with the Fire tag", "TagTool - Held - an item with the Spears tag"], ["SimpleProduct - 1x a spearhead mould (#129)"], []);
		AddCraft("make axehead mould", "Pottery", "make an axehead mould", "making a mould for an axehead", "a blob of clay being shaped", "HasPottery", null, null, null, _traits["Pottery"] ?? _traits["Potter"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 4, false, [(25, "$0 plop|plops down $i and begin|begins to shape it into a rough square.", "$0 plop|plops down $i and begin|begins to shape it into a rough square."), (35, "$0 continue|continues to shape $i into a thick square, and then press|presses the head of $t3 into the wet clay, leaving a deep imprint of the head behind.", "$0 continue|continues to shape $i into a thick square, and then press|presses the head of $t3 into the wet clay, leaving a deep imprint of the head behind."), (40, "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait.", "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait."), (25, "After some time, $0 open|opens $t1 and retrieve|retrieves $p1, setting it aside to cool.", "After some time, $0 open|opens $t1, but the clay mould within has cracked and shattered in the heat, becoming useless.")], ["Commodity - 1 kilogram 200 grams of clay"], ["TagTool - InRoom - an item with the Kiln tag", "TagTool - InRoom - an item with the Fire tag", "TagTool - Held - an item with the Axes tag"], ["SimpleProduct - 1x an axehead mould (#128)"], []);
		AddCraft("make sheet metal mould", "Pottery", "make a sheet metal mould", "making a mould for a thin metal sheet", "a blob of clay being shaped", "HasPottery", null, null, null, _traits["Pottery"] ?? _traits["Potter"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 4, false, [(25, "$0 plop|plops down $i and begin|begins to shape it into a large, rough square.", "$0 plop|plops down $i and begin|begins to shape it into a large, rough square."), (35, "$0 continue|continues to shape $i into a large, thick square, and then press|presses out a shallow, uniform imprint of a square in the mould, only fractions of an inch thick.", "$0 continue|continues to shape $i into a large, thick square, and then press|presses out a shallow, uniform imprint of a square in the mould, only fractions of an inch thick."), (40, "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait.", "$0 set|sets the unfired clay mould into $t1, and stoke|stokes $t2, then step|steps back to wait."), (25, "After some time, $0 open|opens $t1 and retrieve|retrieves $p1, setting it aside to cool.", "After some time, $0 open|opens $t1, but the clay mould within has cracked and shattered in the heat, becoming useless.")], ["Commodity - 1 kilogram 200 grams of clay"], ["TagTool - InRoom - an item with the Kiln tag", "TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 1x a sheet metal mould (#131)"], []);
		AddCraft("make crude clay jar", "Pottery", "make a crude unglazed, hand-spun clay jar", "making a crude clay jar", "an unfinished crude clay jar", "HasPottery", null, null, null, _traits["Pottery"] ?? _traits[""] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 11, true, [(20, "@ begin|begins preparing for the task ahead by gathering up all of $i1 into a big pile.", "@ begin|begins preparing for the task ahead by gathering up all of $i1 into a big pile."), (20, "@ work|works $i2 into $i1, using &1's hands to turn the clay over and over.", "@ work|works $i2 into $i1, using &1's hands to turn the clay over and over."), (20, "@ continue|continues to turn the clay and spread the moisture, until it is optimally wet for working.", "@ continue|continues to turn the clay and spread the moisture, until it is optimally wet for working."), (20, "@ begin|begins shaping the clay by hand, working the lump into the broad shape desired.", "@ begin|begins shaping the clay by hand, working the lump into the broad shape desired."), (20, "@ push|pushes a fist into the center of the lump, creating the void in the middle.", "@ push|pushes a fist into the center of the lump, creating the void in the middle."), (20, "@ run|runs a hand around the inside and outside, giving the pot its shape.", "@ run|runs a hand around the inside and outside, giving the pot its shape."), (20, "@ finish|finishes shaping the pot, and carefully transfer|transfers it into $t1.", "@ push|pushes a fist into the center of the lump, creating the void in the middle."), (30, "@ sit|sits back and watch|watches the heat bake out the water from the clay.", "@ run|runs a hand around the inside and outside, giving the pot its shape."), (40, "@ continue|continues to watch the clay pot bake.", "@ finish|finishes shaping the pot, and carefully transfer|transfers it into $t1."), (40, "@ continue|continues to watch the clay pot bake.", "@ sit|sits back and watch|watches the heat bake out the water from the clay.")], ["Commodity - 3 kilograms 500 grams of clay", "LiquidUse - 2 litres of Water"], ["TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 1x a crude fired-clay pot (#0)"], []);
		AddCraft("make large crude clay jar", "Pottery", "make a crude unglazed, hand-spun clay jar", "making a crude clay jar", "an unfinished crude clay jar", "HasPottery", null, null, null, _traits["Pottery"] ?? _traits[""] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 11, true, [(20, "@ begin|begins preparing for the task ahead by gathering up all of $i1 into a big pile.", "@ begin|begins preparing for the task ahead by gathering up all of $i1 into a big pile."), (20, "@ work|works $i2 into $i1, using &1's hands to turn the clay over and over.", "@ work|works $i2 into $i1, using &1's hands to turn the clay over and over."), (20, "@ continue|continues to turn the clay and spread the moisture, until it is optimally wet for working.", "@ continue|continues to turn the clay and spread the moisture, until it is optimally wet for working."), (20, "@ begin|begins shaping the clay by hand, working the lump into the broad shape desired.", "@ begin|begins shaping the clay by hand, working the lump into the broad shape desired."), (20, "@ push|pushes a fist into the center of the lump, creating the void in the middle.", "@ push|pushes a fist into the center of the lump, creating the void in the middle."), (20, "@ run|runs a hand around the inside and outside, giving the pot its shape.", "@ run|runs a hand around the inside and outside, giving the pot its shape."), (20, "@ finish|finishes shaping the pot, and carefully transfer|transfers it into $t1.", "@ push|pushes a fist into the center of the lump, creating the void in the middle."), (30, "@ sit|sits back and watch|watches the heat bake out the water from the clay.", "@ run|runs a hand around the inside and outside, giving the pot its shape."), (40, "@ continue|continues to watch the clay pot bake.", "@ finish|finishes shaping the pot, and carefully transfer|transfers it into $t1."), (40, "@ continue|continues to watch the clay pot bake.", "@ sit|sits back and watch|watches the heat bake out the water from the clay.")], ["Commodity - 30 kilograms of clay", "LiquidUse - 10 litres of Water"], ["TagTool - InRoom - an item with the Fire tag"], ["SimpleProduct - 1x a large, crude fired-clay pot (#0)"], []);
		AddCraft("make torch", "Survival", "Make a torch out of scrap material", "making a torch", "a makeshift torch being made", "AlwaysTrue", null, null, null, _traits["Survival"] ?? _traits["Surviving"] ?? _traits.First().Value, Difficulty.Trivial, Outcome.MinorFail, 5, 3, true, [(20, "$0 begin|begins to wrap $i1 around $i2.", "$0 begin|begins to wrap $i1 around $i2."), (20, "$0 use|uses $i3 to secure $i1 in a wad at the top of $i2.", "$0 use|uses $i3 to secure $i1 in a wad at the top of $i2."), (20, "$0 have|has managed to create $p1.", "$0 have|has managed to create $f1.")], ["Tag - 1x an item with the kindling tag", "Tag - 1x an item with the short shaft tag", "Tag - 1x an item with the Tie tag"], [], ["SimpleProduct - 1x a wooden torch (#72)"], ["SimpleProduct - 1x a wooden torch (#72)"]);
		AddCraft("create makeshift bandage", "Survival", "Create a makeshift bandage by tearing a tag", "tearing up a Cleaning Rag", "a Cleaning Rag being torn into strips", "AlwaysTrue", null, null, null, _traits["Survival"] ?? _traits["Surviving"] ?? _traits.First().Value, Difficulty.Trivial, Outcome.MinorFail, 5, 2, true, [(15, "$0 begin|begins to cut $i1 into strips, using $t1.", "$0 begin|begins to cut $i1 into strips, using $t1."), (15, "$0 set|sets aside $p1.", "$0 set|sets aside $f1.")], ["Tag - 1x an item with the Cleaning Rag tag"], ["TagTool - InRoom - an item with the Cutting tag"], ["SimpleProduct - 1x &a_an[@material] bandage (#76)"], ["SimpleProduct - 1x a rough, fraying @material bandage with uneven texture (#457)"], [(1, 1)], [(1, 1)]);
		AddCraft("build campfire", "Survival", "Create a campfire", "building a campfire", "a campfire being built", "AlwaysTrue", null, null, null, _traits["Survival"] ?? _traits["Surviving"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, true, [(20, "$0 begin|begins to arrange $i2 in a pile that is vaguely pyramid-shaped, stacking individual pieces over others in a cross-hatched pattern.", "$0 begin|begins to arrange $i2 in a pile that is vaguely pyramid-shaped, stacking individual pieces over others in a cross-hatched pattern."), (20, "$0 stuff|stuffs $i1 into the gap in the middle of the pyramid-style stack of wood.", "$0 stuff|stuffs $i1 into the gap in the middle of the pyramid-style stack of wood."), (20, "$0 lean|leans over and painstakingly scrape|scrapes $t1 and $t2 together to create a spark.", "$0 lean|leans over and painstakingly scrape|scrapes $t1 and $t2 together to create a spark."), (20, "$0 blow|blows on the spark, trying to get it to catch and set $i1 alight.", "$0 blow|blows on the spark, trying to get it to catch and set $i1 alight."), (20, "$0 sit|sits back, watching $p1 take flame.", "$0 sit|sits back as disappointingly the fire fails to take. $i1 is burned up and wasted, but $f1 is recoverable.")], ["Tag - 2x an item with the kindling tag", "Tag - 8x an item with the short shaft tag"], ["TagTool - InRoom - an item with the ignition source tag", "TagTool - InRoom - an item with the ignition source tag"], ["SimpleProduct - 1x a burning campfire (#178)"], ["UnusedInput - 75.00% of 8x an item with the short shaft tag ($i2)"]);
		AddCraft("knap sharp rock", "Survival", "knap a stone with a stone", "knapping stone", "a stone knapping process", "HasSurvival", null, null, null, _traits["Survival"] ?? _traits["Surviving"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 3, false, [(35, "$0 begin|begins to chip $i1 together, hitting one stone with the other stone over and over.", "$0 begin|begins to chip $i1 together, hitting one stone with the other stone over and over."), (45, "$0 continue|continues to knap the stones together, using the harder side of one to thin the other stone's edge into something flaked and sharp.", "$0 continue|continues to knap the stones together, using the harder side of one to thin the other stone's edge into something flaked and sharp."), (35, "With some effort, $0 have|has managed to produce $p1.", "$0 mess|messes up, splitting the stones into $f1.")], ["Tag - 2x an item with the Stone tag"], [], ["SimpleProduct - 1x a sharp, knapped stone (#164)"], ["SimpleProduct - 4x a pebble (#207)"]);
		AddCraft("gather clay", "Survival", "extract useful clay from the terrain by digging.", "digging up clay", "clay being dug up", "HasSurvival", "CanForageClay", "WhyCantForageClay", null, _traits["Survival"] ?? _traits["Surviving"] ?? _traits.First().Value, Difficulty.Trivial, Outcome.Fail, 5, 4, false, [(15, "@ begin|begins stripping back vegetation with $t1.", "@ begin|begins stripping back vegetation with $t1."), (15, "@ start|starts using $t1 to dig a reasonably sized circle in the ground.", "@ start|starts using $t1 to dig a reasonably sized circle in the ground."), (15, "@ continue|continues digging the circle in the ground.", "@ continue|continues digging the circle in the ground."), (15, "With a final heave, @ turn|turns $p1 out of the hole in a clump.", "With a final heave, @ turn|turns $f1 out of the hole. It turns out much of the clay was uselessly contaminated with other soils and vegetation.")], [], ["TagTool - Wielded - an item with the Shovel tag"], ["CommodityProduct - 10 kilograms of clay commodity"], ["CommodityProduct - 1 kilogram of clay commodity"]);
		AddCraft("salvage cloth", "Tailoring", "salvage cloth commodity from objects", "salvaging cloth", "a cloth salvage", "HasTailoring", null, null, null, _traits["Tailoring"] ?? _traits["Tailor"] ?? _traits.First().Value, Difficulty.Automatic, Outcome.MinorFail, 5, 4, false, [(25, "$0 begin|begins the process of salvaging $i1.", "$0 begin|begins the process of salvaging $i1."), (30, "$0 use|uses $t1 to trim off excess material, and cut|cuts away any decorative bits not associated with the cloth - buttons, zippers, ornamental stitching, etc.", "$0 use|uses $t1 to trim off excess material, and cut|cuts away any decorative bits not associated with the cloth - buttons, zippers, ornamental stitching, etc."), (55, "$0 try|tries to square up $i1 as best as is possible, using $t2 to cut away more excess material, and then use|uses the side of $t1 to fray the edges.", "$0 try|tries to square up $i1 as best as is possible, using $t2 to cut away more excess material, and then use|uses the side of $t1 to fray the edges."), (40, "$0 eventually set|sets aside $p1 in a neat little square of material.", "$0 eventually set|sets aside $p1 in a neat little square of material.")], ["Tag - 1x an item with the Salvagable Fabric tag"], ["TagTool - Held - an item with the Knife tag", "TagTool - Held - an item with the Scissors tag"], ["ScrapInput - 30.00% by weight of 1x an item with the Salvagable Fabric tag ($i1)"], []);
		AddCraft("make simple bow", "Weaponcrafting", "make a simple bow", "crafting a simple bow", "a bowmaking craft", "HasSurvival", null, null, null, _traits["Survival"] ?? _traits["Surviving"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorPass, 5, 5, false, [(35, "$0 use|uses $t1 to trim excess twigs, leaves and knots from $i1.", "$0 use|uses $t1 to trim excess twigs, leaves and knots from $i1."), (25, "$0 cut|cuts a notch into either end of $i1 with $t1, and carefully bend|bends $i1.", "$0 cut|cuts a notch into either end of $i1 with $t1, and carefully bend|bends $i1."), (35, "$0 slide|slides $i3 through the notch at either end of $i1 and knot|knots each end to hold the string in place.", "$0 slide|slides $i3 through the notch at either end of $i1 and knot|knots each end to hold the string in place."), (30, "$0 finish|finishes by wrapping $i2 around $i1's center part, creating an obvious grip.", "$0 finish|finishes by wrapping $i2 around $i1's center part, creating an obvious grip."), (35, "$0 have|has produced $p1.", "When $0 draw|draws on the simple bow, the bowshaft collapses and the entire bow is ruined.")], ["Tag - 1x an item with the Branch tag", "Tag - 1x an item with the Tie tag", "Tag - 1x an item with the String tag"], ["TagTool - Held - an item with the Cutting tag"], ["SimpleProduct - 1x &a_an[@material] hunting bow (#16) "], [], [(1, 1)]);
		AddCraft("make wicker buckler", "Weaponcrafting", "make a wicker buckler", "making a buckler", "a weaponcrafting event", "HasSurvival", null, null, null, _traits["Survival"] ?? _traits["Surviving"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorFail, 5, 5, false, [(55, "$0 begin|begins to bind several larger reeds from $i1 into the circular framework for a small buckler.", "$0 begin|begins to bind several larger reeds from $i1 into the circular framework for a small buckler."), (45, "$0 weave|weaves thinner reeds from $i1 around the frame in a spiral, starting inward and working outward.", "$0 weave|weaves thinner reeds from $i1 around the frame in a spiral, starting inward and working outward."), (45, "$0 thread|threads $i2 throughout the process, weaving added strength to the wickerwork.", "$0 thread|threads $i2 throughout the process, weaving added strength to the wickerwork."), (45, "$0 tie|ties everything in place with $i3, so that the wickerwork remains tight and without gaps, and trim|trims excess away with $t1.", "$0 tie|ties everything in place with $i3, so that the wickerwork remains tight and without gaps, and trim|trims excess away with $t1."), (45, "$0 knot|knots a handle from $i3 along the back of the buckler, then set|sets aside $p1.", "$0 knot|knots a crude handle out of $i3 on the back of the buckler, but closer inspection reveals the entire thing is flimsy and useless, and the process must be started anew.")], ["Tag - 5x an item with the Reeds tag", "SimpleItem - 10x a strip of wood (#240)", "Tag - 1x an item with the Tie tag"], ["TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 1x &a_an[@material] buckler (#148)"], [], [(1, 1)]);
		AddCraft("make stone arrow", "Weaponcrafting", "make a stone arrow", "making a stone arrow", "an arrowmaking event", "HasSurvival", null, null, null, _traits["Survival"] ?? _traits["Surviving"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorFail, 5, 5, false, [(55, "$0 begin|begins by trimming $i2 down into a long, narrow shaft of wood, using $t1 meticulously.", "$0 begin|begins by trimming $i2 down into a long, narrow shaft of wood, using $t1 meticulously."), (45, "$0 split|splits one end of $i2, and fit|fits $i1 within the split. Then $0 bind|binds $i1 to $i2 using $i4.", "$0 split|splits one end of $i2, and fit|fits $i1 within the split. Then $0 bind|binds $i1 to $i2 using $i4."), (45, "$0 set|sets the shaft aside for a moment, and begin|begins to trim down $i3 with $t1, fletching them into angled shapes.", "$0 set|sets the shaft aside for a moment, and begin|begins to trim down $i3 with $t1, fletching them into angled shapes."), (45, "$0 place|places the feathers along the other end of $i2 and use|uses $i4 to bind them into place securely so that they form lightweight fins.", "$0 place|places the feathers along the other end of $i2 and use|uses $i4 to bind them into place securely so that they form lightweight fins."), (45, "$0 hold|holds up $p1, checking its balance, then set|sets it aside satisfied.", "In the process of binding $i3 to $2, $0 accidentally snap|snaps the proto-arrow in two, ruining it.")], ["Tag - 1x an item with the Stone tag", "Tag - 1x an item with the Branch tag", "Tag - 4x an item with the Fletching tag", "Tag - 1x an item with the Tie tag"], ["TagTool - Held - an item with the Knife tag"], ["SimpleProduct - 1x &a_an[@material]-tipped arrow (#30)"], [], [(1, 1)]);
		AddCraft("carve short handle", "Weaponcrafting", "carve a short wooden handle", "carving a short handle", "a whittling event", "hascarpentry", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 5, false, [(55, "$0 begin|begins by sawing down $i1 into four smaller quarters of equal size with $t1.", "$0 begin|begins by sawing down $i1 into four smaller quarters of equal size with $t1."), (45, "Next, $0 roughly sketch|sketches out a pattern for a short handle on the wood, and use|uses $t1 to cut the boards to the rough shape of the pattern.", "Next, $0 roughly sketch|sketches out a pattern for a short handle on the wood, and use|uses $t1 to cut the boards to the rough shape of the pattern."), (45, "$0 use|uses $t2 to refine the cut piece of wood, trimming excess wood away.", "$0 use|uses $t2 to refine the cut piece of wood, trimming excess wood away."), (45, "$0 continue|continues to refine the patterned wood, using $t2 to round the edges off.", "$0 continue|continues to refine the patterned wood, using $t2 to round the edges off."), (45, "Finally, $0 set|sets aside $p1.", "$0 have|has been too zealous, and have|has refined the pattern wood down to useless splinters.")], ["Tag - 1x an item with the Plank tag"], ["TagTool - InRoom - an item with the Saw tag", "TagTool - InRoom - an item with the Knife tag"], ["SimpleProduct - 3x a short @material handle (#166)"], [], [(1, 1)]);
		AddCraft("carve sword grip", "Weaponcrafting", "carve a sword grip", "carving a sword grip", "a whittling event", "hascarpentry", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 5, false, [(55, "$0 begin|begins by sawing down $i1 into four smaller quarters of equal size with $t1.", "$0 begin|begins by sawing down $i1 into four smaller quarters of equal size with $t1."), (45, "Next, $0 roughly sketch|sketches out a pattern for a sword handle on the wood, and use|uses $t1 to cut the boards to the rough shape of the pattern.", "Next, $0 roughly sketch|sketches out a pattern for a sword handle on the wood, and use|uses $t1 to cut the boards to the rough shape of the pattern."), (45, "$0 use|uses $t2 to refine the cut piece of wood, trimming excess wood away.", "$0 use|uses $t2 to refine the cut piece of wood, trimming excess wood away."), (45, "$0 continue|continues to refine the patterned wood, using $t2 to round the edges off and give the grip shape.", "$0 continue|continues to refine the patterned wood, using $t2 to round the edges off and give the grip shape."), (45, "Finally, $0 set|sets aside $p1.", "$0 have|has been too zealous, and have|has refined the pattern wood down to useless splinters.")], ["Tag - 1x an item with the Plank tag"], ["TagTool - InRoom - an item with the Saw tag", "TagTool - InRoom - an item with the Knife tag"], ["SimpleProduct - 2x &a_an[@material] sword grip (#167)"], [], [(1, 1)]);
		AddCraft("carve long pole", "Weaponcrafting", "carve a long pole", "carving a long pole", "a whittling event", "hascarpentry", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 5, false, [(55, "$0 begin|begins by sawing down $i1 into a narrower, long plank of wood.", "$0 begin|begins by sawing down $i1 into a narrower, long plank of wood."), (45, "Next, $0 roughly sketch|sketches out a pattern for a pole on the wood, and use|uses $t1 to cut the board to the rough shape of the pattern.", "Next, $0 roughly sketch|sketches out a pattern for a pole on the wood, and use|uses $t1 to cut the board to the rough shape of the pattern."), (45, "$0 use|uses $t2 to refine the long cylindrical rod, trimming excess wood away.", "$0 use|uses $t2 to refine the long cylindrical rod, trimming excess wood away."), (45, "$0 continue|continues to refine the patterned wood, using $t2 to round the edges off and give the long pole shape.", "$0 continue|continues to refine the patterned wood, using $t2 to round the edges off and give the long pole shape."), (45, "Finally, $0 set|sets aside $p1.", "$0 have|has been too zealous, and have|has refined the pattern wood down to useless splinters.")], ["Tag - 1x an item with the Plank tag"], ["TagTool - InRoom - an item with the Saw tag", "TagTool - InRoom - an item with the Knife tag"], ["SimpleProduct - 1x a long @material pole (#168)"], [], [(1, 1)]);
		AddCraft("forge knife blade", "Weaponcrafting", "forge a knife blade", "forging a knife blade", "a knife-blademaking event", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames.", "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames."), (40, "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1.", "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1."), (45, "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows.", "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows."), (45, "$0 continue|continues to hammer $i1 into shape, working the metal into a small blade.", "$0 continue|continues to hammer $i1 into shape, working the metal into a small blade."), (45, "Finally, $0 quench|quenches the blade in $i2, which evaporates from the intense heat, and set|sets aside $p1.", "Finally, $0 quench|quenches the blade in $i2, which evaporates from the intense heat, and set|sets aside $f1.")], ["CommodityTag - 200 grams of a material tagged as Forged Metal", "LiquidUse - 1 litre of Water"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - InRoom - an item with the Bellows tag", "TagTool - InRoom - an item with the Forge Tongs tag", "TagTool - InRoom - an item with the Anvil tag", "TagTool - InRoom - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] knife blade (#218)"], ["SimpleProduct - 1x a twisted hunk of @material (#169)"], [(1, 1)], [(1, 1)]);
		AddCraft("forge sword blade", "Weaponcrafting", "forge a sword blade", "forging a sword blade", "a sword-blademaking event", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames.", "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames."), (40, "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1.", "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1."), (45, "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows.", "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows."), (45, "$0 continue|continues to hammer $i1 into shape, working the metal into a long, narrow blade.", "$0 continue|continues to hammer $i1 into shape, working the metal into a long, narrow blade."), (45, "Finally, $0 quench|quenches the blade in $i2, which evaporates from the intense heat, and set|sets aside $p1.", "Finally, $0 quench|quenches the blade in $i2, which evaporates from the intense heat, and set|sets aside $f1.")], ["CommodityTag - 1 kilogram of a material tagged as Forged Metal", "LiquidUse - 1 litre of Water"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - InRoom - an item with the Bellows tag", "TagTool - InRoom - an item with the Forge Tongs tag", "TagTool - InRoom - an item with the Anvil tag", "TagTool - InRoom - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] sword blade (#217)"], ["SimpleProduct - 1x a twisted hunk of @material (#169)"], [(1, 1)], [(1, 1)]);
		AddCraft("forge mace head", "Weaponcrafting", "forge a mace head", "forging a mace head", "an unfinished mace head forging process", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames.", "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames."), (40, "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1.", "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1."), (45, "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows.", "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows."), (45, "$0 continue|continues to hammer $i1 into shape, working the metal into a roughly spherical shape.", "$0 continue|continues to hammer $i1 into shape, working the metal into a roughly spherical shape."), (45, "Finally, $0 quench|quenches the mace head in $i2, which evaporates from the intense heat, and set|sets aside $p1.", "Finally, $0 quench|quenches the mace head in $i2, which evaporates from the intense heat, and set|sets aside $f1.")], ["CommodityTag - 1 kilogram 500 grams of a material tagged as Forged Metal", "LiquidUse - 1 litre of Water"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - InRoom - an item with the Bellows tag", "TagTool - InRoom - an item with the Forge Tongs tag", "TagTool - InRoom - an item with the Anvil tag", "TagTool - InRoom - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] macehead (#215)"], ["SimpleProduct - 1x a twisted hunk of @material (#169)"], [(1, 1)], [(1, 1)]);
		AddCraft("forge axe head", "Weaponcrafting", "forge an axe-head", "forging an axe-head", "an unfinished axe head forging process", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames.", "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames."), (40, "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1.", "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1."), (45, "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows.", "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows."), (45, "$0 continue|continues to hammer $i1 into shape, working the metal into a wedge shape that thins along the crescent curve.", "$0 continue|continues to hammer $i1 into shape, working the metal into a wedge shape that thins along the crescent curve."), (45, "Finally, $0 quench|quenches the axe-head in $i2, which evaporates from the intense heat, and set|sets aside $p1.", "Finally, $0 quench|quenches the axe-head in $i2, which evaporates from the intense heat, and set|sets aside $f1.")], ["CommodityTag - 1 kilogram 500 grams of a material tagged as Forged Metal", "LiquidUse - 1 litre of Water"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - InRoom - an item with the Bellows tag", "TagTool - InRoom - an item with the Forge Tongs tag", "TagTool - InRoom - an item with the Anvil tag", "TagTool - InRoom - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] axehead (#216)"], ["SimpleProduct - 1x a twisted hunk of @material (#169)"], [(1, 1)], [(1, 1)]);
		AddCraft("forge spearhead", "Weaponcrafting", "forge a spearhead", "forging a spearhead", "an unfinished spearhead forging process", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames.", "$0 begin|begins by checking that $t1 is putting out enough heat, using $t2 to fan the flames."), (40, "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1.", "Satisfied that $t1 is hot enough, $0 grip|grips $t3 and pick|picks up $i1 with it, thrusting the metal into $t1."), (45, "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows.", "When $i1 glows red hot, $0 withdraw|withdraws it from $t1 and hold|holds it against $t4 with $t3, and use|uses $t5 to bash the metal into shape with repeated blows."), (45, "$0 continue|continues to hammer $i1 into shape, working the metal into a leaf-bladed, triangular shape that comes to a narrow point.", "$0 continue|continues to hammer $i1 into shape, working the metal into a leaf-bladed, triangular shape that comes to a narrow point."), (45, "Finally, $0 quench|quenches the spearhead in $i2, which evaporates from the intense heat, and set|sets aside $p1.", "Finally, $0 quench|quenches the spearhead in $i2, which evaporates from the intense heat, and set|sets aside $f1.")], ["CommodityTag - 400 grams of a material tagged as Forged Metal", "LiquidUse - 1 litre of Water"], ["TagTool - InRoom - an item with the Hot Fire tag", "TagTool - InRoom - an item with the Bellows tag", "TagTool - InRoom - an item with the Forge Tongs tag", "TagTool - InRoom - an item with the Anvil tag", "TagTool - InRoom - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] spearhead (#214)"], ["SimpleProduct - 1x a twisted hunk of @material (#169)"], [(1, 1)], [(1, 1)]);
		AddCraft("assemble sword", "Weaponcrafting", "assemble a sword", "assembling a sword", "an unfinished sword assembly", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Easy, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of assembling a sword, starting with $i1.", "$0 begin|begins the process of assembling a sword, starting with $i1."), (30, "$0 slide|slides $i2 onto $i1, using the chunk to form a straight crossguard.", "$0 slide|slides $i2 onto $i1, using the chunk to form a straight crossguard."), (45, "Next, $0 fit|fits $i3 onto $i1, and use|uses $t1 to knock the hilt together, fitting a pommel made from $i2 to secure it all tightly.", "Next, $0 fit|fits $i3 onto $i1, and use|uses $t1 to knock the hilt together, fitting a pommel made from $i2 to secure it all tightly."), (30, "With much of the sword already assembled, $0 now take|takes up $t2 and begin|begins to scrape it along the dull blade, sharpening the tool.", "With much of the sword already assembled, $0 now take|takes up $t2 and begin|begins to scrape it along the dull blade, sharpening the tool."), (35, "Finally, $0 wrap|wraps $i4 around the middle of the hilt, then set|sets aside $p1.", "Finally, $0 wrap|wraps $i4 around the middle of the hilt. On closer inspection, however, the sword is a sloppy mess and only the blade is salvagable.")], ["Tag - 1x an item with the Sword Blade tag", "CommodityTag - 350 grams of a material tagged as Forged Metal", "Tag - 4x an item with the Sword Grip tag", "Tag - 1x an item with the Tie tag"], ["TagTool - InRoom - an item with the Hammer tag", "TagTool - InRoom - an item with the Sharpening tag"], ["SimpleProduct - 1x &a_an[@material] arming sword with a cruciform hilt (#5)"], ["SimpleProduct - 1x &a_an[@material] sword blade (#217)"], [(1, 1)], [(1, 1)]);
		AddCraft("assemble knife", "Weaponcrafting", "assemble a knife", "assembling a knife", "an unfinished knife assembly", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 4, false, [(25, "$0 begin|begins the process of assembling a knife, starting with $i1.", "$0 begin|begins the process of assembling a knife, starting with $i1."), (30, "$0 fit|fits $i3 onto $i1, and use|uses $t1 to knock the hilt together, fitting a small pommel made from $i2 to secure it all tightly.", "$0 fit|fits $i3 onto $i1, and use|uses $t1 to knock the hilt together, fitting a small pommel made from $i2 to secure it all tightly."), (30, "With much of the knife already assembled, $0 now take|takes up $t2 and begin|begins to scrape it along the dull blade, sharpening the tool.", "With much of the knife already assembled, $0 now take|takes up $t2 and begin|begins to scrape it along the dull blade, sharpening the tool."), (35, "Finally, $0 wrap|wraps $i4 around the middle of the hilt, then set|sets aside $p1.", "Finally, $0 wrap|wraps $i4 around the middle of the hilt. On closer inspection, however, the knife is a sloppy mess and only the blade is salvagable.")], ["Tag - 1x an item with the Knife Blade tag", "CommodityTag - 50 grams of a material tagged as Forged Metal", "Tag - 1x an item with the short shaft tag", "Tag - 1x an item with the Tie tag"], ["TagTool - InRoom - an item with the Hammer tag", "TagTool - InRoom - an item with the Sharpening tag"], ["SimpleProduct - 1x a double-edged @material fighting knife (#1)"], ["SimpleProduct - 1x &a_an[@material] knife blade (#218)"], [(1, 1)], [(1, 1)]);
		AddCraft("assemble mace", "Weaponcrafting", "assemble a mace", "assembling a mace", "an unfinished mace assembly", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 4, false, [(25, "$0 begin|begins the process of assembling a mace, starting with $i1.", "$0 begin|begins the process of assembling a mace, starting with $i1."), (30, "$0 fit|fits $i2 into the flared, bell-like nub of $i1, and use|uses $i3 to secure them together.", "$0 fit|fits $i2 into the flared, bell-like nub of $i1, and use|uses $i3 to secure them together."), (45, "Next, $0 tighten|tightens $i3 using $t1, doubly securing the mace head to the handle.", "Next, $0 tighten|tightens $i3 using $t1, doubly securing the mace head to the handle."), (35, "Finally, $0 wrap|wraps $i4 around the middle of the handle, then set|sets aside $p1.", "Finally, $0 wrap|wraps $i4 around the middle of the handle. On closer inspection, however, the mace is a sloppy mess and only the head is salvagable.")], ["Tag - 1x an item with the Mace Head tag", "Tag - 1x an item with the short shaft tag", "Tag - 1x an item with the Rivet tag", "Tag - 1x an item with the Tie tag"], ["TagTool - InRoom - an item with the Pliers tag"], ["SimpleProduct - 1x a short-hafted mace with a blunt @material head (#9)"], ["SimpleProduct - 1x &a_an[@material] macehead (#215)"], [(1, 1)], [(1, 1)]);
		AddCraft("assemble axe", "Weaponcrafting", "assemble an axe", "assembling an axe", "an unfinished axe assembly", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of assembling an axe, starting with $i1.", "$0 begin|begins the process of assembling an axe, starting with $i1."), (20, "$0 fit|fits $i2 through the axe-eye of $i1, using $t1 to secure it with a few good whacks.", "$0 fit|fits $i2 through the axe-eye of $i1, using $t1 to secure it with a few good whacks."), (45, "Next, $0 begin|begins to wrap $i3 around the axehead and the shaft, better securing it to the handle.", "Next, $0 begin|begins to wrap $i3 around the axehead and the shaft, better securing it to the handle."), (30, "With much of the axe assembled, $0 now take|takes up $t2 and begin|begins to scrape it along the dull edge of the axehead, sharpening the tool.", "With much of the axe assembled, $0 now take|takes up $t2 and begin|begins to scrape it along the dull edge of the axehead, sharpening the tool."), (35, "Finally, $0 wrap|wraps more of $i3 around the middle of the handle, then set|sets aside $p1.", "Finally, $0 wrap|wraps $i3 around the middle of the handle. On closer inspection, however, the axe is a sloppy mess and only the axehead is salvagable.")], ["Tag - 1x an item with the Axe Head tag", "Tag - 1x an item with the short shaft tag", "Tag - 1x an item with the Tie tag"], ["TagTool - InRoom - an item with the Hammer tag", "TagTool - InRoom - an item with the Sharpening tag"], ["SimpleProduct - 1x a bearded @material felling axe (#4)"], ["SimpleProduct - 1x &a_an[@material] axehead (#216)"], [(1, 1)], [(1, 1)]);
		AddCraft("assemble spear", "Weaponcrafting", "assemble a spear", "assembling a spear", "an unfinished spear assembly", "HasWeaponcrafting", null, null, null, _traits["Weaponcrafting"] ?? _traits["Weaponsmith"] ?? _traits.First().Value, Difficulty.Normal, Outcome.MinorFail, 5, 5, false, [(25, "$0 begin|begins the process of assembling a spear, starting with $i1.", "$0 begin|begins the process of assembling a spear, starting with $i1."), (30, "$0 fit|fits $i2 onto the end of $i1, then use|uses $i3 to secure the spearhead.", "$0 fit|fits $i2 onto the end of $i1, then use|uses $i3 to secure the spearhead."), (45, "$0 tighten|tightens $i3 further with turns of $t1.", "$0 tighten|tightens $i3 further with turns of $t1."), (30, "With much of the spear assembled, $0 now take|takes up $t2 and begin|begins to scrape it along the dull edges of the spearhead, sharpening the weapon.", "With much of the spear assembled, $0 now take|takes up $t2 and begin|begins to scrape it along the dull edges of the spearhead, sharpening the weapon."), (35, "Finally, $0 wrap|wraps $i4 around the middle of the pole, then set|sets aside $p1.", "Finally, $0 wrap|wraps $i3 around the middle of the pole. On closer inspection, however, the spear is a sloppy mess and only the spearhead is salvagable.")], ["Tag - 1x an item with the Pole tag", "Tag - 1x an item with the Spearhead tag", "Tag - 1x an item with the Rivet tag", "Tag - 1x an item with the Tie tag"], ["TagTool - InRoom - an item with the Pliers tag", "TagTool - InRoom - an item with the Sharpening tag"], ["SimpleProduct - 1x a long, reinforced pike with &a_an[@material] spearhead (#13)"], ["SimpleProduct - 1x &a_an[@material] spearhead (#214)"], [(1, 1)], [(1, 1)]);
		AddCraft("make long bow", "Weaponcrafting", "make a long bow", "making a long bow", "an unfinished bow assembly", "hascarpentry", null, null, null, _traits["Carpentry"] ?? _traits["Carpenter"] ?? _traits.First().Value, Difficulty.Hard, Outcome.MinorFail, 5, 6, false, [(35, "$0 begin|begins the process of making a recurve bow by using $t1 to split $i1 into long, thin strips.", "$0 begin|begins the process of making a recurve bow by using $t1 to split $i1 into long, thin strips."), (30, "$0 place|places the edge of $t1 against one side of $i2 and repeat|repeats the process of refining things down into long, thin strips, using $t2 to tap the bottom of $t1, wedging the edge into splitting the hard material.", "$0 place|places the edge of $t1 against one side of $i2 and repeat|repeats the process of refining things down into long, thin strips, using $t2 to tap the bottom of $t1, wedging the edge into splitting the hard material."), (55, "Setting the thin, split pieces of material aside, $0 place|places $i3 in $i4, leaving it to soak.", "Setting the thin, split pieces of material aside, $0 place|places $i3 in $i4, leaving it to soak."), (30, "$0 begin|begins to assemble the bow, layering pieces of $i1, $i2 and wet, flat clumps of $i3 together.", "$0 begin|begins to assemble the bow, layering pieces of $i1, $i2 and wet, flat clumps of $i3 together."), (60, "Eventually, $0 finish|finishes the tedious process of layering the wood, tusk and sinew, and sit|sits back to let the bow set for a time.", "Eventually, $0 finish|finishes the tedious process of layering the wood, tusk and sinew, and sit|sits back to let the bow set for a time."), (20, "Finally, $0 take|takes up the bow and bend|bends it, stringing it with $i5 once successful, and set|sets aside $p1.", "Finally, $0 take|takes up the bow and attempt|attempts to bend it as a test, but the bow falls apart and leaves only $f1 behind, unused.")], ["Tag - 2x an item with the Branch tag", "Tag - 2x an item with the Tusk tag", "Tag - 10x an item with the String tag", "LiquidUse - 200 millilitres of Water", "Tag - 1x an item with the String tag"], ["TagTool - InRoom - an item with the Knife tag", "TagTool - InRoom - an item with the Hammer tag"], ["SimpleProduct - 1x &a_an[@material] longbow (#15) "], ["SimpleProduct - 1x a frayed gut string with visible wear (#546)"], [(1, 1)]);

	}
}