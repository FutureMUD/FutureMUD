using System;
using System.Collections.Generic;
using MudSharp.Character;
using MudSharp.Framework;
using MudSharp.Framework.Revision;

namespace MudSharp.Construction.Autobuilder
{
    public interface IAutobuilderArea : IEditableItem
    {
        /// <summary>
        /// The parameters required to be passed in by the builder in order to use this autobuilder template
        /// </summary>
        IEnumerable<IAutobuilderParameter> Parameters { get; }

        /// <summary>
        /// Determines whether the supplied StringStack contains text that can translate into valid arguments for this autobuilder template
        /// </summary>
        /// <param name="builder">The character who is attempting to use the template</param>
        /// <param name="ss">The stringstack containing the builder's text arguments</param>
        /// <returns>A valuetuple containing the success/failure of the attempt, an error message (if failed), and the parsed arguments (if successful)</returns>
        (bool Success, string ErrorMessage, IEnumerable<object> Arguments) TryArguments(ICharacter builder, StringStack ss);

        /// <summary>
        /// Executes the template with the specified arguments, creating an area
        /// </summary>
        /// <param name="builder">The character who is using the template</param>
        /// <param name="arguments">The arguments that have been generated by TryArguments</param>
        /// <returns>An enumerable containing the cells created by the template</returns>
        IEnumerable<ICell> ExecuteTemplate(ICharacter builder, IEnumerable<object> arguments);

        string ShowCommandByLine { get; }

        IAutobuilderArea Clone(string newName);
    }
}