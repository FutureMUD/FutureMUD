using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MudSharp.Framework;

public static class DefaultStaticSettings
{
	#region Static Strings and Configurations

	public static readonly IReadOnlyDictionary<string, string> DefaultStaticConfigurations =
		new Dictionary<string, string>
		{
			{ "CPRAllowed", "true" },
			{ "PlayersCanJunk", "true" },
			{ "WrittenItemSDescStyle", "desc+title" },
			{ "LogNPCCommands", "false" },
			{ "PrependEmotes", "false" },
			{ "CheckBonusPerDifficultyLevel", "1" },
			{ "BaseTeachSkillOpeningValue", "5" },
			{ "BaseTeachSkillAmount", "2.5" },
			{ "SkillBranchBaseValue", "5" },
			{ "MaximumCombatSettingsPerPlayer", "6" },
			{ "CharactersLiterateByDefault", "true" },
			{ "ReadDifficultyLanguageSkillThreshold", "70" },
			{ "ReadDifficultyLiteracySkillThreshold", "70" },
			{ "ReadDifficultyHandwritingSkillThreshold", "70" },
			{ "DefaultPencilColour", "1" },
			{ "DefaultBiroColour", "1" },
			{ "DefaultCrayonColour", "1" },
			{ "DefaultWritingColourInText", "1" },
			{ "DefaultWritingStyleInText", "8192" },
			{ "CarriedWeightPerArmourUseDifficulty", "12000" },
			{ "StaggeringBlowPenaltyMultiplier", "1.0" },
			{ "StaggeringBlowDefensiveAdvantageMinorFailure", "3" },
			{ "StaggeringBlowDefensiveAdvantageFailure", "6" },
			{ "StaggeringBlowDefensiveAdvantageMajorFailure", "9" },
			{ "StaggeringBlowReelTimeMinorFailure", "3000" },
			{ "StaggeringBlowReelTimeFailure", "6000" },
			{ "StaggeringBlowReelTimeMajorFailure", "9000" },
			{ "DefaultTableCoverWhenFlipped", "0" },
			{ "NonDominantHandToolDifficultyPenalty", "1" },
			{ "BreakClinchMoveOnGoodFailDelay", "1.0" },
			{ "DefaultGunClipType", "Glock 9mm" },
			{ "DefaultAmmoGrade", "9x19mm Parabellum" },
			{ "DefaultGunClipCapacity", "8" },
			{ "ReadyRangedWeaponMoveDelay", "0.1" },
			{ "EchoQueuedActions", "true" },
			{ "OffensiveAdvantageFromCharge", "6" },
			{ "DefaultBowStaminaDrain", "5.0" },
			{ "StruggleFreeFromDragStaminaCost", "50.0" },
			{ "OpposeStruggleFreeFromDragStaminaCost", "40.0" },
			{ "StruggleFreeFromGrappleStaminaCost", "50.0" },
			{ "OpposeStruggleFreeFromGrappleStaminaCost", "40.0" },
			{ "RecentlyStyledDelaySeconds", "20000" },
			{ "WellRestedSleepSeconds", "600" },
			{ "WellRestedDuration", "3600" },
			{ "WellRestedBonus", "0.6667" },
			{ "BrainDamageUnconsciousnessThreshold", "0.7" },
			{ "MajorConcussionRatio", "0.76" },
			{ "ConcussionRatio", "0.82" },
			{ "MinorConcussionRatio", "0.9" },
			{ "WeightTestChanceExpression", "weight * (10 - difficulty) / 10000" },
			{ "HeightTestChanceExpression", "height * (10 - difficulty) / 30" },
			{ "DefaultCurrencyID", "1" },
			{ "UnbalancingBlowPenaltyMultiplier", "1.0" },
			{ "UnbalancingBlowDefensiveAdvantageMinorFailure", "3" },
			{ "UnbalancingBlowDefensiveAdvantageFailure", "6" },
			{ "UnbalancingBlowDefensiveAdvantageMajorFailure", "9" },
			{ "UnbalancingBlowReelTimeMinorFailure", "3000" },
			{ "UnbalancingBlowReelTimeFailure", "6000" },
			{ "UnbalancingBlowReelTimeMajorFailure", "9000" },
			{ "DeathsBoardId", "0" },
			{ "PetitionsBoardId", "0" },
			{ "TyposBoardId", "0" },
			{ "PostToDeathsProg", "0" },
			{ "DefaultLaserClipType", "Lasgun Standard" },
			{ "StaggeringBlowStaggerEffectLength", "15000" },
			{ "ShieldPenaltyPerLodgedItemSizeDifference", "2.5" },
			{ "DefaultBookPaperProto", "0" },
			{ "DefaultBookPageCount", "0" },
			{
				"RangedCombatTargetBodypartExpression",
				"Min(-3, -3 * Pow(average/Max(chance/(range*0.5 + 1),0.000001),0.7))"
			},
			{ "MaximumNumberOfAliasProg", "0" },
			{ "TotalBloodVolumeProg", "0" },
			{ "LiverFunctionProg", "0" },
			{ "MaximumStaminaProg", "0" },
			{ "WoundPenaltyToMoveSpeedPenalty", "0" },
			{ "BaseSpeedExpression", "4000" },
			{ "BoneFractureTraumaPainLimit", "2.0" },
			{ "BoneFractureReactionPainLimit", "1.0" },
			{ "BoneFractureRelocationPainLimit", "0.4" },
			{ "BoneFractureReparationPainLimit", "0.05" },
			{ "BaseInfectionChance", "0.0001" },
			{ "BaseInfectionChanceBoneFractures", "0.00002" },
			{ "DefaultAdjacentToExitLengthInSeconds", "180" },
			{ "MinimumLimbsUnderControlForGrapple", "3" },
			{ "DodgeRangeMoveStaminaCost", "1.0" },
			{ "NoPressureBonus", "1.66667" },
			{ "DiscordBotIpAddress", "127.0.0.1" },
			{ "DiscordBotPort", "4001" },
			{ "UseDiscordBot", "false" },
			{ "BindingEffectDurationDiceExpression", "1d5+10" },
			{ "SuturingEffectDurationDiceExpression", "1d10+35" },
			{ "TendingEffectDurationDiceExpression", "1d20+35" },
			{ "CleanWoundsEffectDurationDiceExpression", "1d5+20" },
			{ "OutOfCombatAimTickSeconds", "3.333" },
			{ "CombatAimMajorSuccessPercentage", "0.333" },
			{ "AimRangedWeaponMoveDelay", "0.25" },
			{ "LiquidContaminationEffectDuration", "300" },
			{ "BoneFractureStageLengthTrauma", "3600" },
			{ "BoneFractureStageLengthReaction", "10800" },
			{ "BoneFractureStageLengthRelocation", "604800" },
			{ "BoneFractureStageLengthReparation", "1209600" },
			{ "BoneFractureStageLengthOssification", "1814400" },
			{ "DefaultBodyForImplants", "0" },
			{ "DefaultBodypartForImplants", "0" },
			{ "PerfectDodgeAdvantage", "6" },
			{ "RepairEffectTotalDuration", "30" },
			{ "DefaultExternalOrganVenousConnector", "2-LargeVenousCatheter" },
			{ "DefaultExternalOrganArterialConnector", "2-LargeArterialCatheter" },
			{ "DefaultExternalOrganBody", "0" },
			{ "DefaultAtmosphereId", "1" },
			{ "DefaultAtmosphereType", "gas" },
			{ "DefaultImplantInstallDifficulty", "5" },
			{ "DefaultPowerSocketType", "NEMA 5-15" },
			{ "ImplantCommandEnabled", "true" },
			{ "DownedMeleeExpressionAttacker", "" },
			{ "DownedMeleeExpressionDefender", "" },
			{ "DownedMeleePenaltyMultiplier", "1.0" },
			{ "DownedMeleeDefensiveAdvantageMinorFailure", "3" },
			{ "DownedMeleeDefensiveAdvantageFailure", "6" },
			{ "DownedMeleeDefensiveAdvantageMajorFailure", "9" },
			{ "DownedMeleeReelTimeMinorFailure", "3000" },
			{ "DownedMeleeReelTimeFailure", "6000" },
			{ "DownedMeleeReelTimeMajorFailure", "9000" },
			{ "WatchLocationPerceptionBonus", "-2.0" },
			{ "ConcentrationToCheckBonusPenaltyForConnectMind", "1.0" },
			{ "DefaultBombDamageExpressionBurning", "quality*(1+rand(1,4))" },
			{ "DefaultBombDamageExpressionShockwave", "quality*(1+rand(2,6))" },
			{ "DefaultBombDamageExpressionShrapnel", "max(0, rand(1,4)-3))*quality*(1+rand(2,6)" },
			{ "DefaultBombStunExpressionBurning", "0" },
			{ "DefaultBombStunExpressionShockwave", "1.5*quality*(1+rand(2,6))" },
			{ "DefaultBombStunExpressionShrapnel", "0" },
			{ "ExplosionMarginalCoverAbsorbChance", "0.3" },
			{ "ExplosionPartialCoverAbsorbChance", "0.6" },
			{ "ExplosionNearTotalCoverAbsorbChance", "0.8" },
			{ "ExplosionTotalCoverAbsorbChance", "0.95" },
			{ "WeaponsTakeDamageFromAttacks", "false" },
			{ "MinimumSightDifficultyParched", "0" },
			{ "MinimumSightDifficultyDry", "0" },
			{ "MinimumSightDifficultyHumid", "1" },
			{ "MinimumSightDifficultyLightRain", "2" },
			{ "MinimumSightDifficultyRain", "3" },
			{ "MinimumSightDifficultyHeavyRain", "5" },
			{ "MinimumSightDifficultyTorrentialRain", "7" },
			{ "MinimumSightDifficultyLightSnow", "3" },
			{ "MinimumSightDifficultySnow", "5" },
			{ "MinimumSightDifficultyHeavySnow", "7" },
			{ "MinimumSightDifficultyBlizzard", "9" },
			{ "MinimumSightDifficultySleet", "3" },
			{ "MinimumHearingDifficultyStill", "0" },
			{ "MinimumHearingDifficultyOccasionalBreeze", "0" },
			{ "MinimumHearingDifficultyBreeze", "1" },
			{ "MinimumHearingDifficultyWind", "2" },
			{ "MinimumHearingDifficultyStrongWind", "3" },
			{ "MinimumHearingDifficultyGaleWind", "4" },
			{ "MinimumHearingDifficultyHurricaneWind", "7" },
			{ "MinimumHearingDifficultyMaelstromWind", "9" },
			{ "SearchingEffectDurationDiceExpression", "1d10+15" },
			{ "DefaultCellTemperature", "25" },
			{ "ActiveSearchRequiredHitsPerSkill", "0.2" },
			{ "BodyLiquidContaminationEffectDuration", "300" },
			{ "KeycardPaymentsEnabled", "false" },
			{ "DefaultImplantDamageGrace", "0.2" },
			{ "DefaultSipAmount", "0.03" },
			{ "DefaultAnimalDrinkAmount", "0.5" },
			{ "PrecipitationClimbingBonusParched", "0.0" },
			{ "PrecipitationClimbingBonusDry", "0.0" },
			{ "PrecipitationClimbingBonusHumid", "0.0" },
			{ "PrecipitationClimbingBonusLightRain", "-1.0" },
			{ "PrecipitationClimbingBonusRain", "-2.0" },
			{ "PrecipitationClimbingBonusHeavyRain", "-3.0" },
			{ "PrecipitationClimbingBonusTorrentialRain", "-4.0" },
			{ "PrecipitationClimbingBonusLightSnow", "-0.33333" },
			{ "PrecipitationClimbingBonusSnow", "-0.6666667" },
			{ "PrecipitationClimbingBonusHeavySnow", "-1.0" },
			{ "PrecipitationClimbingBonusBlizzard", "-2.0" },
			{ "PrecipitationClimbingBonusSleet", "-3.0" },
			{ "WindClimbingBonusNone", "0.0" },
			{ "WindClimbingBonusStill", "0.0" },
			{ "WindClimbingBonusOccasionalBreeze", "-0.125" },
			{ "WindClimbingBonusBreeze", "-0.3333" },
			{ "WindClimbingBonusWind", "-0.66667" },
			{ "WindClimbingBonusStrongWind", "-1.0" },
			{ "WindClimbingBonusGaleWind", "-1.5" },
			{ "WindClimbingBonusHurricaneWind", "-2.5" },
			{ "WindClimbingBonusMaelstromWind", "-4.0" },
			{ "ClimbingTickStaminaUsage", "10" },
			{ "DiscordAuthToken", "T0psekrit" },
			{ "ProjectTickMinutes", "15" },
			{ "ProjectProgressMultiplier", "0.25" },
			{ "MaximumPeriodsForRecentWeather", "300" },
			{ "TraitBonusDescriptionThresholdNegligible", "1.0" },
			{ "TraitBonusDescriptionThresholdSmall", "5.0" },
			{ "TraitBonusDescriptionThresholdModerate", "10.0" },
			{ "TraitBonusDescriptionThresholdLarge", "15.0" },
			{ "TraitBonusDescriptionThresholdVeryLarge", "20.0" },
			{ "BaseForceUOMToNewtons", "1" },
			{ "BaseStressUOMToPascals", "1" },
			{ "BaseBMIUOMToKGPerM2", "1"},
			{ "BloodTypingProductFailureErrorChanceSides", "3.0" },
			{ "DNATestingProductFailureErrorChanceSides", "3.0" },
			{ "TattooInkTotalPerSize", "0.00075" },
			{ "TattooingTicksPerSize", "2.5" },
			{ "InkingTattooTickDurationSeconds", "15" },
			{ "TattooSkillPerDifficulty", "10" },
			{ "ReplantationPartDamageThreshold", "2.0" },
			{ "BaseFluidOrganBloodlossPerWoundSeverity", "0.003" },
			{ "PercentageExternalBloodlossPerWoundSeverity", "0.003" },
			{ "BonusPerInfectionIntensityForSpread", "-1.0" },
			{ "InfectionIntensityGainPerTick", "0.0024" },
			{ "ImmunityGainPerSuccess", "0.0016" },
			{ "InfectionIntensityLossPerTickOnceImmune", "0.01" },
			{ "SimpleInfectionPainFormula", "max(0,intensity-0.1)*20" },
			{ "SimpleInfectionDamagePerIntensity", "0.015" },
			{ "SimpleInfectionSpreadTicks", "100" },
			{ "GangreneSpreadTicks", "75" },
			{ "GangrenePainFormula", "0" },
			{ "GangreneDamagePerIntensity", "0.005" },
			{ "DefaultGasSocketType", "BSP 5mm" },
			{
				"CharacterFallDamageExpression",
				"drand(0.4,1.0) * if(rooms>1,rooms*rooms,rooms) * weight / (5000 * (1.0+success))"
			},
			{ "ItemFallDamageExpression", "rooms * rooms * weight / 10000" },
			{ "DefaultCrimeActiveSeconds", "86400" },
			{ "ApplyAllLegalClassesAsVictimsByDefault", "true" },
			{ "ApplyAllLegalClassesAsOffendersByDefault", "true" },
			{ "FallIntoWaterRoomsGrace", "2.0" },
			{ "FallDeeperIntoWaterDistance", "1.0" },
			{ "FallTreesDamageChance", "0.333" },
			{ "FallTreesDamageMultiplierMinimum", "0.2" },
			{ "FallTreesDamageMultiplierMaximum", "0.4" },
			{ "FallRooftopsDamageChance", "0.2" },
			{ "ItemWeightPerWindLevelTreeFall", "pow(wind,2)*0.3" },
			{ "TreeFallDifficultyNone", "0" },
			{ "TreeFallDifficultyStill", "0" },
			{ "TreeFallDifficultyOccasionalBreeze", "1" },
			{ "TreeFallDifficultyBreeze", "2" },
			{ "TreeFallDifficultyWind", "3" },
			{ "TreeFallDifficultyStrongWind", "4" },
			{ "TreeFallDifficultyGaleWind", "5" },
			{ "TreeFallDifficultyHurricaneWind", "7" },
			{ "TreeFallDifficultyMaelstromWind", "9" },
			{ "SwimStayAfloatStamina", "14.0" },
			{ "FloatBuoyancyPerDifficulty", "5000000.0" },
			{ "SwimStaminaCost", "20.0" },
			{ "SwimSurfaceStamina", "14.0" },
			{ "HypoxiaDamagePerTick", "0.8" },
			{ "FlyStaminaCostPerTick", "20" },
			{ "FlyStaminaCost", "30" },
			{ "EncumbranceLimitRatioLight", "0.25" },
			{ "EncumbranceLimitRatioModerate", "0.5" },
			{ "EncumbranceLimitRatioHeavy", "0.75" },
			{ "EncumbranceLimitExpression", "100000" },
			{ "PowerMoveStaminaCostExpression", "(encumbrance * 0.5) + 1" },
			{ "GraceMoveStaminaCostExpression", "(encumbrance * 0.5) + 1" },
			{ "StrengthForRelativeStrengthCheckExpression", "1" },
			{
				"RelativeStrengthDefenseStaminaCostExpression",
				"if(attacker>defender,1+pow(attacker-defender,0.5),1*pow(attacker/defender,0.5))"
			},
			{ "MinimumGroupAIEmoteFrequency", "180" },
			{ "GroupAIEmoteChancePer10Seconds", "0.05" },
			{ "StreetwiseSkillExpression", "0" },
			{ "DefaultGasContainerVolume", "2000" },
			{ "PercentageExternalFluidLossPerWoundSeverityRobot", "0.0015" },
			{
				"DefaultIdentityObscurerRemovalEcho",
				"revealing &his $eyecolour eyes, $nose,$?facialhairstyle[ $facialhaircolour $facialhairstyle,][] and $haircolour $hairstyle."
			},
			{ "DefaultIdentityObscurerShortDescription", "&a_an[$?height[$height[@, ]]$frame] @key figure" },
			{
				"DefaultIdentityObscurerFullDescription",
				"This individual has their identity obscured on account of the fact that they are wearing @item. You can still tell however that they are &height tall and $framefancy."
			},
			{ "DefaultHealingImpactCheckBonus", "2.0" },
			{ "DefaultHealingImpactRateMultiplier", "2.0" },
			{ "DefaultHealingImpactInfectionMultiplier", "6.0" },
			{ "SpillCharacterProximityBonus", "1.0" },
			{ "SpillCharacterUnawareBonus", "-2.0" },
			{ "BaseBoneHealingPerMinute", "180" },
			{ "ScarDaysForRecent", "4.0" },
			{ "ScarDaysForOld", "14.0" },
			{ "DefaultEnforcementPriority", "100" },
			{ "DocumentLengthDrawingScribble", "260" },
			{ "DocumentLengthDrawingDoodle", "520" },
			{ "DocumentLengthDrawingFigure", "1040" },
			{ "DocumentLengthDrawingSketch", "2080" },
			{ "DocumentLengthDrawingPicture", "4080" },
			{ "DocumentLengthDrawingPoster", "8160" },
			{ "DocumentLengthDrawingMural", "16320" },
			{ "AlwaysTrueProg", "1" },
			{ "AlwaysFalseProg", "2" },
			{ "AlwaysZeroProg", "3" },
			{ "AlwaysOneProg", "4" },
			{ "GeneralBonusLevelStarving", "1.0" },
			{ "GeneralBonusLevelHungry", "0.66667" },
			{ "GeneralBonusLevelPeckish", "0.33333" },
			{ "GeneralBonusLevelParched", "1.0" },
			{ "GeneralBonusLevelThirsty", "0.33333" },
			{ "GeneralBonusLevelDrunk", "1.5" },
			{ "GeneralBonusLevelVeryDrunk", "1.0" },
			{ "GeneralBonusLevelBlackoutDrunk", "1.5" },
			{ "GeneralBonusLevelParalytic", "2.0" },
			{ "BlindnessCheckBonus", "3.0" },
			{ "DefaultFlareAmmunitionType", "0" },
			{ "BrainConstructHeartAttackDamagePerTick", "2.0" },
			{ "BreakoutOffsetPerStrengthDifference", "0.3333333333333" },
			{ "TakedownReelTime", "9000" },
			{ "TakedownDefensiveAdvantage", "9" },
			{ "BreakoutFromGrappleStaminaCost", "55.0" },
			{ "OpposeBreakoutFromGrappleStaminaCost", "45.0" },
			{ "StaminaMultiplierPerEncumbrancePercentage", "1.0" },
			{ "BreakoutOffsetPerSizeDifference", "3" },
			{ "InitiateGrappleOffsetPerSizeDifference", "3" },
			{ "ExtendGrappleOffsetPerSizeDifference", "3" },
			{ "ShowStaminaCostInExhaustedMessage", "true" },
			{ "AnasthesiaIntensityToBonusConversionRate", "3.33333" },
			{ "AntibioticInfectionBonusToIntensityMultiplier", "1.666667" },
			{ "BaseAreaUOMToSquareMetres", "1" },
			{ "BaseFluidUOMToLitres", "1" },
			{ "BaseHeightUOMToMetres", "0.01" },
			{ "BaseCleanTime", "15" },
			{ "BaseForageTimeExpression", "1d10+20" },
			{ "BaseTemperatureUOMToCelcius", "1" },
			{ "BaseVolumeUOMToCubicMetres", "1" },
			{ "BaseWeightUOMToKilograms", "0.001" },
			{ "BlockMoveStaminaCost", "10" },
			{ "BreakClinchMoveStaminaCost", "10" },
			{ "DodgeMoveStaminaCost", "10" },
			{ "ParryMoveStaminaCost", "10" },
			{ "StandMoveStaminaCost", "20" },
			{ "StartClinchMoveStaminaCost", "10" },
			{ "TakeCoverMoveStaminaCost", "15" },
			{ "FireAndAdvanceToMeleeStaminaCost", "20" },
			{ "FleeMoveStaminaCost", "5" },
			{ "MoveToMeleeStaminaCost", "15" },
			{ "ThrownWeaponStaminaCost", "25" },
			{ "SkirmishAndFireStaminaCost", "30" },
			{ "SkirmishResponseStaminaCost", "25" },
			{ "ChargeToMeleeStaminaCost", "30" },
			{ "CounterGrappleMoveStaminaCost", "10" },
			{ "CombatSpeedMultiplier", "1.0" },
			{ "CPRStaminaCost", "15" },
			{ "DefaultSecondWindRecoveryTime", "1230" },
			{ "DefaultTableCannotFlipTraitMessage", "@ try|tries to flip $1, but are|is not strong enough." },
			{ "DefaultTableCoverWhenNotFlipped", "0" },
			{ "DefaultTableTraitsToFlipExpression", "1" },
			{ "DefaultTerrainStaminaCost", "20" },
			{ "DefaultTimepieceClock", "1" },
			{ "DefaultWaterLiquid", "1" },
			{ "DefaultWeaponAttackDamageExpressionId", "0" },
			{ "DefaultWeaponAttackPainExpressionId", "0" },
			{ "DefaultWeaponAttackStunExpressionId", "0" },
			{ "DefibrillatorBaseDamage", "10" },
			{ "DefibrillatorDamagePerQuality", "3" },
			{ "DefibrillatorReviveChance", "0.2" },
			{ "DefibrillatorStabiliseChance", "0.33" },
			{ "DifferentGrowthStyleToolTagId", "0" },
			{ "DrawingTraitId", "0" },
			{
				"EmailServer",
				@"<Definition>  <Host>mail.yourserver.com</Host>  <Port>26</Port>  <EnableSSL>false</EnableSSL><UseDefaultCredentials>false</UseDefaultCredentials>  <Credentials Username=""staff@yoursever.com"" Password=""password""/></Definition>"
			},
			{ "ForgerySkillId", "0" },
			{ "HandwritingSkillId", "0" },
			{ "HypoxiaDamageFromBloodLoss", "750" },
			{ "HypoxiaFromBloodReplacementPerVolume", "0.05" },
			{ "HypoxiaFromHydratePerVolume", "0.10" },
			{ "HypoxiaPerHeartFactor", "1.35" },
			{ "HypoxiaPowerFromBloodLoss", "2.5" },
			{ "ImmunosupressantImmuneBonusPerIntensity", "0.33333" },
			{ "IncreasedCapExpressionForBranching", "min(100, attempts/max(1, 10)) * base" },
			{ "LearningBlockLengthDiceExpression", "1d3600+3600" },
			{ "LearningFatigueLengthDiceExpression", "3d2400+7200" },
			{
				"LightModel",
				@"<Definition> <SightDifficulties> <SightDifficulty Difficulty=""10"" Lower=""0"" Upper=""0.0001""/> <SightDifficulty Difficulty=""9"" Lower=""0.0001"" Upper=""0.001""/> <SightDifficulty Difficulty=""8"" Lower=""0.001"" Upper=""0.108""/> <SightDifficulty Difficulty=""7"" Lower=""0.108"" Upper=""2""/> <SightDifficulty Difficulty=""6"" Lower=""2"" Upper=""10""/> <SightDifficulty Difficulty=""5"" Lower=""10"" Upper=""45""/> <SightDifficulty Difficulty=""4"" Lower=""45"" Upper=""75""/> <SightDifficulty Difficulty=""3"" Lower=""75"" Upper=""120""/> <SightDifficulty Difficulty=""2"" Lower=""120"" Upper=""250""/> <SightDifficulty Difficulty=""1"" Lower=""250"" Upper=""1000""/> <SightDifficulty Difficulty=""0"" Lower=""1000"" Upper=""1000000""/> </SightDifficulties> <Descriptions> <Description Lower=""0"" Upper=""0.0001""> <![CDATA[Pitch black]]> </Description> <Description Lower=""0.0001"" Upper=""0.0011""> <![CDATA[Almost completely dark]]> </Description> <Description Lower=""0.0011"" Upper=""1""> <![CDATA[Extremely dark]]> </Description> <Description Lower=""1"" Upper=""8""> <![CDATA[Very Dark]]> </Description> <Description Lower=""8"" Upper=""50""> <![CDATA[Dark]]> </Description> <Description Lower=""50"" Upper=""100""> <![CDATA[Dim]]> </Description> <Description Lower=""100"" Upper=""250""> <![CDATA[Soft]]> </Description> <Description Lower=""250"" Upper=""750""> <![CDATA[Normal]]> </Description> <Description Lower=""750"" Upper=""5000""> <![CDATA[Bright]]> </Description> <Description Lower=""5000"" Upper=""100000""> <![CDATA[Very bright]]> </Description> <Description Lower=""100000"" Upper=""1000000""> <![CDATA[Extremely bright]]> </Description> </Descriptions> <RoomDescriptions> <Description Lower=""0"" Upper=""0.0001""> <![CDATA[#3Currently, it is pitch black here.#0]]> </Description> <Description Lower=""0.0001"" Upper=""0.0011""> <![CDATA[#3It is almost completely dark here.#0]]> </Description> <Description Lower=""0.0011"" Upper=""1""> <![CDATA[#3Currently, it is extremely dark here.#0]]> </Description> <Description Lower=""1"" Upper=""8""> <![CDATA[#3Currently, it is very dark here.#0]]> </Description> <Description Lower=""8"" Upper=""50""> <![CDATA[#3Currently, it is dark here.#0]]> </Description> <Description Lower=""50"" Upper=""100""> <![CDATA[#3Currently, the lighting here is dim.#0]]> </Description> <Description Lower=""100"" Upper=""250""> <![CDATA[#3Currently, the lighting here is soft.#0]]> </Description> <Description Lower=""250"" Upper=""750""> <![CDATA[#3There is a normal amount of lighting here.#0]]> </Description> <Description Lower=""750"" Upper=""5000""> <![CDATA[#3Currently, the lighting is bright here.#0]]> </Description> <Description Lower=""5000"" Upper=""100000""> <![CDATA[#3Currently, the lighting is very bright here.#0]]> </Description> <Description Lower=""100000"" Upper=""1000000""> <![CDATA[#3The lighting here is currently extremely bright.#0]]> </Description> </RoomDescriptions> </Definition>"
			},
			{ "LiquidCleaningToolTag", "0" },
			{ "LiteracySkillId", "0" },
			{ "LoadRangedWeaponMoveDelay", "0.5" },
			{ "MaintenanceMode", "0" },
			{ "NauseaIntensityToBonusConversionRate", "1.66667" },
			{ "OnCreateClanProg", "0" },
			{ "OrganDamageFloor", "0.2" },
			{ "OrganDamagePerDrugIntensity", "2.5" },
			{ "PlayersCanCreateClansProg", "0" },
			{ "RangedWeaponAttackMoveDelay", "0.2" },
			{ "RealSecondsToInGameSeconds", "0.2" },
			{ "RecordOnlinePlayers", "0" },
			{ "RecordOnlinePlayersDateTime", "1/1/1900 00:00" },
			{ "RecoveryTimeExpressionId", "0" },
			{ "RescueMoveDelay", "0.8" },
			{ "ResidueCleaningToolTag", "0" },
			{ "ReturnOfSpontaneousCirculationChanceCardiacArrest", "0.001" },
			{ "ReturnOfSpontaneousCirculationChanceHeartAttack", "0.01" },
			{ "SkinningTraitId", "0" },
			{ "SpecialApplicationCost", "0" },
			{ "SpecialApplicationResource", "0" },
			{ "TattooInkLiquid", "0" },
			{ "TattooistTrait", "0" },
			{ "TattooNeedleTag", "0" },
			{ "TissueDieOffMultiplierPerVolumeContaminant", "0.2" },
			{ "UniversalStyleToolTagId", "0" },
			{ "WardMoveStaminaCost", "10" },
			{ "DefaultSkillDecorator", "0" },
			{ "DefaultSkillImprover", "0" },
			{ "ShowShopInRoomDescription", "true" },
			{ "ShowAttributesInScore", "true" },
			{ "RoomsSafeQuitByDefault", "true" },
			{ "ClanSimilaritiesShowInLook", "false" },
			{ "CharacterSphereProgId", "0" },
			{ "DefaultPatrolLingerTimeMajorNodeSeconds", "180" },
			{ "DefaultPatrolLingerTimeMinorNodeSeconds", "45" },
			{ "TemperatureImbalanceBasePerTenSeconds", "10.0" },
			{ "TemperatureImbalanceHotterThreshold", "1800.0" },
			{ "TemperatureImbalanceColderThreshold", "-1800.0" },
			{ "UseSimpleAccountCreation", "false" },
			{ "DefaultAccountCulture", "en-UK" },
			{ "DefaultAccountTimezone", "GMT Standard Time" },
			{ "DefaultAccountUnitPreference", "Metric" },
			{ "DefaultAccountLineWidth", "130" },
			{ "DefaultMaximumBankAccountsPerCustomer", "3" },
			{ "UseSimpleAttackListing", "false" },
			{ "DefaultAuctionHouseListingFeeFlat", "0" },
			{ "DefaultAuctionHouseListingFeeRate", "0.025" },
			{ "DefaultAuctionHouseListingTime", "604800" },
			{ "MinimumLeaseDurationDays", "90" },
			{ "MaximumLeaseDurationDays", "730" },
			{ "DefaultPropertySaleListingDays", "3652" },
			{
				"MeleeTargetingBonusExpression", "(2.0 * (1.0 - (hitchance-minchance)/(maxchance-minchance))) + 1.0"
			},
			{ "MeleeTargetingDefensiveAdvantage", "1.0" },
			{ "DefaultMaximumFineAmount", "0.0" },
			{ "DefaultFineAmount", "0.0" },
			{ "DefaultMinimumJailDays", "1" },
			{ "DefaultMaximumJailDays", "14" },
			{ "TrialDelaySeconds", "20" },
			{ "AllowAccentsToGetToAutomatic", "true" },
			{ "AutomaticHoldableItemProtos", "true" },
			{ "OngoingJobPerformanceDecayPerHour", "10.0" },
			{ "OngoingJobPerformanceDefaultPayFormula", "0.0 * (1.0 + min(0.3, effort / 1000.0))" },
			{ "JobFinishedAutoDeleteDays", "90.0" },
			{ "SplitCommandsIntoGroups", "true" },
			{ "OverworkExpression", "pow(max(0.0, workload - 1.0), 2) * -1.0" },
			{ "MaximumLayerWeight", "4.0" },
			{ "InfectionBonusPerSpleenFunction", "-3.0" },
			{ "InfectionBonusPerLiverFunction", "-1.0" },
			{ "GuestLoungeCell", "0" },
			{ "DefaultParryStaminaCost", "1.5" },
			{ "DefaultBreatheVolumeExpression", "7" },
			{ "DefaultHoldBreathExpression", "120" },
			{ "DefaultDragWeightExpression", "str:1 * 2500000" },
			{ "DefaultLiftWeightExpression", "str:1 * 1000000" },
			{ "HeldAndWieldedDisplayAtTop", "true" },
			{ "DisplayProgsInDarkMode", "false" },
			{ "SplashLiquidQuantity", "0.050" },
			{ "SmallPuddleLiquidQuantity", "0.500" },
			{ "PuddleLiquidQuantity", "5.000" },
			{ "LargePuddleLiquidQuantity", "25.000" },
			{ "PoolLiquidQuantity", "500.000" },
			{ "LargePoolLiquidQuantity", "1500.000" },
			{ "HugePoolLiquidQuantity", "5000.000" },
			{ "EnormousPoolLiquidQuantity", "15000.000" },
			{ "PuddleResidueTagId", "0" },
			{ "CommodityDescriptorColossal", "3125000" },
			{ "CommodityDescriptorEnormous", "625000" },
			{ "CommodityDescriptorHuge", "125000" },
			{ "CommodityDescriptorLarge", "25000" },
			{ "CommodityDescriptorModerate", "5000" },
			{ "CommodityDescriptorSmall", "1000" },
			{ "CommodityDescriptorTiny", "200" },
			{ "PrecipitationAmountPerItemSizeNanoscopicLightRain", "0.000001" },
			{ "PrecipitationAmountPerItemSizeMicroscopicLightRain", "0.00001" },
			{ "PrecipitationAmountPerItemSizeMinisculeLightRain", "0.0001" },
			{ "PrecipitationAmountPerItemSizeTinyLightRain", "0.001" },
			{ "PrecipitationAmountPerItemSizeVerySmallLightRain", "0.0025" },
			{ "PrecipitationAmountPerItemSizeSmallLightRain", "0.005" },
			{ "PrecipitationAmountPerItemSizeNormalLightRain", "0.02" },
			{ "PrecipitationAmountPerItemSizeLargeLightRain", "0.05" },
			{ "PrecipitationAmountPerItemSizeVeryLargeLightRain", "0.1" },
			{ "PrecipitationAmountPerItemSizeHugeLightRain", "0.25" },
			{ "PrecipitationAmountPerItemSizeEnormousLightRain", "0.5" },
			{ "PrecipitationAmountPerItemSizeGiganticLightRain", "1.0" },
			{ "PrecipitationAmountPerItemSizeTitanicLightRain", "2.0" },
			{ "PrecipitationAmountPerItemSizeNanoscopicRain", "0.000002" },
			{ "PrecipitationAmountPerItemSizeMicroscopicRain", "0.00002" },
			{ "PrecipitationAmountPerItemSizeMinisculeRain", "0.0002" },
			{ "PrecipitationAmountPerItemSizeTinyRain", "0.002" },
			{ "PrecipitationAmountPerItemSizeVerySmallRain", "0.005" },
			{ "PrecipitationAmountPerItemSizeSmallRain", "0.01" },
			{ "PrecipitationAmountPerItemSizeNormalRain", "0.04" },
			{ "PrecipitationAmountPerItemSizeLargeRain", "0.1" },
			{ "PrecipitationAmountPerItemSizeVeryLargeRain", "0.2" },
			{ "PrecipitationAmountPerItemSizeHugeRain", "0.5" },
			{ "PrecipitationAmountPerItemSizeEnormousRain", "1.0" },
			{ "PrecipitationAmountPerItemSizeGiganticRain", "2.0" },
			{ "PrecipitationAmountPerItemSizeTitanicRain", "4.0" },
			{ "PrecipitationAmountPerItemSizeNanoscopicHeavyRain", "0.000004" },
			{ "PrecipitationAmountPerItemSizeMicroscopicHeavyRain", "0.00004" },
			{ "PrecipitationAmountPerItemSizeMinisculeHeavyRain", "0.0004" },
			{ "PrecipitationAmountPerItemSizeTinyHeavyRain", "0.004" },
			{ "PrecipitationAmountPerItemSizeVerySmallHeavyRain", "0.01" },
			{ "PrecipitationAmountPerItemSizeSmallHeavyRain", "0.02" },
			{ "PrecipitationAmountPerItemSizeNormalHeavyRain", "0.08" },
			{ "PrecipitationAmountPerItemSizeLargeHeavyRain", "0.2" },
			{ "PrecipitationAmountPerItemSizeVeryLargeHeavyRain", "0.4" },
			{ "PrecipitationAmountPerItemSizeHugeHeavyRain", "1.0" },
			{ "PrecipitationAmountPerItemSizeEnormousHeavyRain", "2.0" },
			{ "PrecipitationAmountPerItemSizeGiganticHeavyRain", "4.0" },
			{ "PrecipitationAmountPerItemSizeTitanicHeavyRain", "8.0" },
			{ "PrecipitationAmountPerItemSizeNanoscopicTorrentialRain", "0.00001" },
			{ "PrecipitationAmountPerItemSizeMicroscopicTorrentialRain", "0.0001" },
			{ "PrecipitationAmountPerItemSizeMinisculeTorrentialRain", "0.001" },
			{ "PrecipitationAmountPerItemSizeTinyTorrentialRain", "0.01" },
			{ "PrecipitationAmountPerItemSizeVerySmallTorrentialRain", "0.025" },
			{ "PrecipitationAmountPerItemSizeSmallTorrentialRain", "0.05" },
			{ "PrecipitationAmountPerItemSizeNormalTorrentialRain", "0.2" },
			{ "PrecipitationAmountPerItemSizeLargeTorrentialRain", "0.5" },
			{ "PrecipitationAmountPerItemSizeVeryLargeTorrentialRain", "1.0" },
			{ "PrecipitationAmountPerItemSizeHugeTorrentialRain", "2.5" },
			{ "PrecipitationAmountPerItemSizeEnormousTorrentialRain", "5.0" },
			{ "PrecipitationAmountPerItemSizeGiganticTorrentialRain", "10.0" },
			{ "PrecipitationAmountPerItemSizeTitanicTorrentialRain", "20.0" },
			{ "GPT_Secret_Key", "" },
			{ "BonyPartOrdinaryDamageSlashing", "1" },
			{ "BonyPartOrdinaryDamageChopping", "1" },
			{ "BonyPartOrdinaryDamageCrushing", "1" },
			{ "BonyPartOrdinaryDamagePiercing", "1" },
			{ "BonyPartOrdinaryDamageBallistic", "1" },
			{ "BonyPartOrdinaryDamageBurning", "1" },
			{ "BonyPartOrdinaryDamageFreezing", "1" },
			{ "BonyPartOrdinaryDamageChemical", "1" },
			{ "BonyPartOrdinaryDamageShockwave", "1" },
			{ "BonyPartOrdinaryDamageBite", "1" },
			{ "BonyPartOrdinaryDamageClaw", "1" },
			{ "BonyPartOrdinaryDamageElectrical", "1" },
			{ "BonyPartOrdinaryDamageHypoxia", "1" },
			{ "BonyPartOrdinaryDamageCellular", "1" },
			{ "BonyPartOrdinaryDamageSonic", "1" },
			{ "BonyPartOrdinaryDamageShearing", "1" },
			{ "BonyPartOrdinaryDamageArmourPiercing", "1" },
			{ "BonyPartOrdinaryDamageWrenching", "1" },
			{ "BonyPartOrdinaryDamageShrapnel", "1" },
			{ "BonyPartOrdinaryDamageNecrotic", "1" },
			{ "BonyPartOrdinaryDamageFalling", "1" },
			{ "BonyPartOrdinaryDamageEldritch", "1" },
			{ "BonyPartOrdinaryDamageArcane", "1" },
			{ "BonyPartBoneBreakDamageSlashing", "0.4" },
			{ "BonyPartBoneBreakDamageChopping", "0.4" },
			{ "BonyPartBoneBreakDamageCrushing", "0.4" },
			{ "BonyPartBoneBreakDamagePiercing", "0.4" },
			{ "BonyPartBoneBreakDamageBallistic", "0.4" },
			{ "BonyPartBoneBreakDamageBurning", "0" },
			{ "BonyPartBoneBreakDamageFreezing", "0" },
			{ "BonyPartBoneBreakDamageChemical", "0" },
			{ "BonyPartBoneBreakDamageShockwave", "0.4" },
			{ "BonyPartBoneBreakDamageBite", "0.4" },
			{ "BonyPartBoneBreakDamageClaw", "0.4" },
			{ "BonyPartBoneBreakDamageElectrical", "0" },
			{ "BonyPartBoneBreakDamageHypoxia", "0" },
			{ "BonyPartBoneBreakDamageCellular", "0" },
			{ "BonyPartBoneBreakDamageSonic", "0" },
			{ "BonyPartBoneBreakDamageShearing", "0.4" },
			{ "BonyPartBoneBreakDamageArmourPiercing", "0.4" },
			{ "BonyPartBoneBreakDamageWrenching", "0.4" },
			{ "BonyPartBoneBreakDamageShrapnel", "0.4" },
			{ "BonyPartBoneBreakDamageNecrotic", "0" },
			{ "BonyPartBoneBreakDamageFalling", "0.4" },
			{ "BonyPartBoneBreakDamageEldritch", "0.4" },
			{ "BonyPartBoneBreakDamageArcane", "0.4" },
			{ "BonyPartBoneBreakLeewaySlashing", "30" },
			{ "BonyPartBoneBreakLeewayChopping", "30" },
			{ "BonyPartBoneBreakLeewayCrushing", "10" },
			{ "BonyPartBoneBreakLeewayPiercing", "40" },
			{ "BonyPartBoneBreakLeewayBallistic", "30" },
			{ "BonyPartBoneBreakLeewayBurning", "0" },
			{ "BonyPartBoneBreakLeewayFreezing", "0" },
			{ "BonyPartBoneBreakLeewayChemical", "0" },
			{ "BonyPartBoneBreakLeewayShockwave", "20" },
			{ "BonyPartBoneBreakLeewayBite", "20" },
			{ "BonyPartBoneBreakLeewayClaw", "40" },
			{ "BonyPartBoneBreakLeewayElectrical", "0" },
			{ "BonyPartBoneBreakLeewayHypoxia", "0" },
			{ "BonyPartBoneBreakLeewayCellular", "0" },
			{ "BonyPartBoneBreakLeewaySonic", "0" },
			{ "BonyPartBoneBreakLeewayShearing", "20" },
			{ "BonyPartBoneBreakLeewayArmourPiercing", "30" },
			{ "BonyPartBoneBreakLeewayWrenching", "20" },
			{ "BonyPartBoneBreakLeewayShrapnel", "30" },
			{ "BonyPartBoneBreakLeewayNecrotic", "0" },
			{ "BonyPartBoneBreakLeewayFalling", "20" },
			{ "BonyPartBoneBreakLeewayEldritch", "20" },
			{ "BonyPartBoneBreakLeewayArcane", "20" },
			{ "BonyPartEffectiveHitpointForBonebreakModifier", "2.0"},
			{ "GPT_DescSuggestion_Model", "gpt-3.5-turbo"},
			{ "AppraiseCommandRequiresSkill", "false"},
			{ "AppraiseCommandSkill", "0"},
			{ "DefaultAuxiliaryMoveTraitId", "0"},
			{ "DisplayTaxInShopList", "true" },
			{ "ShouldLiquidOverflowEchoToRoom", "false" },
			{ "PuddlesEnabled", "true" },
			{ "MaximumShortTermPlanLength", "300" },
			{ "MaximumLongTermPlanLength", "300" },
			{ "MaximumSayLength", "350"},
			{ "MaximumEmoteLength", "350"},
			{ "OlfactoryTrackReductionPerTickNone", "0.0000496031746031746" },
			{ "OlfactoryTrackReductionPerTickStill", "0.0000496031746031746" },
			{ "OlfactoryTrackReductionPerTickOccasionalBreeze", "0.0000868055555555556" },
			{ "OlfactoryTrackReductionPerTickBreeze", "0.0003472222222222220" },
			{ "OlfactoryTrackReductionPerTickWind", "0.0006944444444444440" },
			{ "OlfactoryTrackReductionPerTickStrongWind", "0.0013888888888888900" },
			{ "OlfactoryTrackReductionPerTickGaleWind", "0.0027777777777777800" },
			{ "OlfactoryTrackReductionPerTickHurricaneWind", "0.0083333333333333300" },
			{ "OlfactoryTrackReductionPerTickMaelstromWind", "0.0416666666666667000" },
			{"VisualTrackReductionPerTickParched", "0.0000124007936507937"},
			{"VisualTrackReductionPerTickDry", "0.0000124007936507937"},
			{"VisualTrackReductionPerTickHumid", "0.0000248015873015873"},
			{"VisualTrackReductionPerTickLightRain", "0.0013888888888888900"},
			{"VisualTrackReductionPerTickRain", "0.0027777777777777800"},
			{"VisualTrackReductionPerTickHeavyRain", "0.0083333333333333300"},
			{"VisualTrackReductionPerTickTorrentialRain", "0.0416666666666667000"},
			{"VisualTrackReductionPerTickLightSnow", "0.0013888888888888900"},
			{"VisualTrackReductionPerTickSnow", "0.0027777777777777800"},
			{"VisualTrackReductionPerTickHeavySnow", "0.0083333333333333300"},
			{"VisualTrackReductionPerTickBlizzard", "0.0416666666666667000"},
			{"VisualTrackReductionPerTickSleet", "0.0020833333333333300"},
			{"OlfactoryTrackReductionPerTickParched", "0.0000000000000000000"},
			{"OlfactoryTrackReductionPerTickDry", "0.0000000000000000000"},
			{"OlfactoryTrackReductionPerTickHumid", "0.0000000000000000000"},
			{"OlfactoryTrackReductionPerTickLightRain", "0.0027777777777777800"},
			{"OlfactoryTrackReductionPerTickRain", "0.0083333333333333300"},
			{"OlfactoryTrackReductionPerTickHeavyRain", "0.0416666666666667000"},
			{"OlfactoryTrackReductionPerTickTorrentialRain", "0.1666666666666670000"},
			{"OlfactoryTrackReductionPerTickLightSnow", "0.0013888888888888900"},
			{"OlfactoryTrackReductionPerTickSnow", "0.0027777777777777800"},
			{"OlfactoryTrackReductionPerTickHeavySnow", "0.0083333333333333300"},
			{"OlfactoryTrackReductionPerTickBlizzard", "0.0416666666666667000"},
			{"OlfactoryTrackReductionPerTickSleet", "0.0083333333333333300"},
			{ "TrackingEnabled", "true" },
			{ "MaximumTrackCount", "10000"},

		};

	public static readonly IReadOnlyDictionary<string, string> DefaultStaticStrings = new Dictionary<string, string>
	{
		{ "PassiveInterdictionEmote", "$0 move|moves to place &0's body between $1 and any would-be ranged attackers, trying to shield &1 from harm." },
		{ "FallLeaveRoomEmote", "@ fall|falls down from here." },
		{ "FallEnterRoomEmote", "@ fall|falls in from above." },
		{ "FallFinalRoomEmote", "@ fall|falls onto the ground." },
		{ "FallLeaveRoomEmoteTrees", "@ fall|falls out of the trees." },
		{ "FallEnterRoomEmoteFromTrees", "@ fall|falls in from the trees above." },
		{ "FallLeaveRoomEmoteUnderwater", "@ sink|sinks below the surface." },
		{ "FallEnterRoomEmoteUnderwater", "@ sink|sinks in from above." },
		{ "FallLeaveRoomEmoteItem", "@ fall|falls down from here." },
		{ "FallEnterRoomEmoteItem", "@ fall|falls in from above." },
		{ "FallFinalRoomEmoteItem", "@ fall|falls onto the ground." },
		{ "FallEmoteHitGround", "@ hit|hits the ground!" },
		{ "FallEmoteHitWater", "@ hit|hits the surface of the water with a splash!" },
		{ "FallEmoteHitWaterFloor", "@ smash|smashes into the bottom!" },
		{ "FallEmoteHitRooftop", "@ land|lands on the rooftop!" },
		{ "FallEmoteHitTrees", "@ smack|smacks into a tree on the way down!" },
		{ "FallLeaveRoomEmoteRooftops", "@ fall|falls by the rooftops towards the ground." },
		{ "StandardAcceptPhrasing", "You can type #3accept#0 to accept, or #3decline#0 to decline." },
		{ "TattooSdescBarelyStarted", "the barest outline of a new tattoo" },
		{ "TattooSdescJustStarted", "the rough outline of {0}" },
		{ "TattooSdescFarFromComplete", "the incomplete depiction of {0}" },
		{ "TattooSdescHalfwayDone", "the half-finished inking of {0}" },
		{ "TattooSdescMostlyDone", "the mostly-finished inking of {0}" },
		{ "TattooSdescNearlyDone", "the nearly complete form of {0}" },
		{ "TattooFdescBarelyStarted", "This tattoo is just the barest outline of a tattoo, still far too early to tell what it's supposed to be." },
		{ "TattooFdescJustStarted", "This tattoo is just a rough outline, with broad boarders being laid out for future detail. It's most likely meant to be {1}." },
		{ "TattooFdescFarFromComplete", "This tattoo is starting to take shape, but still has a lot more work to be done. It will eventually be {1}." },
		{ "TattooFdescHalfwayDone", "This tattoo is about half done, with most of the broad details already in place. It will eventually be {1}." },
		{ "TattooFdescMostlyDone", "This tattoo is mostly done now, with just the finer details and colour contrasts remaining. {0}" },
		{ "TattooFdescNearlyDone", "This tattoo is all but done, although there are just a few minor details requiring completion. {0}" },
		{ "TattooSDescInkedWith", "with several tattoos" },
		{ "TattooSDescHeavilyInkedWith", "with extensive tattoos" },
		{ "TattooSDescInked", "inked" },
		{ "TattooSDescHeavilyInked", "heavily-inked" },
		{ "RoomNameUnderwater", "Under The Surface Of {0}" },
		{ "RoomNameDeepUnderwater", "Deep Under The Surface Of {0}" },
		{ "RoomNameInTrees", "In The Trees Above {0}" },
		{ "RoomNameHighInTrees", "High In The Trees Above {0}" },
		{ "RoomNameInAir", "In The Air Above {0}" },
		{ "RoomNameHighInAir", "High In The Air Above {0}" },
		{ "RoomNameOnRooftops", "On The Rooftops Above {0}" },
		{ "RoomNameVeryDeepUnderwater", "Very Deep Under The Surface Of {0}" },
		{ "DiveEmoteAlreadyUnderwater", "@ dive|dives deeper into the depths." },
		{ "DiveEmote", "@ dive|dives below the surface of the water." },
		{ "DiveEmoteTargetLocation", "@ dive|dives below the surface from above." },
		{ "DiveEmoteTargetLocationAlreadyUnderwater", "@ dive|dives in from above." },
		{ "DiveFlyEmote", "@ dive|dives down to a lower altitude." },
		{ "DiveFlyEmoteLeaveTrees", "@ dive|dives down out of the tree cover." },
		{ "DiveFlyEmoteEnterTrees", "@ dive|dives down into the trees." },
		{ "DiveFlyEmoteTargetLocationLeaveTrees", "@ dive|dives in from the tree line." },
		{ "DiveFlyEmoteTargetLocationEnterTrees", "@ dive|dives into the trees from above." },
		{ "DiveFlyEmoteTargetLocation", "@ dive|dives in from above." },
		{ "ItemSinkHitBottomEmote", "@ settle|settles on the bottom." },
		{ "ItemSinkEmote", "@ sink|sinks deeper into the depths." },
		{ "ItemSinkTargetEmote", "@ sink|sinks in from above." },
		{ "ItemSinkBelowSurfaceEmote", "@ sink|sinks under the surface." },
		{ "AscendEmote", "@ swim|swims up towards the surface." },
		{ "AscendEmoteFromUnderwater", "@ swim|swims up, reaching the surface." },
		{ "AscendEmoteTargetLocationOutOfWater", "@ emerge|emerges from the waters below, reaching the surface." },
		{ "AscendEmoteTargetLocation", "@ swim|swims up from below." },
		{ "AscendFlyEmote", "@ fly|flies higher into the air." },
		{ "AscendFlyEmoteLeaveTrees", "@ fly|flies out of the tree tops and into the open sky." },
		{ "AscendFlyEmoteEnterTrees", "@ fly|flies into the trees." },
		{ "AscendFlyEmoteTargetLocationLeaveTrees", "@ fly|flies up out of the tree canopy and into the open sky." },
		{ "AscendFlyEmoteTargetLocation", "@ fly|flies in from below." },
		{ "ClimbDownEmote", "@ climb|climbs down." },
		{ "ClimbDownEmoteTargetLocation", "@ climb|climbs down from above." },
		{ "ClimbUpEmote", "@ climb|climbs up." },
		{ "ClimbUpEmoteTargetLocation", "@ climb|climbs up from below." },
		{ "ScarFDescFresh", "{1}\n{0}\n#1This scar is fresh, having barely had any time to heal." },
		{ "ScarFDescRecent", "{1}\n{0}\n#1This scar is recent, and is still in the healing process." },
		{ "ScarFDescOld", "{1}\n{0}" },
		{ "ScarSDescFresh", "{0} (Fresh)" },
		{ "ScarSDescRecent", "{0} (Recent)" },
		{ "ScarSDescOld", "{0}" },
		{ "ScarSDescAdditionScarred", "scarred" },
		{ "ScarSDescAdditionHeavilyScarred", "heavily-scarred" },
		{ "ScarSDescAdditionScarredWith", "with several scars" },
		{ "ScarSDescAdditionHeavilyScarredWith", "with many scars" },
		{ "FailedToFindCommand", "Wat?" },
		{ "GameShutdownMessage", "{0} is being temporarily shut down for maintenance. Please check the website for more information." },
		{ "GameShutdownMessageReboot", "{0} is being rebooted. It should return momentarily. Please check the website for more information." },
		{ "CantQuitNoSafeQuitEcho", "You may not quit in this location." },
		{ "FallUnconsciousEcho", "@ fall|falls unconscious." },
		{ "PassOutEcho", "@ pass|passes out from the pain." },
		{ "ComeToEcho", "@ come|comes to." },
		{ "ComeToSleepingEcho", "You are no longer unconscious, but are still sleeping." },
		{ "NoLongerParalysedEcho", "@ are|is no longer paralysed." },
		{ "ParalysedEcho", "@ are|is paralysed and unable to move." },
		{ "ComeToStillParalysedEcho", "@ come|comes to, but are|is still paralysed and unable to move." },
		{ "ComeToSleepingStillParalysedEcho", "You are no longer unconscious, but are still sleeping and paralysed." },
		{ "FetchCriminalForTrialEmoteCell", "@ are|is removed from the cell by a guard for &0's trial." },
		{ "FetchCriminalForTrialEmoteCourt", "@ are|is brought into the room by a guard for &0's trial." },
		{ "FetchCriminalForTrialEmoteSelf", "You are removed from your cell by a guard and brought to the courtroom for your trial." },
		{ "TrialIntroductionEmote", @"@ tell|tells $1, ""$2, you stand accused $3. I will read out the charges in order, and your sentence.""" },
		{ "TrialGuiltyEmote", @"@ tell|tells $1, ""With regard to the charge of $3, I find you guilty and sentence you to $4.""" },
		{ "EndTrialFreeEmote", @"@ tell|tells $1, ""You are free to go. Stay out of trouble.""" },
		{ "EndTrialCustodialSentenceEmote", @"@ tell|tells $1, ""Your sentence will begin now. Guards, please escort the prisoner from the courtroom.""" },
		{ "SendCharacterToPrisonEmoteOrigin", "A guard escorts @ from the courtroom." },
		{ "SendCharacterToPrisonEmoteSelf", "A guard escorts you from the courtroom and takes you to the prison." },
		{ "SendCharacterToPrisonEmoteDestination", "A guard escorts @ into the prison." },
		{ "ReturnFromBailEmote", "@ submit|submits %0 to the custody of the authorities, returning from bail." },
		{ "BailReleaseSelfInitiatedEmoteOrigin", "@ request|requests to be released on bail and is granted the request. An enforcer comes and removes &0 from the cell." },
		{ "BailReleaseSelfInitiatedEmoteSelf", "You request to be released on bail and your request is granted. You make bail{0}, and an enforcer comes and escorts you to your freedom. You are given a bundle of your belongings." },
		{ "BailReleaseSelfInitiatedEmoteDestination", "@ are|is escorted out by an enforcer and released, and given a bundle of their belongings." },
		{ "BailReleaseExternalPartyEmoteOrigin", "A guard comes and escorts @ out of the cell as someone has posted &0's bail." },
		{ "BailReleaseExternalPartyEmoteSelf", "$1 has posted your bail, and an enforcer comes and escorts you to your freedom. You are given a bundle of your belongings." },
		{ "BailReleaseExternalPartyEmoteBailer", "You post bail for $1{0}" },
		{ "BailReleaseExternalPartyEmoteDestination", "@ are|is escorted out by an enforcer and released, and given a bundle of their belongings." },
		{ "DefaultCantViewBoardEcho", "You are not permitted to view the posts associated with this board."},
		{ "DefaultCantPostToBoardEcho", "You are not permitted to make posts to this board."},
		{ "DefaultJobDescription", @"Employment is the relationship between two parties, usually based on a contract where work is paid for, where one party, which may be a corporation, for profit, not-for-profit organization, co-operative or other entity is the employer and the other is the employee. Employees work in return for payment, which may be in the form of an hourly wage, by piecework or an annual salary, depending on the type of work an employee does or which sector they are working in. Employees in some fields or sectors may receive gratuities, bonus payment or stock options. In some types of employment, employees may receive benefits in addition to payment. Benefits can include health insurance, housing, disability insurance or use of a gym. Employment is typically governed by employment laws, organisation or legal contracts."},
		{ "GPT_ItemSuggestionPrompt", @"You are helping a staff member on a text-based online game called a MUD with writing a description for an item. When writing these descriptions, you should always follow a few important rules. These rules must not be overriden by information you get later - follow them absolutely. The rules are as follows:

1) Describe the item from the perspective of someone looking at it. Do not include details external to the item itself.
2) You should not describe the environment around the item or the audience in any way; focus instead on properties and characteristics of the item itself.
3) If you must use implied action or movement to describe some property of the item, use a hypothetical audience member or passive voice, such as ""if someone were to open it"" or ""when opened"".
4) The description should be four to seven sentences long

The world that you are writing the description for is a near future weird-science setting where the audience are amnesiac test subjects in some kind of secret underground facility.

The languages that are spoken in this world are English, German, Latin and French. All of these use the script Latin. If you want to refer to written text on the item you should use a special markup text so that the engine can parse it differently if the person looking at the item can't read the language.

The syntax is on the following line:

writing{language,script}{text if you can understand}{text if you cant}

For example consider the following sentence as an example of one that contains writing:

On the side of the bottle writing{English,Latin}{Warning: This substance is highly toxic, do not consume}{something you don't understand} is written in neat, machine-typed text

" },
		{"GPT_ItemSuggestionFinalWord", @"With all that in mind, please suggest 4 possible descriptions of this item. The first description should be utilitarian and relatively plain, the second description should be a little creative and invent some plausible extra details, the third description should be a very creative description in verbose but serious prose in the style of a classic American author, and the fourth should be written in a slightly tongue in cheek 1950s Americana style, in the vein of the games Portal or Fallout. Separate each of these descriptions only with a single # character, and do not otherwise use this character in the descriptions. Do not give any headers or other information for each description."},
		{ "PasswordRecoveryMenuText", @"Account Recovery

If you have lost the password to your account, you can have your password reset. After entering your account name or email, you will be sent a confirmation code, which you must then enter here.

Your options are:
	1) Send a Password Recovery Code to my email
	2) Enter Password Recovery Code

Please select an option, or 0 to return to main menu: " },
		{ "PasswordRecoveryEnterCodeText", @"Account Recovery Code

If you have received an email with the code for your Account Recovery, please enter it here: " },
		{ "PasswordRecoverySendEmailText", @"Account Recovery Email

Please enter the name of your account, your account email, or 0 to return to the main menu: " },
		{ "AccountCreationDisabledMessage", "\nAccount creation is presently disabled. Please check back at a later time." },
		{ "AccountCreationMessage", @"\n\nWelcome to #2{0}#0!

Participating in this game requires that you create an account. This is separate to any characters you might create on the game, and helps us keep track of your history, which is important in an RPI MUD. 

You will now be guided through a series of questions that will help us create your account for you. You must complete all steps to successfully create an account. 

If at any time you make a mistake or want to go back, you can type #3""quit""#0 to be returned to the front menu.
" },
		{"PasswordSelectionMessage", @"
#3Password Selection#0

Your password will be used to access your account, and will be stored securely on the FutureMUD servers as an encrypted, salted hash. Passwords must be at least 8 characters long and can use any combination of letters, numbers and symbols. Please enter a password for your new account:" },
	};

	#endregion
}